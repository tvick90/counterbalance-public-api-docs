{
    "openapi": "3.0.2",
    "info": {
        "title": "Counterbalance API",
        "version": "1.0",
        "description": "Welcome to the Counterbalance API! \n\n# Welcome!",
        "termsOfService": "https://www.counterbalance.io/legal/api-terms",
        "contact": {
            "name": "Counterbalance Support",
            "email": "support@counterbalance.io"
        }
    },
    "servers": [
        {
            "url": "https://api.counterbalance.io/v1",
            "description": "Production API"
        }
    ],
    "paths": {
        "/controller": {
            "get": {
                "summary": "Retrieve Controller",
                "tags": [
                    "Controller"
                ],
                "responses": {},
                "operationId": "get-controller"
            },
            "post": {
                "summary": "Register Controller",
                "operationId": "register-controller",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "",
                "tags": [
                    "Controller"
                ]
            }
        },
        "/site": {
            "get": {
                "summary": "List Sites",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-List-Sites"
                    }
                },
                "operationId": "list-sites",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Retrieve a list of site objects\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:list`\n\n### Filtering Results\nA combination of one or more query parameters may be used to filter returned data. Query parameters are stacked such that using multiple parameters will result in a narrower data set.\n\nWildcard searches are permitted on all query parameters. Wildcard searches are case insensitive and all data is forced to lowercase for matching purposes. See usage examples below.\n\n<!--\ntitle: \"Site Code Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?code=*MN*\n```\n<!--\ntitle: \"Site Name Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?name=*elementary*\n```",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "code",
                        "description": "Filter results by site code. Accepts * wildcard searches."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "description": "Filter results by site name. Accepts * wildcard searches."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "description",
                        "description": "Filter sites by description. Accepts * wildcard searches."
                    }
                ],
                "tags": [
                    "Site"
                ]
            },
            "post": {
                "summary": "Create Site",
                "operationId": "create-site",
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/200-Get-Site"
                    }
                },
                "description": "Create a new site object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:create`\n\n> **Heads Up** This endpoint is subject to `site` quota availabilty\n\n### Defining Building Category & Type\nNew sites must be defined with a building `category` and `type`. In some cases, a type will have additional sub-types, in which case, the `sub_type` paramater must also be provided. \n\nCategory, type, and sub_type are all defined using an index ID. The various indexes and their values can be found in [this support article](https://counterbalance.zendesk.com/hc/en-us/articles/5405264196499).",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "required": true
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Create-Site"
                },
                "tags": [
                    "Site"
                ]
            }
        },
        "/site/{siteId}": {
            "get": {
                "summary": "Retrieve a Site",
                "tags": [
                    "Site"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Retrieve-Site"
                    }
                },
                "operationId": "get-site",
                "parameters": [],
                "security": [
                    {
                        "Bearer Token": []
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/siteId"
                }
            ]
        },
        "/site/address": {
            "parameters": [],
            "put": {
                "summary": "Add Address to Site",
                "operationId": "create-address",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                },
                                "examples": {
                                    "Response": {
                                        "$ref": "#/components/examples/Address-Object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400-Address-Already-Exists"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Site-Not-Found"
                    }
                },
                "description": "Create a new address object and attach it to a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:update`\n\n### Address Geocoding\nBy default, new addresses are geocoded to determine their GPS coordinates, timezone, and to fill-in various extended properties such as the locality, country, and ZIP or postcode. \n\nGeocoding is an optional process and can be skipped by setting `geocode` to `false` in the request body. If geocoding is skipped, the following additional body parameters become required: `county`, `country`, `postcode`, `timezone`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "in": "query",
                        "name": "@site",
                        "description": "A valid site UUID for which to assign this address"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "required": true
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Create-Address"
                },
                "tags": [
                    "Address"
                ]
            }
        },
        "/site/address/{addressId}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/addressId"
                }
            ],
            "get": {
                "summary": "Retrieve Address",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Get-Address"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Address-Not-Found"
                    }
                },
                "operationId": "get-address",
                "description": "### Synopsis\nRetrieve the details for the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:read`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "tags": [
                    "Address"
                ]
            },
            "patch": {
                "summary": "Update Address",
                "operationId": "update-address",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Get-Address"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Address-Not-Found"
                    }
                },
                "description": "Update an address object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:address:*`,`sites:address:update`",
                "parameters": [],
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Update-Address"
                },
                "tags": [
                    "Address"
                ]
            },
            "delete": {
                "summary": "Delete Address",
                "operationId": "delete-address",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Address-Not-Found"
                    }
                },
                "description": "Delete an address object\n\n**Required Permissions:** `*`,`sites:*`,`sites:address:*`,`sites:address:delete`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "tags": [
                    "Address"
                ]
            }
        },
        "/site/address/{addressId}/operation": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "addressId",
                    "in": "path",
                    "required": true,
                    "description": "A valid address UUID"
                }
            ],
            "post": {
                "summary": "Perform Address Operations",
                "operationId": "address-operations",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Get-Address"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Address-Not-Found"
                    }
                },
                "description": "Perform operations on an address\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:address:*`,`sites:address:update`\n\n### Supported Operations\nThe following operations are currently supported:\n\n#### Address Normalization\nAn existing address object can be normalized or re-normalized by specifying the operation as `normalize`. The address' existing lines, city, and state values are used to generate a normalization query and updates are performed based on these values. If normalization data is incorrect, try adjusting these parameters and re-normalizing. \n\nWhen an address is normalized, the following properties are looked up and overridden: `city`,`state`,`latitude`,`longitude`,`postcode`,`locality`,`county`,`country`,`timezone`\n",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "operation": {
                                        "type": "string",
                                        "enum": [
                                            "normalize"
                                        ],
                                        "description": "The operation to perform"
                                    }
                                },
                                "required": [
                                    "operation"
                                ]
                            },
                            "examples": {
                                "Example": {
                                    "value": {
                                        "operation": "normalize"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Address"
                ]
            }
        },
        "/site/floor": {
            "get": {
                "summary": "List Floors",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-List-Floors"
                    }
                },
                "operationId": "list-floors",
                "description": "Retrieve a list of floors\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:list`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/@siteId"
                    }
                ],
                "tags": [
                    "Floor"
                ]
            },
            "post": {
                "summary": "Create Floor",
                "operationId": "create-floor",
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/200-Get-Floor"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Site-Not-Found"
                    }
                },
                "description": "Create a new floor and assign it to a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:create`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "tags": [
                    "Floor"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Create-Floor"
                }
            },
            "parameters": []
        },
        "/site/floor/{floorId}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/floorId"
                }
            ],
            "get": {
                "summary": "Retrieve Floor",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Get-Floor"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Floor-Not-Found"
                    }
                },
                "operationId": "get-floor",
                "description": "Retrieve a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:read`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "tags": [
                    "Floor"
                ]
            },
            "patch": {
                "summary": "Update Floor",
                "operationId": "update-floor",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Get-Floor"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Floor-Not-Found"
                    }
                },
                "description": "Update a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:update`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Update-Floor"
                },
                "tags": [
                    "Floor"
                ]
            },
            "delete": {
                "summary": "Delete Floor",
                "operationId": "delete-floor",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400-Floor-Not-Empty"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Floor-Not-Found"
                    }
                },
                "description": "Delete a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:delete`\n\n<!-- theme: danger -->\n> **Danger** This cannot be undone!",
                "tags": [
                    "Floor"
                ]
            }
        },
        "/site/room": {
            "get": {
                "summary": "List Rooms",
                "operationId": "list-rooms",
                "description": "Retrieve a list of rooms\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:list`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/@siteId"
                    },
                    {
                        "$ref": "#/components/parameters/@floorId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-List-Rooms"
                    }
                },
                "tags": [
                    "Room"
                ]
            },
            "post": {
                "summary": "Create Room",
                "operationId": "create-room",
                "description": "Create a new room and assign it to a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:create`\n\n### Defining Room Occupancy\nThe room occupancy classification must be specifid in the `occupancy` body parameter. One of the [International Building Code (IBC)](https://buildingcodetrainer.com/building-occupancy-classification-occupancy-types-explained/) occupancy codes is required and all occupancies are considered valid values.\n\n### Defining Room Area\nThe `area` body parameter is required and should contain the net area of the room in localized units (square meters or square feet). Only integer values are permitted.\n\n### Defining Room Volume\nThe room volume can be explicitly provided in the `volume` body parameter. The volume should be expressed in the same localized units as the room area. Only integer values are permitted.\n\nIf the volume is not defined, the `ceiling_height` body parameter, if provided, is used to calculate the room volume using the area specified. ",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/200-Get-Room"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Floor-Not-Found"
                    }
                },
                "tags": [
                    "Room"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Create-Room"
                }
            }
        },
        "/site/room/{roomId}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/roomId"
                }
            ],
            "get": {
                "summary": "Retrieve Room",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Get-Room"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Room-Not-Found"
                    }
                },
                "operationId": "get-room",
                "description": "Retrieve a room\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:read`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "tags": [
                    "Room"
                ]
            },
            "patch": {
                "summary": "Update Room",
                "operationId": "update-room",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Get-Room"
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Room-Not-Found"
                    }
                },
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Update a room\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:room:*`,`sites:room:update`",
                "tags": [
                    "Room"
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Update-Room"
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "required": true
                    }
                ]
            },
            "delete": {
                "summary": "Delete Room",
                "operationId": "delete-room",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Room-Not-Found"
                    }
                },
                "description": "Delete a room\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:delete`\n\n<!-- theme: danger -->\n> _**Heads Up** This cannot be undone!_",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "tags": [
                    "Room"
                ]
            }
        },
        "/site/utilities/geocode": {
            "get": {
                "summary": "Retrieve Geocoding by Query",
                "tags": [
                    "Utilities"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Geocode-Search"
                    }
                },
                "operationId": "get-geocode",
                "description": "Geocode a search query\n\n**Required Permissions:** `*`,`view:console*`\n\n### Accepted Queries\n*coming soon*",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "query",
                        "required": true,
                        "description": "A geocode search query"
                    }
                ],
                "security": [
                    {
                        "Bearer Token": []
                    }
                ]
            }
        },
        "/site/utilities/timezone": {
            "get": {
                "summary": "Retrieve Timezone Details",
                "tags": [
                    "Utilities"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Get-Timezone-Object"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "No Parameters": {
                                        "value": {
                                            "error": {
                                                "message": "Invalid request",
                                                "console": "Specify either an IANA timezone ID, coordinates, or an address ID",
                                                "code": 400
                                            },
                                            "logging_hash": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404-Address-Not-Found"
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "Invalid Parameter Combination": {
                                        "value": {
                                            "error": {
                                                "message": "Invalid parameter combination",
                                                "console": "Parameters timezone, coordinates, and address are mutually exclusive. Specify only one.",
                                                "code": 409
                                            },
                                            "logging_hash": null
                                        }
                                    },
                                    "Invalid Address Geocoding": {
                                        "value": {
                                            "error": {
                                                "message": "Invalid address geocoding",
                                                "console": "The address ID ... is not geocoded and we have no coordinates to check",
                                                "code": 409
                                            },
                                            "logging_hash": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-timezone",
                "description": "### Synopsis\nRetrieve timezone details including the current time\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:utilities:*`,`sites:utilities:timezone`\n* Licensed Feature: `sites_base`\n\n### Specifying Coordinates or Address ID\nTimezone details can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n### Specifying am IANA Timezone ID\nTimezone details can be obtained for any Timezone by specifying the IANA timezone ID\n\n<!-- theme: warning-->\n> _Parameters `timezone`, `coordinates` and `@address` are mutually exclusive. Passing more than one will result in an error_\n",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "timezone",
                        "description": "An IANA timezone ID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "coordinates",
                        "description": "Get the timezone for the specified coordinates"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "in": "query",
                        "name": "@address",
                        "description": "Get the timezone for the specified address ID"
                    }
                ],
                "security": [
                    {
                        "Bearer Token": []
                    }
                ]
            }
        },
        "/tenant": {
            "get": {
                "summary": "Retrieve Tenant Account",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Tenant-Account"
                    }
                },
                "operationId": "get-tenant",
                "description": "Retrieve the tenant account for the authenticated user\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:read`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "tags": [
                    "Tenant"
                ]
            },
            "post": {
                "summary": "Create Tenant Account",
                "operationId": "create-tenant",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success_message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Response": {
                                        "value": {
                                            "success_message": "The new tenant account was created! Email confirmation required."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/components/responses/503-Tenant-Create-Error"
                    }
                },
                "description": "Create a new tenant account (aka, account signup)\n\n__Required Permissions:__ _none_\n\n### Accepting the Terms of Service\nThe [Terms of Service](https://www.counterbalance.io/terms) must be accepted before the account can be created. The `accept_terms` body field must be set to `true` in order for the request to be completed successfully.\n\n### Account Confirmation\nNew tenant accounts created via this endpoint must be confirmed before they will be activated. The user will be emailed a confirmation code and the account must be confirmed using the __Confirm Tenant Account__ operations endpoint.\n\n### Password Strength\nThe password specified must meet the following requirements:\n\n* Must be at least 8-characters in length\n* Lower case (a-z), upper case (A-Z) and numbers (0-9)\n* Special characters (!@#$%^&*)\n* No more than 2 identical characters in a row\n\nNIST recommends a minimum character length of 8, and suggests that length is a better indicator of strength than complexity.\n\n<!-- theme: warning -->\n> **Heads Up:** A password will be rejected if it contains common dictionary phrases or the user's first name, last name, or shortname.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "given_name": {
                                        "type": "string",
                                        "description": "The tenant owner's given (first) name"
                                    },
                                    "family_name": {
                                        "type": "string",
                                        "description": "The tenant owner's sur (last) name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "The tenant owner's email address"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "description": "The tenant owner's desired login password"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "description": "The name of the new tenant account"
                                    },
                                    "accept_terms": {
                                        "type": "boolean",
                                        "description": "Set to `true` to indicate acceptance of the Counterbalance Terms of Service"
                                    }
                                },
                                "required": [
                                    "given_name",
                                    "family_name",
                                    "email",
                                    "password",
                                    "company_name",
                                    "accept_terms"
                                ]
                            },
                            "examples": {
                                "Example": {
                                    "value": {
                                        "given_name": "Taylor",
                                        "family_name": "Vick",
                                        "email": "hello@counterbalance.io",
                                        "password": "Se@ttle1!",
                                        "company_name": "Counterbalance Software",
                                        "accept_terms": true
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        },
                        "in": "header",
                        "name": "Content-Type"
                    }
                ],
                "tags": [
                    "Account"
                ]
            },
            "patch": {
                "summary": "Update Tenant Account",
                "operationId": "update-tenant",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Tenant-Account"
                    }
                },
                "description": "Update the tenant account for the authenticated user\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:update`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 240,
                                        "description": "The company or organization name for the tenant",
                                        "minLength": 1
                                    },
                                    "primary_contact": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "UUID of the user designated as the primary contact for the tenant account"
                                    }
                                }
                            },
                            "examples": {
                                "Example": {
                                    "$ref": "#/components/examples/Update-Tenant-Body"
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        },
                        "in": "header",
                        "name": "Content-Type"
                    }
                ],
                "tags": [
                    "Account"
                ]
            },
            "delete": {
                "summary": "Delete Tenant Account",
                "operationId": "delete-tenant",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "description": "Delete the tenant account of the authenticated user\n\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:delete`\n\n### Immediate Account Termination",
                "tags": [
                    "Account"
                ]
            }
        },
        "/tenant/quota": {
            "get": {
                "summary": "RetrieveTenant Quota Summary",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Tenant-Quota-Summary"
                    }
                },
                "operationId": "get-tenant-quota",
                "description": "Retrieve a list of authorized platform features and a summary of metered tenant objects and their usage for the authenticated user's tenant account\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:quota:*`,`tenant:quota:read`\n\n> **Please Note:** This endpoint will return all the features and quotas for the tenant account, regardless of the authenticated user's ability to use or access them",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean",
                            "default": "false"
                        },
                        "in": "query",
                        "name": "features_only",
                        "description": "Only return the authorized features, excludes quota summary and usage details"
                    }
                ],
                "tags": [
                    "Quota"
                ]
            }
        },
        "/tenant/confirm": {
            "post": {
                "summary": "Confirm Tenant Account",
                "operationId": "post-v1-tenant-confirm",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success_message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "success_message": "Tenant account has been successfully confirmed!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Confirm a newly-created tenant account\n\nThe following prerequisites are required for this endpoint:\n* The tenant account confirmation code _(emailed to the new user)_\n* Permissions _(at least one):_ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:update`\n\n> **Please Note:** A confirm operation can only be completed by the user who created the tenant acccount",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "description": "A six-digit confirmation code",
                                        "minLength": 6,
                                        "maxLength": 6,
                                        "default": "645881"
                                    }
                                },
                                "required": [
                                    "code"
                                ]
                            },
                            "examples": {
                                "Example": {
                                    "value": {
                                        "code": "645881"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tenant"
                ]
            }
        },
        "/tenant/onboarding": {
            "parameters": [],
            "post": {
                "summary": "Complete Tenant Onboarding",
                "operationId": "complete-tenant-onboarding",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Complete-Onboarding"
                    }
                },
                "description": "Mark the tenant account for the authenticated user as having completed onboarding\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:update`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "null"
                            },
                            "examples": {
                                "Example": {
                                    "value": null
                                }
                            }
                        }
                    },
                    "description": "*No request body is necesssary for this request*"
                },
                "tags": [
                    "Tenant"
                ]
            }
        },
        "/tenant/preferences": {
            "get": {
                "summary": "RetrieveTenant Preferences",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Tenant-Preferences"
                    }
                },
                "operationId": "get-tenant-preferences",
                "description": "Retrieve platform preferences set for the authenticated user's tenant account\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:read`",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "description": "application/json"
                    }
                ],
                "tags": [
                    "Preferences"
                ]
            },
            "patch": {
                "summary": "Update Tenant Preferences",
                "operationId": "update-tenant-preferences",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200-Tenant-Preferences"
                    }
                },
                "description": "Update platform preferences set for the authenticated user's tenant account\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:update`",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "name": "Content-Type",
                        "description": "Application-json"
                    }
                ],
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenant-Preferences"
                            }
                        }
                    }
                },
                "tags": [
                    "Preferences"
                ]
            }
        },
        "/tenant/deletion-pin": {
            "post": {
                "summary": "Set Deletion PIN",
                "operationId": "post-v1-tenant-deletion-pin",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant-Deletion-PIN"
                                }
                            }
                        }
                    }
                },
                "description": "Set a deletion PIN that allows Counterbalance Support to permanently delete a tenant account",
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "tags": [
                    "Tenant"
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Bearer Token": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "responses": {
            "Retrieve-Tenant-Account": {
                "description": "Example response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Tenant-Account"
                        }
                    }
                }
            },
            "Retrieve-Site": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Site"
                        }
                    }
                }
            },
            "404-Site-Not-Found": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Response": {
                                "value": {
                                    "error": {
                                        "message": "Site not found",
                                        "console": "The site ID ... could not be found in the database",
                                        "code": 404
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "404-Floor-Not-Found": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Response": {
                                "value": {
                                    "error": {
                                        "message": "Floor not found",
                                        "console": "The floor ID ... could not be found in the database",
                                        "code": 404
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "404-Room-Not-Found": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Response": {
                                "value": {
                                    "error": {
                                        "message": "Room not found",
                                        "console": "The room ID ... could not be found in the database",
                                        "code": 404
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "400-Site-Not-Empty": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Response": {
                                "value": {
                                    "error": {
                                        "message": "Site is not empty",
                                        "console": "The site ID ... cannot be deleted while it contains floors. Delete the associated floorsand try again.",
                                        "code": 400
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "400-Floor-Not-Empty": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Response": {
                                "value": {
                                    "error": {
                                        "message": "Floor not empty",
                                        "console": "The floor ID ... cannot be deleted while it contains rooms. Delete the associated rooms and try again.",
                                        "code": 400
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "200-Get-Floor": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Floor"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Floor-Object"
                            }
                        }
                    }
                }
            },
            "200-Get-Room": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Room"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Room-Object"
                            }
                        }
                    }
                }
            },
            "200-Get-Site": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Site"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Site-Object"
                            }
                        }
                    }
                }
            },
            "200-Get-Address": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Address"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Address-Object"
                            }
                        }
                    }
                }
            },
            "404-Address-Not-Found": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Response": {
                                "value": {
                                    "error": {
                                        "message": "Address not found",
                                        "console": "The address ID ... could not be found in the database",
                                        "code": 404
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "400-Address-Already-Exists": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Response": {
                                "value": {
                                    "error": {
                                        "message": "Site already has an address",
                                        "console": "Update or delete the existing address",
                                        "code": 400
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "409-No-Address-Geocoding": {
                "description": "Conflict",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Invalid Geocoding": {
                                "value": {
                                    "error": {
                                        "message": "Invalid address geocoding",
                                        "console": "The address ID ... is not geocoded and we have no coordinates to check",
                                        "code": 409
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "200-Get-Timezone-Object": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Time-Zone"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Timezone-Object"
                            }
                        }
                    }
                }
            },
            "200-List-Sites": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "description": "The number of site objects returned"
                                },
                                "index": {
                                    "type": "array",
                                    "description": "An array of the returned site object UUIDs",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "data": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "An array of site objects",
                                    "items": {
                                        "$ref": "#/components/schemas/Site"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Site-Object-List"
                            }
                        }
                    }
                }
            },
            "200-List-Floors": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "description": "The number of floor objects returned"
                                },
                                "index": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "data": {
                                    "type": "array",
                                    "description": "An array of floor objects",
                                    "items": {
                                        "$ref": "#/components/schemas/Floor"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Floor-Object-List"
                            }
                        }
                    }
                }
            },
            "200-List-Rooms": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer",
                                    "description": "The number of room objects returned"
                                },
                                "index": {
                                    "type": "array",
                                    "description": "",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "data": {
                                    "type": "array",
                                    "description": "An array of room objects",
                                    "items": {
                                        "$ref": "#/components/schemas/Room"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Room-Object-List"
                            }
                        }
                    }
                }
            },
            "200-Geocode-Search": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Geocode-Search"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Geocode-Search"
                            }
                        }
                    }
                }
            },
            "200-Tenant-Account": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Tenant-Account"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Tenant-Account"
                            }
                        }
                    }
                }
            },
            "201-Create-Tenant": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Generic-Response"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Create-Tenant-Account"
                            }
                        }
                    }
                }
            },
            "200-Tenant-Quota-Summary": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Tenant-Quota-Summary"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Tenant-Quota-Summary"
                            }
                        }
                    }
                }
            },
            "200-Tenant-Confirmed": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success_message": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Confirm-Tenant-Account"
                            }
                        }
                    }
                }
            },
            "503-Tenant-Create-Error": {
                "description": "Service Unavailable",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "Response": {
                                "value": {
                                    "error": {
                                        "message": "We are unable to process your request right now. Please try again later.",
                                        "console": "There was an error while creating your account. Please try again later. If the issue persists, please contact support and provide the loggin hash provided.",
                                        "code": 503
                                    },
                                    "logging_hash": "..."
                                }
                            }
                        }
                    }
                }
            },
            "200-Complete-Onboarding": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Generic-Response"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Onboard-Tenant-Account"
                            }
                        }
                    }
                }
            },
            "200-Tenant-Preferences": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Tenant-Preferences"
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Tenant-Preferences"
                            }
                        }
                    }
                },
                "headers": {
                    "Content-Type": {
                        "schema": {
                            "type": "string"
                        },
                        "description": "Application/json"
                    }
                }
            }
        },
        "schemas": {
            "Address": {
                "description": "",
                "type": "object",
                "title": "Address",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true
                    },
                    "@site": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "locality": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "county": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "number"
                    },
                    "country": {
                        "type": "string"
                    },
                    "formatted": {
                        "type": "string"
                    },
                    "geolocation": {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "number"
                            },
                            "longitude": {
                                "type": "number"
                            }
                        }
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "designations": {
                        "type": "object",
                        "properties": {
                            "primary_mailing": {
                                "type": "boolean"
                            },
                            "primary_billing": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "x-tags": [
                    "Address"
                ]
            },
            "Floor": {
                "description": "",
                "type": "object",
                "title": "Floor",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true
                    },
                    "@site": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "below_grade": {
                                "type": "boolean"
                            },
                            "gross_floor_area": {
                                "type": "number",
                                "readOnly": true
                            },
                            "room_count": {
                                "type": "number",
                                "readOnly": true
                            },
                            "net_room_area": {
                                "type": "number",
                                "readOnly": true
                            }
                        }
                    }
                },
                "x-tags": [
                    "Floor"
                ]
            },
            "Error": {
                "title": "Typical Error Response",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string",
                                "description": "The error that occurred"
                            },
                            "console": {
                                "type": "string",
                                "description": "Additional error output and further instruction"
                            },
                            "code": {
                                "type": "number",
                                "description": "The HTTP error code"
                            }
                        },
                        "required": [
                            "message",
                            "console",
                            "code"
                        ]
                    },
                    "logging_hash": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A logging entry ID for debugging"
                    }
                }
            },
            "Geocode-Search": {
                "description": "",
                "type": "object",
                "x-examples": {
                    "Example": {
                        "$ref": "#/components/examples/Geocode-Search"
                    }
                },
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "geolocation": {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "number"
                            },
                            "longitude": {
                                "type": "number"
                            }
                        }
                    },
                    "geometry": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "title": "Geocode Search",
                "x-tags": [
                    "Utilities"
                ]
            },
            "Tenant-Account": {
                "description": "",
                "type": "object",
                "title": "Tenant Account Object",
                "x-examples": {
                    "Example": {
                        "id": "d6797ebf-5b00-4a59-b3e5-19711b4c55bb",
                        "name": "Figgis Agency",
                        "flags": {
                            "active": true,
                            "has_subscription": true,
                            "has_billing_account": true,
                            "locked": false,
                            "confirmed": true,
                            "deleted": false
                        },
                        "billing_id": "cus_GZBdOM86hQZldD",
                        "locale": "en-us",
                        "primary_contact": {
                            "id": "1b17e73b-4cf7-4b47-a0f8-46f878ef7bf1",
                            "name": {
                                "given": "Cyril",
                                "family": "Figgis",
                                "full": "Cyril Figgis"
                            },
                            "email": "cyril@figgisagency.com",
                            "phone": {
                                "primary": {
                                    "type": null,
                                    "number": null
                                }
                            }
                        },
                        "subscription": {
                            "tier": 3,
                            "sku": "plan_GvzroFXIrnFYdH",
                            "active": true
                        },
                        "trial": {
                            "status": "Never Started",
                            "used": false,
                            "active": false,
                            "expired": false,
                            "expires": 0
                        },
                        "addresses": {
                            "mailing": "f3643601-d122-47c5-893c-1f108c07d840",
                            "billing": null
                        },
                        "milestones": {
                            "account_created": {
                                "status": true,
                                "timestamp": 1517451002
                            },
                            "account_deleted": {
                                "status": false,
                                "timestamp": 0
                            },
                            "account_confirmation": {
                                "status": true,
                                "timestamp": 1580183430
                            },
                            "onboarded": {
                                "status": true,
                                "timestamp": 1580183430
                            },
                            "accepted_terms": {
                                "status": false,
                                "timestamp": 0
                            },
                            "accepted_billing_terms": {
                                "status": false,
                                "timestamp": 0
                            },
                            "accepted_subscription_terms": {
                                "status": false,
                                "timestamp": 0
                            }
                        }
                    }
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The UUID of the tenant account"
                    },
                    "name": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean"
                            },
                            "has_billing_account": {
                                "type": "boolean"
                            },
                            "locked": {
                                "type": "boolean"
                            },
                            "confirmed": {
                                "type": "boolean"
                            },
                            "deleted": {
                                "type": "boolean"
                            }
                        }
                    },
                    "tier": {
                        "default": 1,
                        "type": "integer",
                        "readOnly": true
                    },
                    "billing_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "locale": {
                        "type": "string"
                    },
                    "primary_contact": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "name": {
                                "type": "object",
                                "properties": {
                                    "given": {
                                        "type": "string"
                                    },
                                    "family": {
                                        "type": "string"
                                    },
                                    "full": {
                                        "type": "string"
                                    }
                                }
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "object",
                                "properties": {
                                    "primary": {
                                        "type": "object",
                                        "properties": {
                                            "type": {},
                                            "number": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "addresses": {
                        "type": "object",
                        "properties": {
                            "mailing": {
                                "type": "string",
                                "format": "uuid",
                                "nullable": true
                            },
                            "billing": {
                                "type": "string",
                                "format": "uuid",
                                "nullable": true
                            }
                        }
                    },
                    "milestones": {
                        "type": "object",
                        "properties": {
                            "account_created": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            },
                            "account_deleted": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            },
                            "account_confirmation": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            },
                            "onboarded": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            },
                            "accepted_terms": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            },
                            "accepted_billing_terms": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            },
                            "accepted_subscription_terms": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "x-tags": [
                    "Account"
                ]
            },
            "Tenant-Quota-Object": {
                "description": "",
                "type": "object",
                "x-examples": {},
                "title": "Tenant Quota Object",
                "x-internal": false,
                "x-tags": [
                    "Quota"
                ],
                "properties": {
                    "usage": {
                        "type": "object",
                        "properties": {
                            "collector": {
                                "type": "number"
                            },
                            "controller": {
                                "type": "number"
                            },
                            "equipment": {
                                "type": "number"
                            },
                            "fdd_rule": {
                                "type": "number"
                            },
                            "gateway": {
                                "type": "number"
                            },
                            "kiosk": {
                                "type": "number"
                            },
                            "meter": {
                                "type": "number"
                            },
                            "point": {
                                "type": "number"
                            },
                            "record_user": {
                                "type": "number"
                            },
                            "reset": {
                                "type": "number"
                            },
                            "routine": {
                                "type": "number"
                            },
                            "seat": {
                                "type": "number"
                            },
                            "site": {
                                "type": "number"
                            },
                            "trigger": {
                                "type": "number"
                            },
                            "user": {
                                "type": "number"
                            }
                        }
                    },
                    "tenant": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "billing_id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "tier": {
                                "type": "number"
                            },
                            "account_type": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "quotas": {
                        "type": "object",
                        "properties": {
                            "collector": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "controller": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "equipment": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "fdd_rule": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "gateway": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "kiosk": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "meter": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "point": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "record_user": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "report_schedule": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "reset": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "routine": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "seat": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "site": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "trigger": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            },
                            "user": {
                                "$ref": "#/components/schemas/Tenant-Quota-Item-Object"
                            }
                        }
                    },
                    "composition": {
                        "type": "object",
                        "properties": {
                            "base": {
                                "type": "object",
                                "properties": {
                                    "included_quotas": {
                                        "type": "object",
                                        "properties": {
                                            "controller": {
                                                "type": "number"
                                            },
                                            "gateway": {
                                                "type": "number"
                                            },
                                            "meter": {
                                                "type": "number"
                                            },
                                            "point": {
                                                "type": "number"
                                            },
                                            "seat": {
                                                "type": "number"
                                            },
                                            "site": {
                                                "type": "number"
                                            },
                                            "record_user": {}
                                        }
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "purchased_items": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "si_HZ3bajOlRzV6Yz"
                                        },
                                        "product": {
                                            "type": "string",
                                            "example": "prod_HZ369tGn3VJSVa"
                                        },
                                        "plan": {
                                            "type": "string",
                                            "example": "price_1Gzv76J5K0z3IHPXeoVpLSY0"
                                        },
                                        "quantity": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tenant-Preferences": {
                "description": "",
                "type": "object",
                "properties": {
                    "display_name_format": {
                        "type": "string",
                        "minLength": 1
                    },
                    "shell": {
                        "type": "object",
                        "properties": {
                            "theme": {
                                "type": "string",
                                "minLength": 1
                            },
                            "pagination": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "default_limit": {
                                        "type": "number",
                                        "default": 10
                                    }
                                }
                            },
                            "disabled_applications": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "title": "Tenant Preferences Object",
                "x-tags": [
                    "Preferences"
                ]
            },
            "Tenant-Deletion-PIN": {
                "description": "",
                "type": "object",
                "properties": {
                    "pin": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 8,
                        "description": "An eight-character deletion PIN"
                    }
                },
                "x-examples": {
                    "Example": {
                        "pin": "71VIFU22"
                    }
                },
                "title": "Tenant Deletion PIN Request Body",
                "x-tags": [
                    "Operations"
                ]
            },
            "Tenant-Quota-Item-Object": {
                "description": "",
                "type": "object",
                "title": "Quota Item Object",
                "properties": {
                    "usage": {
                        "type": "number",
                        "description": "The number of objects of this type"
                    },
                    "quota": {
                        "type": "object",
                        "properties": {
                            "included": {
                                "type": "number",
                                "description": "The quota quantity included with the base account"
                            },
                            "purchased": {
                                "type": "number",
                                "description": "The quota quantity that has been added via purchased SKUs"
                            },
                            "total": {
                                "type": "number",
                                "description": "A simple formula of `included` + `purchased`"
                            }
                        }
                    },
                    "remaining": {
                        "type": "number",
                        "description": "A simple formula of `total` - `usage`"
                    },
                    "status": {
                        "type": "object",
                        "properties": {
                            "can_add_more": {
                                "type": "boolean",
                                "description": "Indicates that the quota has not been met and additional objects can be added"
                            },
                            "is_exceeded": {
                                "type": "boolean",
                                "description": "Indicates that the quota limit has been exceeded"
                            },
                            "is_met": {
                                "type": "boolean",
                                "description": "Indicates the quota limit has been reached"
                            }
                        }
                    }
                },
                "x-tags": [
                    "Quota"
                ]
            },
            "Site": {
                "description": "",
                "type": "object",
                "title": "Site",
                "x-tags": [
                    "Site"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The site object UUID",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp the site object was created",
                        "readOnly": true
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp the site object was last modified",
                        "nullable": true,
                        "readOnly": true
                    },
                    "code": {
                        "type": "string",
                        "description": "A unique site code or abbreviation",
                        "maxLength": 32
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the site object",
                        "maxLength": 120
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "@address": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "classification": {
                        "type": "object",
                        "properties": {
                            "category": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "sub_type": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "occupancy": {
                        "type": "object",
                        "properties": {
                            "default": {
                                "type": "string",
                                "enum": [
                                    "A-1",
                                    "A-2",
                                    "A-3",
                                    "A-4",
                                    "A-5",
                                    "B",
                                    "E",
                                    "F-1",
                                    "F-2",
                                    "H-1",
                                    "H-2",
                                    "H-3",
                                    "H-4",
                                    "H-5",
                                    "I-1",
                                    "I-2",
                                    "I-3",
                                    "I-4",
                                    "M",
                                    "R-1",
                                    "R-2",
                                    "R-3",
                                    "R-3.1",
                                    "R-4",
                                    "S-1",
                                    "S-2",
                                    "U"
                                ]
                            },
                            "allowed": {
                                "type": "array",
                                "description": "If set, room objects must be one of the occupancies in the given array",
                                "items": {
                                    "type": "string",
                                    "minLength": 0,
                                    "maxLength": 27
                                },
                                "enum": [
                                    "A-1",
                                    "A-2",
                                    "A-3",
                                    "A-4",
                                    "A-5",
                                    "B",
                                    "E",
                                    "F-1",
                                    "F-2",
                                    "H-1",
                                    "H-2",
                                    "H-3",
                                    "H-4",
                                    "H-5",
                                    "I-1",
                                    "I-2",
                                    "I-3",
                                    "I-4",
                                    "M",
                                    "R-1",
                                    "R-2",
                                    "R-3",
                                    "R-3.1",
                                    "R-4",
                                    "S-1",
                                    "S-2",
                                    "U"
                                ]
                            }
                        }
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "year_built": {
                                "type": "string"
                            },
                            "floor_count": {
                                "type": "integer",
                                "readOnly": true
                            },
                            "room_count": {
                                "type": "integer",
                                "readOnly": true
                            },
                            "gross_floor_area": {
                                "type": "integer"
                            },
                            "net_room_area": {
                                "type": "integer",
                                "readOnly": true
                            }
                        }
                    }
                }
            },
            "Room": {
                "description": "",
                "type": "object",
                "title": "Room",
                "properties": {
                    "id": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uuid",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true
                    },
                    "@site": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "@floor": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "occupancy": {
                                "type": "string"
                            },
                            "area": {
                                "type": "number"
                            },
                            "ceiling_height": {
                                "type": "number"
                            },
                            "volume": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "x-tags": [
                    "Room"
                ]
            },
            "Time-Zone": {
                "description": "",
                "type": "object",
                "title": "Time Zone",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "effective_coordinates": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "current": {
                        "type": "object",
                        "properties": {
                            "wall_time": {
                                "type": "string"
                            },
                            "utc_offset": {
                                "type": "number"
                            },
                            "is_dst": {
                                "type": "boolean"
                            },
                            "tag": {
                                "type": "string"
                            }
                        }
                    },
                    "names": {
                        "type": "object",
                        "properties": {
                            "ISO6391_language_code": {
                                "type": "string"
                            },
                            "generic": {
                                "type": "string"
                            },
                            "standard": {
                                "type": "string"
                            },
                            "daylight": {
                                "type": "string"
                            }
                        }
                    }
                },
                "x-tags": [
                    "Utilities"
                ]
            }
        },
        "parameters": {
            "siteId": {
                "name": "siteId",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": "A valid site object UUID"
            },
            "addressId": {
                "name": "addressId",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": "A valid address UUID"
            },
            "floorId": {
                "name": "floorId",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": "A valid floor UUID"
            },
            "roomId": {
                "name": "roomId",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": "A valid room UUID"
            },
            "@siteId": {
                "name": "@site",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": "Filter results by their associated site UUID"
            },
            "@floorId": {
                "name": "@floor",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": "Filter results by their associated floor UUID"
            }
        },
        "examples": {
            "Site-Object-List": {
                "value": {
                    "count": 4,
                    "index": [
                        "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
                        "723a9c16-1790-4386-b17b-54bc9ed6d901",
                        "82478e3a-a212-41bf-9e2b-7522a1504a6b",
                        "c1b5593a-6f59-46fa-ae38-15e4c4262ffa"
                    ],
                    "data": [
                        {
                            "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
                            "created": "2021-02-05T03:13:05+0000",
                            "code": "MSP",
                            "name": "Minneapolis Office",
                            "description": "",
                            "address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
                            "attributes": {
                                "year_built": "1927",
                                "floor_count": 1,
                                "room_count": 8,
                                "gross_floor_area": 18000,
                                "net_room_area": 17850,
                                "net_room_volume": 0
                            },
                            "occupancy": {
                                "default": "E",
                                "allowed": [
                                    "E",
                                    "A-1",
                                    "A-2"
                                ]
                            },
                            "classification": {
                                "category": {
                                    "id": 1,
                                    "name": "Education"
                                },
                                "type": {
                                    "id": 2,
                                    "name": "K-12 School"
                                },
                                "sub_type": {
                                    "id": 1,
                                    "name": "High School"
                                }
                            }
                        },
                        {
                            "id": "723a9c16-1790-4386-b17b-54bc9ed6d901",
                            "...": null
                        },
                        {
                            "id": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
                            "...": null
                        },
                        {
                            "id": "c1b5593a-6f59-46fa-ae38-15e4c4262ffa",
                            "...": null
                        }
                    ]
                }
            },
            "Create-Site-Body": {
                "value": {
                    "name": "Minneapolis Office",
                    "year_built": "1927",
                    "description": "Minneapolis branch office",
                    "category": 7,
                    "type": 1,
                    "sub_type": 0
                }
            },
            "Site-Object": {
                "value": {
                    "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
                    "created": "2021-02-05T03:13:05+0000",
                    "last_modified": null,
                    "code": "MSP",
                    "name": "Minneapolis Office",
                    "description": "",
                    "@address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
                    "contacts": null,
                    "attributes": {
                        "year_built": "",
                        "floor_count": 0,
                        "room_count": 0,
                        "gross_floor_area": 0,
                        "net_room_area": 0,
                        "net_room_volume": 0
                    },
                    "occupancy": {
                        "default": "E",
                        "allowed": [
                            "E",
                            "A-1",
                            "A-2"
                        ]
                    },
                    "classification": {
                        "category": {
                            "id": 1,
                            "name": "Education"
                        },
                        "type": {
                            "id": 2,
                            "name": "K-12 School"
                        },
                        "sub_type": {
                            "id": 1,
                            "name": "High School"
                        }
                    }
                }
            },
            "Floor-Object": {
                "value": {
                    "id": "38082b4a-6e6c-46ac-ba44-9de02d3323c0",
                    "created": "2021-04-12T17:08:59+0000",
                    "last_modified": "2021-04-12T17:11:23+0000",
                    "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
                    "code": "Basement",
                    "description": "Mechanical, building storage",
                    "attributes": {
                        "below_grade": true,
                        "gross_floor_area": 16000,
                        "room_count": 5,
                        "net_room_area": 5480,
                        "net_room_volume": 0
                    }
                }
            },
            "Create-Floor-Body": {
                "value": {
                    "code": "Floor 1",
                    "description": "First floor",
                    "gross_floor_area": 18000,
                    "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
                    "below_grade": false
                }
            },
            "Floor-Object-List": {
                "value": {
                    "count": 4,
                    "index": [
                        "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
                        "723a9c16-1790-4386-b17b-54bc9ed6d901",
                        "82478e3a-a212-41bf-9e2b-7522a1504a6b",
                        "c1b5593a-6f59-46fa-ae38-15e4c4262ffa"
                    ],
                    "data": [
                        {
                            "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
                            "created": "2021-02-05T03:13:05+0000",
                            "code": "MSP",
                            "name": "Minneapolis Office",
                            "description": "",
                            "address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
                            "attributes": {
                                "year_built": "1927",
                                "floor_count": 1,
                                "room_count": 8,
                                "gross_floor_area": 18000,
                                "net_room_area": 17850,
                                "net_room_volume": 0
                            }
                        },
                        {
                            "id": "723a9c16-1790-4386-b17b-54bc9ed6d901",
                            "created": "2021-02-05T15:11:48+0000",
                            "code": "SFO",
                            "name": "San Francisco Office",
                            "description": "",
                            "address": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
                            "attributes": {
                                "year_built": "2005",
                                "floor_count": 0,
                                "room_count": 0,
                                "gross_floor_area": 0,
                                "net_room_area": 0,
                                "net_room_volume": 0
                            }
                        },
                        {
                            "id": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
                            "created": "2021-02-05T03:00:27+0000",
                            "code": "SEA",
                            "name": "Seattle Office",
                            "description": "",
                            "address": "032183ea-087d-43a6-94e8-5688ef909771",
                            "attributes": {
                                "year_built": "1945",
                                "floor_count": 27,
                                "room_count": 241,
                                "gross_floor_area": 570000,
                                "net_room_area": 570000,
                                "net_room_volume": 0
                            }
                        },
                        {
                            "id": "c1b5593a-6f59-46fa-ae38-15e4c4262ffa",
                            "created": "2021-02-06T05:51:29+0000",
                            "code": "AUS",
                            "name": "Austin Office",
                            "description": "",
                            "address": "8aac0478-7b6f-448f-952b-dd710a94ee7a",
                            "attributes": {
                                "year_built": "1997",
                                "floor_count": 2,
                                "room_count": 36,
                                "gross_floor_area": 18560,
                                "net_room_area": 18000,
                                "net_room_volume": 0
                            }
                        }
                    ]
                }
            },
            "Create-Room-Body": {
                "value": {
                    "name": "Open Office",
                    "number": "100",
                    "description": "Open office & collaboration area",
                    "area": 8900,
                    "@floor": "d2fa3901-8649-46dc-bbfb-4864007895da",
                    "occupancy": "B"
                }
            },
            "Room-Object": {
                "value": {
                    "id": "61747b47-9828-4294-8602-8ef445e17240",
                    "created": "2021-04-12T18:22:40+0000",
                    "last_modified": "2021-04-12T18:54:18+0000",
                    "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
                    "@floor": "38082b4a-6e6c-46ac-ba44-9de02d3323c0",
                    "number": "1",
                    "name": "Circulation",
                    "description": "Hall area",
                    "attributes": {
                        "occupancy": "B",
                        "area": 150,
                        "ceiling_height": 9,
                        "volume": 1350
                    }
                }
            },
            "Room-Object-List": {
                "value": {
                    "description": "Example shared example",
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ]
                }
            },
            "Address-Object": {
                "value": {
                    "id": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
                    "created": "2021-02-05T16:10:54+0000",
                    "last_modified": null,
                    "@site": "723a9c16-1790-4386-b17b-54bc9ed6d901",
                    "lines": [
                        "600 Montgomery"
                    ],
                    "locality": "Downtown San Francisco",
                    "city": "San Francisco",
                    "county": "San Francisco",
                    "state": "CA",
                    "postcode": 94111,
                    "country": "USA",
                    "formatted": "600 Montgomery, San Francisco, CA 94111",
                    "geolocation": {
                        "latitude": 37.79513,
                        "longitude": -122.40299
                    },
                    "timezone": "America/Los_Angeles",
                    "designations": {
                        "primary_mailing": false,
                        "primary_billing": false
                    }
                }
            },
            "Timezone-Object": {
                "value": {
                    "id": "America/Los_Angeles",
                    "effective_coordinates": [
                        "37.79513",
                        "-122.40299"
                    ],
                    "current": {
                        "wall_time": "2021-04-13T06:59:36+0000",
                        "utc_offset": -25200,
                        "is_dst": false,
                        "tag": "PDT"
                    },
                    "names": {
                        "ISO6391_language_code": "en",
                        "generic": "Pacific Time",
                        "standard": "Pacific Standard Time",
                        "daylight": "Pacific Daylight Time"
                    }
                }
            },
            "Geocode-Search": {
                "value": {
                    "name": "Seattle, WA 98119",
                    "geolocation": {
                        "latitude": 47.63777,
                        "longitude": -122.36731
                    },
                    "geometry": "00005557-4100-2800-0000-00000bf9eda4"
                }
            },
            "Tenant-Account": {
                "value": {
                    "id": "d6797ebf-5b00-4a59-b3e5-19711b4c55bb",
                    "name": "Figgis Agency",
                    "flags": {
                        "active": true,
                        "has_subscription": true,
                        "has_billing_account": true,
                        "locked": false,
                        "confirmed": true,
                        "deleted": false
                    },
                    "tier": 3,
                    "billing_id": "cus_GZBdOM86hQZldD",
                    "locale": "en-us",
                    "primary_contact": {
                        "id": "1b17e73b-4cf7-4b47-a0f8-46f878ef7bf1",
                        "name": {
                            "given": "Cyril",
                            "family": "Figgis",
                            "full": "Cyril Figgis"
                        },
                        "email": "cyril@figgisagency.com",
                        "phone": {
                            "primary": {
                                "type": null,
                                "number": null
                            }
                        }
                    },
                    "addresses": {
                        "@mailing": "f3643601-d122-47c5-893c-1f108c07d840",
                        "@billing": null
                    },
                    "milestones": {
                        "account_created": {
                            "status": true,
                            "timestamp": "2018-02-01T02:10:02+0000"
                        },
                        "account_deleted": {
                            "status": false,
                            "timestamp": null
                        },
                        "account_confirmation": {
                            "status": true,
                            "timestamp": "2020-01-28T03:50:30+0000"
                        },
                        "onboarded": {
                            "status": true,
                            "timestamp": "2020-01-28T03:50:30+0000"
                        },
                        "accepted_terms": {
                            "status": true,
                            "timestamp": "2018-02-01T02:10:02+0000"
                        },
                        "accepted_billing_terms": {
                            "status": false,
                            "timestamp": null
                        },
                        "accepted_subscription_terms": {
                            "status": false,
                            "timestamp": null
                        }
                    }
                }
            },
            "Update-Tenant-Body": {
                "value": {
                    "name": "Figgis Agency",
                    "primary_contact": "5152763b-7d76-4d22-8484-ff27da40fe98"
                }
            },
            "Create-Tenant-Account": {
                "value": {
                    "success_message": "The tenant has been created! Account confirmation is required to unlock the account."
                }
            },
            "Tenant-Quota-Summary": {
                "value": {
                    "usage": {
                        "record_user": 1,
                        "seat": 9,
                        "user": 0,
                        "site": 17,
                        "gateway": 1,
                        "controller": 3,
                        "point": 43,
                        "collector": 17,
                        "equipment": 55,
                        "routine": 0,
                        "reset": 0,
                        "trigger": 0,
                        "fdd_rule": 0,
                        "meter": 0,
                        "kiosk": 0
                    },
                    "tenant": {
                        "id": "7d5a9e81-0902-4137-b71e-40ea913b5bfa",
                        "billing_id": "cus_Gr2tvkQK7Yrujz",
                        "tier": 1,
                        "account_type": "T1 - Standard"
                    },
                    "quotas": {
                        "collector": {
                            "usage": 17,
                            "quota": {
                                "included": 200,
                                "purchased": 25,
                                "total": 225
                            },
                            "remaining": 208,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "controller": {
                            "usage": 3,
                            "quota": {
                                "included": 100,
                                "purchased": 20,
                                "total": 120
                            },
                            "remaining": 117,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "equipment": {
                            "usage": 55,
                            "quota": {
                                "included": 50,
                                "purchased": 0,
                                "total": 50
                            },
                            "remaining": 0,
                            "status": {
                                "can_add_more": false,
                                "is_exceeded": true,
                                "is_met": true
                            }
                        },
                        "fdd_rule": {
                            "usage": 0,
                            "quota": {
                                "included": 150,
                                "purchased": 0,
                                "total": 150
                            },
                            "remaining": 150,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "gateway": {
                            "usage": 1,
                            "quota": {
                                "included": 25,
                                "purchased": 0,
                                "total": 25
                            },
                            "remaining": 24,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "kiosk": {
                            "usage": 0,
                            "quota": {
                                "included": 10,
                                "purchased": 0,
                                "total": 10
                            },
                            "remaining": 10,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "meter": {
                            "usage": 0,
                            "quota": {
                                "included": 100,
                                "purchased": 0,
                                "total": 100
                            },
                            "remaining": 100,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "point": {
                            "usage": 43,
                            "quota": {
                                "included": 500,
                                "purchased": 550,
                                "total": 1050
                            },
                            "remaining": 1007,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "record_user": {
                            "usage": 1,
                            "quota": {
                                "included": 0,
                                "purchased": 0,
                                "total": 0
                            },
                            "remaining": 0,
                            "status": {
                                "can_add_more": false,
                                "is_exceeded": true,
                                "is_met": true
                            }
                        },
                        "reset": {
                            "usage": 0,
                            "quota": {
                                "included": 50,
                                "purchased": 0,
                                "total": 50
                            },
                            "remaining": 50,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "routine": {
                            "usage": 0,
                            "quota": {
                                "included": 50,
                                "purchased": 0,
                                "total": 50
                            },
                            "remaining": 50,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "seat": {
                            "usage": 9,
                            "quota": {
                                "included": 25,
                                "purchased": 12,
                                "total": 37
                            },
                            "remaining": 28,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "site": {
                            "usage": 17,
                            "quota": {
                                "included": 10,
                                "purchased": 10,
                                "total": 20
                            },
                            "remaining": 3,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "trigger": {
                            "usage": 0,
                            "quota": {
                                "included": 10,
                                "purchased": 0,
                                "total": 10
                            },
                            "remaining": 10,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        },
                        "user": {
                            "usage": 0,
                            "quota": {
                                "included": 10,
                                "purchased": 0,
                                "total": 10
                            },
                            "remaining": 10,
                            "status": {
                                "can_add_more": true,
                                "is_exceeded": false,
                                "is_met": false
                            }
                        }
                    },
                    "composition": {
                        "base": {
                            "included_quotas": {
                                "collector": 200,
                                "controller": 100,
                                "equipment": 50,
                                "fdd_rule": 150,
                                "gateway": 25,
                                "kiosk": 10,
                                "meter": 100,
                                "point": 500,
                                "record_user": null,
                                "reset": 50,
                                "routine": 50,
                                "seat": 25,
                                "site": 10,
                                "trigger": 10,
                                "user": 10
                            },
                            "features": [
                                "browser",
                                "commander",
                                "components",
                                "dynamic_plotter",
                                "report_viewer",
                                "scheduler",
                                "sched_releases",
                                "sched_reports",
                                "trend_viewer",
                                "weather"
                            ]
                        },
                        "purchased_items": [
                            {
                                "id": "si_K5p1H0XbUF2OF0",
                                "product": "prod_JrQ5bpNpFpJMIH",
                                "plan": "price_1JDhFhJ5K0z3IHPXQmXXDlZJ",
                                "quantity": 12
                            },
                            {
                                "id": "si_K5UfB0QxmjmyMb",
                                "product": "prod_Jonb7n6NgZwJPs",
                                "plan": "price_1JBASEJ5K0z3IHPX1fIfVOTj",
                                "quantity": 2
                            },
                            {
                                "id": "si_HZ3bajOlRzV6Yz",
                                "product": "prod_HZ369tGn3VJSVa",
                                "plan": "price_1Gzv76J5K0z3IHPXeoVpLSY0",
                                "quantity": 1
                            },
                            {
                                "id": "si_HZ7U2OIcslO2QI",
                                "product": "prod_HZ4TOtIlNA9QCE",
                                "plan": "price_1GzwKcJ5K0z3IHPXutddmh3D",
                                "quantity": 10
                            },
                            {
                                "id": "si_HZJ9liaeMMwD69",
                                "product": "prod_HZJ7uDhRzsf6lo",
                                "plan": "price_1H0AVBJ5K0z3IHPXTV47pZ3C",
                                "quantity": 1
                            },
                            {
                                "id": "si_JooZUUSQ2PkjQu",
                                "product": "prod_Jonb7n6NgZwJPs",
                                "plan": "price_1JBASEJ5K0z3IHPX1fIfVOTj",
                                "quantity": 10
                            },
                            {
                                "id": "si_JrO2pVG3a7H9OG",
                                "product": "prod_Joo94eFbavxlBO",
                                "plan": "price_1JBAXLJ5K0z3IHPXk8KRXmYz",
                                "quantity": 550
                            },
                            {
                                "id": "si_JrO2j5us2oZRiw",
                                "product": "prod_Joo1OUr6YfqMaA",
                                "plan": "price_1JBAPDJ5K0z3IHPXKXPsmQe9",
                                "quantity": 25
                            },
                            {
                                "id": "si_JrP2d6sPjwvlZx",
                                "product": "prod_JrOsYAC275DsZV",
                                "plan": "price_1JDg4fJ5K0z3IHPX5Iu0DvEH",
                                "quantity": 50
                            },
                            {
                                "id": "si_JrQAr6iR15RAh3",
                                "product": "prod_JrQ5bpNpFpJMIH",
                                "plan": "price_1JDhFhJ5K0z3IHPXQmXXDlZJ",
                                "quantity": 8
                            }
                        ]
                    },
                    "features": [
                        "browser",
                        "commander",
                        "components",
                        "dynamic_plotter",
                        "report_viewer",
                        "scheduler",
                        "sched_releases",
                        "sched_reports",
                        "trend_viewer",
                        "weather"
                    ]
                }
            },
            "Confirm-Tenant-Account": {
                "value": {
                    "success_message": "Tenant account has been successfully confirmed!"
                }
            },
            "Onboard-Tenant-Account": {
                "value": {
                    "success_message": "Onboarding has been completed!"
                }
            },
            "Tenant-Preferences": {
                "value": {
                    "display_name_format": "first-last",
                    "shell": {
                        "theme": "#161d1b",
                        "pagination": {
                            "enabled": false,
                            "default_limit": 10
                        },
                        "disabled_applications": []
                    }
                }
            }
        },
        "requestBodies": {
            "Create-Site": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 120,
                                    "description": "The name of the new site"
                                },
                                "code": {
                                    "type": "string",
                                    "maxLength": 32,
                                    "description": "A unique code to identify the site"
                                },
                                "description": {
                                    "type": "string",
                                    "maxLength": 300,
                                    "description": "A description of the site"
                                },
                                "year_built": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "integer"
                                },
                                "sub_type": {
                                    "type": "integer"
                                },
                                "default_occupancy": {
                                    "type": "string",
                                    "enum": [
                                        "A-1",
                                        "A-2",
                                        "A-3",
                                        "A-4",
                                        "A-5",
                                        "B",
                                        "E",
                                        "F-1",
                                        "F-2",
                                        "H-1",
                                        "H-2",
                                        "H-3",
                                        "H-4",
                                        "H-5",
                                        "I-1",
                                        "I-2",
                                        "I-3",
                                        "I-4",
                                        "M",
                                        "R-1",
                                        "R-2",
                                        "R-3",
                                        "R-3.1",
                                        "R-4",
                                        "S-1",
                                        "S-2",
                                        "U"
                                    ],
                                    "description": "The desired default occupancy for rooms added to this site"
                                },
                                "allowed_occupancy": {
                                    "type": "array",
                                    "enum": [
                                        "A-1",
                                        "A-2",
                                        "A-3",
                                        "A-4",
                                        "A-5",
                                        "B",
                                        "E",
                                        "F-1",
                                        "F-2",
                                        "H-1",
                                        "H-2",
                                        "H-3",
                                        "H-4",
                                        "H-5",
                                        "I-1",
                                        "I-2",
                                        "I-3",
                                        "I-4",
                                        "M",
                                        "R-1",
                                        "R-2",
                                        "R-3",
                                        "R-3.1",
                                        "R-4",
                                        "S-1",
                                        "S-2",
                                        "U"
                                    ],
                                    "description": "New rooms will be limited to the occupancies provided",
                                    "items": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 27
                                    }
                                }
                            },
                            "required": [
                                "name",
                                "category",
                                "type"
                            ]
                        },
                        "examples": {
                            "Example": {
                                "$ref": "#/components/examples/Create-Site-Body"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                }
            },
            "Create-Floor": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "",
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "minLength": 1,
                                    "description": "A unique code for the floor",
                                    "example": "Floor 1, Main Floor, Basement"
                                },
                                "description": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "gross_floor_area": {
                                    "type": "number"
                                },
                                "below_grade": {
                                    "type": "boolean",
                                    "description": "Indicate if the floor is below grade. Default is `false`"
                                },
                                "@site": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "A valid site UUID that will contain this floor"
                                }
                            },
                            "required": [
                                "code",
                                "@site"
                            ]
                        },
                        "examples": {
                            "Example": {
                                "$ref": "#/components/examples/Create-Floor-Body"
                            }
                        }
                    }
                }
            },
            "Create-Room": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "number": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "description": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "area": {
                                    "type": "number",
                                    "description": "The net area of the room in localized units (integers only)",
                                    "format": "double"
                                },
                                "@floor": {
                                    "type": "string",
                                    "minLength": 1,
                                    "format": "uuid",
                                    "description": "A valid floor UUID that will contain this room"
                                },
                                "occupancy": {
                                    "type": "string",
                                    "minLength": 1,
                                    "description": "The IBC occupancy classification of this room",
                                    "enum": [
                                        "A-1",
                                        "A-2",
                                        "A-3",
                                        "A-4",
                                        "A-5",
                                        "B",
                                        "E",
                                        "F-1",
                                        "F-2",
                                        "H-1",
                                        "H-2",
                                        "H-3",
                                        "H-4",
                                        "H-5",
                                        "I-1",
                                        "I-2",
                                        "I-3",
                                        "I-4",
                                        "M",
                                        "R-1",
                                        "R-2",
                                        "R-3",
                                        "R-3.1",
                                        "R-4",
                                        "S-1",
                                        "S-2",
                                        "U"
                                    ]
                                },
                                "ceiling_height": {
                                    "type": "number"
                                },
                                "volume": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "name",
                                "number",
                                "area",
                                "@floor",
                                "occupancy"
                            ]
                        },
                        "examples": {
                            "Response": {
                                "$ref": "#/components/examples/Create-Room-Body"
                            }
                        }
                    }
                }
            },
            "Create-Address": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "maxLength": 300,
                                    "description": "A description of the address"
                                },
                                "street": {
                                    "type": "array",
                                    "maxItems": 2,
                                    "minItems": 1,
                                    "description": "An array of address lines, up to two",
                                    "items": {}
                                },
                                "city": {
                                    "type": "string",
                                    "maxLength": 120,
                                    "description": "The city name"
                                },
                                "state": {
                                    "type": "string",
                                    "maxLength": 2,
                                    "description": "The state name abbreviation"
                                },
                                "locality": {
                                    "type": "string",
                                    "maxLength": 96,
                                    "description": "The name of the neighborhood"
                                },
                                "geocode": {
                                    "type": "boolean",
                                    "description": "Switch to enable/disable address geocoding"
                                },
                                "county": {
                                    "type": "string",
                                    "description": "The name of the county",
                                    "maxLength": 120
                                },
                                "country": {
                                    "type": "string",
                                    "description": "The ISO 3166 alpha-3 country code (USA, CAN, etc)",
                                    "maxLength": 3
                                },
                                "postcode": {
                                    "type": "string",
                                    "maxLength": 10,
                                    "description": "*Required if Geocode is disabled*"
                                },
                                "timezone": {
                                    "type": "string",
                                    "maxLength": 90,
                                    "description": "An IANA timezone code for the address"
                                },
                                "latitude": {
                                    "type": "string",
                                    "description": "The longitude value of the address"
                                },
                                "longitude": {
                                    "type": "string",
                                    "description": "The latitude value of the address"
                                }
                            },
                            "required": [
                                "street",
                                "city",
                                "state"
                            ]
                        },
                        "examples": {
                            "Example with Geocoding": {
                                "value": {
                                    "description": "Main Address",
                                    "street": [
                                        "400 Broad Street"
                                    ],
                                    "city": "Seattle",
                                    "state": "WA"
                                }
                            },
                            "Example without Geocoding": {
                                "value": {
                                    "geocode": false,
                                    "description": "Main Address",
                                    "street": [
                                        "400 Broad Street"
                                    ],
                                    "city": "Seattle",
                                    "state": "WA",
                                    "locality": "Lower Queen Anne",
                                    "county": "King",
                                    "country": "USA",
                                    "postcode": "98119",
                                    "timezone": "America/Los_Angeles"
                                }
                            }
                        }
                    }
                }
            },
            "Update-Site": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 120,
                                    "description": "The name of the site"
                                },
                                "code": {
                                    "type": "string",
                                    "description": "The site's unique ID code",
                                    "maxLength": 32
                                },
                                "description": {
                                    "type": "string",
                                    "description": "The description of the site",
                                    "maxLength": 300
                                },
                                "year_built": {
                                    "type": "string"
                                },
                                "default_occupancy": {
                                    "type": "string",
                                    "enum": [
                                        "A-1",
                                        "A-2",
                                        "A-3",
                                        "A-4",
                                        "A-5",
                                        "B",
                                        "E",
                                        "F-1",
                                        "F-2",
                                        "H-1",
                                        "H-2",
                                        "H-3",
                                        "H-4",
                                        "H-5",
                                        "I-1",
                                        "I-2",
                                        "I-3",
                                        "I-4",
                                        "M",
                                        "R-1",
                                        "R-2",
                                        "R-3",
                                        "R-3.1",
                                        "R-4",
                                        "S-1",
                                        "S-2",
                                        "U"
                                    ],
                                    "description": "The desired default occupancy for rooms added to this site"
                                },
                                "allowed_occupancy": {
                                    "type": "array",
                                    "enum": [
                                        "A-1",
                                        "A-2",
                                        "A-3",
                                        "A-4",
                                        "A-5",
                                        "B",
                                        "E",
                                        "F-1",
                                        "F-2",
                                        "H-1",
                                        "H-2",
                                        "H-3",
                                        "H-4",
                                        "H-5",
                                        "I-1",
                                        "I-2",
                                        "I-3",
                                        "I-4",
                                        "M",
                                        "R-1",
                                        "R-2",
                                        "R-3",
                                        "R-3.1",
                                        "R-4",
                                        "S-1",
                                        "S-2",
                                        "U"
                                    ],
                                    "description": "New rooms will be limited to the occupancies provided",
                                    "items": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 27
                                    }
                                }
                            }
                        },
                        "examples": {
                            "Example": {
                                "value": {
                                    "name": "Seattle HQ",
                                    "code": "SEA"
                                }
                            }
                        }
                    }
                }
            },
            "Update-Room": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the room"
                                },
                                "number": {
                                    "type": "string",
                                    "description": "The room number"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "The room description"
                                },
                                "occupancy": {
                                    "type": "string",
                                    "description": "The room occupancy classification"
                                },
                                "area": {
                                    "type": "number",
                                    "description": "The net area of the room"
                                },
                                "@floor": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The floor the room belongs to"
                                }
                            }
                        },
                        "examples": {
                            "Example": {
                                "value": {
                                    "name": "Circulation",
                                    "occupancy": "B",
                                    "area": 250,
                                    "floor": "f1acf44a-62d2-42f3-8dad-b917de85d75c"
                                }
                            }
                        }
                    }
                }
            },
            "Update-Floor": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "gross_floor_area": {
                                    "type": "integer"
                                },
                                "below_grade": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "Update-Address": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": ""
                                },
                                "address": {
                                    "type": "string",
                                    "description": "Address line one"
                                },
                                "extended_address": {
                                    "type": "string",
                                    "description": "Address line two"
                                },
                                "locality": {
                                    "type": "string",
                                    "description": "The neighborhood name"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "county": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "postcode": {
                                    "type": "number"
                                },
                                "country": {
                                    "type": "string"
                                },
                                "timezone": {
                                    "type": "string",
                                    "description": "IANA timezone ID"
                                },
                                "offset": {
                                    "description": "UTC Offset in seconds",
                                    "type": "number"
                                }
                            }
                        },
                        "examples": {
                            "Example": {
                                "value": {
                                    "extended_address": "Suite 800"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Address"
        },
        {
            "name": "Billing Account"
        },
        {
            "name": "Collector"
        },
        {
            "name": "Controller"
        },
        {
            "name": "Equipment"
        },
        {
            "name": "Floor"
        },
        {
            "name": "Gateway"
        },
        {
            "name": "Invoice"
        },
        {
            "name": "Meter"
        },
        {
            "name": "Payment Source"
        },
        {
            "name": "Point"
        },
        {
            "name": "Preferences"
        },
        {
            "name": "Quota"
        },
        {
            "name": "Report"
        },
        {
            "name": "Room"
        },
        {
            "name": "Scheduled Release"
        },
        {
            "name": "Site"
        },
        {
            "name": "Subscription"
        },
        {
            "name": "Tenant"
        },
        {
            "name": "Trend Plot"
        }
    ]
}