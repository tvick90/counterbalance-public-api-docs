{
  "openapi": "3.0.2",
  "info": {
    "title": "Core API Reference",
    "version": "1.0",
    "description": "The Counterbalance Core API provides powerful, programmatic access to the Counterbalance platform and powers its feature-rich building management UI. Everything that is possible via the Counterbalance System Console is powered by this API.\n\nThis documentation walks through the API endpoints and their usage.\n\n## Supported HTTP Operations\nOur APIs supports the `GET`,`POST`,`PUT`,`PATCH`,`DELETE`, & `OPTIONS` verbs. General usage of these verbs is outlined in the following table.\n\nVerb | Description\n-----|------------\n`GET`     | Retrieves existing resources\n`POST`    | Creates a new resource and returns it\n`PUT`     | Creates a new resource within or attached to an existing resource and returns the new resource\n`PATCH`   | Updates an existing resource and returns the updated resource\n`DELETE`  | Removes an existing resource and returns nothing\n`OPTIONS` | List available verbs against a resource\n\n## Status Codes\n\nOur APIs return standard HTTP status codes. All status codes used are outlined below. \n\n### Success Codes\n\nCode | Response | Description\n-----|----------|---------\n**200** | `Ok` | The request was completed successfully. Response body will vary.\n**201** | `Created` | In response to a PUT or POST request, the resource was created successfully. The new resource's ID will be returned in the response body.\n**204** | `No Content` | The request was completed successfully and there is no response body to return. Such as when an object has been deleted. The response body will be _null_.\n\n### Error Codes\n\nCode | Response | Description\n-----|----------|---------\n**400** | `Bad Request` | The request was malformed, provided incorrect/incomplete/conflicting parameters, or the requested endpoint does not exist. The response body will contain additional information about why the error has occurred. Do not repeat the request without modifying it first.\n**401** | `Unauthorized` | The request requires an Authorization header and a valid token but either neither was provided or the provided token has expired. Refer to the error message provided to determine the proper course of action. \n**403** | `Forbidden` | The API authentication was successful but the user does not have adequate permissions to satisfy the request or the tenant account is locked.\n**404** | `Not Found` | The resource requested does not exist or was not found.\n**409** | `Conflict` | The provided combination of parameters results in a conflict and the resource cannot be updated. The error message output will provide additional information as to why the call cannot be completed.\n**5XX** | _`varies`_ | The API encountered an internal error when processing the request. The error message provided may provide additional information. Retrying the request after a few minutes may be successful.\n\n## Authenticating Requests\nThe authentication requirement for each API varies, but in general, most endpoints will require authentication. \n\nTo authenticate, add an `Authorization` header with a valid **Bearer** token.\n```\nAuthorization: Bearer eyJg...fw5c\n```\n\n### Obtaining an Access Token\nFollow the steps below to obtain an access token for use with these docs.\n1. Open [Counterbalance Single Sign-On](https://sso.counterbalance.io) and login when prompted\n2. Click **Copy Token** to copy an access token to your clipboard\n\n### Request Authorization\nSome API endpoints require a paid subscription. If a request is made to a paid feature that is not available, a `403 Forbidden` response will be returned. \n\nAdditionally, some platform resources and features are measured against a licensed quota limit. If an attempt is made to add additional resources once a quota limit has been reached, a `403 Forbidden` response will be returned.\n\n## Submitting Data\nWhen submitting non-binary data via a `POST`, `PUT`, or `PATCH` endpoint, the data payload must be in JSON.\n\nProcedures for submitting other types of data to platform APIs are documented on a per-endpoint basis. \n\n## Handling Errors\nAll API errors will return a common error response format. The response will provide an \n\n### Error Logging\n\nMost errors are automatically logged and reported. These errors will return a `logging_hash` entry ID in the error response body.\n\n```json\n{\n    \"error\": {\n        ...\n    },\n    \"logging_hash\": \"034dd6ad00770337bb07e906d919ed50f8884e86\"\n}\n```\n\nThis entry ID is also added as a header in the response.\n\n```\nX-Counterbalance-Log-Hash: 034dd6ad00770337bb07e906d919ed50f8884e86\n```\n",
    "contact": {}
  },
  "servers": [
    {
      "url": "https://api.counterbalance.io/v1",
      "description": "Production API"
    },
    {
      "description": "Staging",
      "url": "https://api-staging.counterbalance.io/v1"
    }
  ],
  "paths": {
    "/billing/account": {
      "get": {
        "summary": "Get Billing Account",
        "tags": [
          "Billing Account"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Billing-Account"
          }
        },
        "operationId": "get-billing-account",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve tenant billing account\n\n**Required Permissions:** `*`,`billing:*`,`billing:account:*`,`billing:account:read`"
      },
      "post": {
        "summary": "Create Billing Account",
        "operationId": "create-billing-account",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "Create tenant billing account\n\n**Required Permissions:** `*`,`billing:*`,`billing:account:*`,`billing:account:create`",
        "tags": [
          "Billing Account"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "parameters": [],
      "patch": {
        "summary": "Update Billing Account",
        "operationId": "update-billing-account",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Billing Account"
        ],
        "description": "Update tenant billing account\n\n**Required Permissions:** `*`,`billing:*`,`billing:account:*`,`billing:account:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Billing Account",
        "operationId": "delete-billing-account",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Billing Account"
        ],
        "description": "Delete/remove tenant billing account\n\n**Required Permissions:** `*`,`billing:*`,`billing:account:*`,`billing:account:delete`"
      }
    },
    "/billing/account/sources": {
      "get": {
        "summary": "List Payment Sources",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Payment-Sources"
          }
        },
        "operationId": "list-payment-sources",
        "description": "List payment sources\n\n**Required Permissions:** `*`,`billing:*`,`billing:sources:*`,`billing:sources:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Payment Source"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create Payment Source",
        "operationId": "create-payment-source",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "Create a new payment source\n\n**Required Permissions:** `*`,`billing:*`,`billing:sources:*`,`billing:sources:create`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Payment Source"
        ]
      }
    },
    "/billing/account/sources/{sourceId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sourceId"
        }
      ],
      "get": {
        "summary": "Get Payment Source",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Payment-Source"
          }
        },
        "operationId": "get-payment-source",
        "description": "Retrieve a payment source\n\n**Required Permissions:** `*`,`billing:*`,`billing:sources:*`,`billing:sources:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Payment Source"
        ]
      },
      "patch": {
        "summary": "Update Payment Source",
        "operationId": "update-payment-source",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Payment Source"
        ],
        "description": "Update a payment source\n\n**Required Permissions:** `*`,`billing:*`,`billing:sources:*`,`billing:sources:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Payment Source",
        "operationId": "delete-payment-source",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Payment Source"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Delete a payment source\n\n**Required Permissions:** `*`,`billing:*`,`billing:sources:*`,`billing:sources:delete`"
      }
    },
    "/billing/invoice": {
      "get": {
        "summary": "List Invoices",
        "tags": [
          "Invoice"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "list-invoices",
        "description": "List invoices\n\n**Required Permissions:** `*`,`billing:*`,`billing:invoice:*`,`billing:invoice:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/billing/invoice/{invoiceId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/invoiceId"
        }
      ],
      "get": {
        "summary": "Get Invoice",
        "tags": [
          "Invoice"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-invoice",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve an invoice\n\n**Required Permissions:** `*`,`billing:*`,`billing:invoice:*`,`billing:invoice:read`"
      }
    },
    "/billing/subscription": {
      "get": {
        "summary": "List Subscriptions",
        "tags": [
          "Subscription"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Subscriptions"
          }
        },
        "operationId": "list-subscriptions",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a list of subscriptions\n\n**Required Permissions:** `*`,`billing:*`,`billing:subscription:*`,`billing:subscription:read`"
      },
      "post": {
        "summary": "Create Subscription",
        "operationId": "create-subscription",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Create a new subscription\n\n**Required Permissions:** `*`,`billing:*`,`billing:subscription:*`,`billing:subscription:create`",
        "tags": [
          "Subscription"
        ]
      }
    },
    "/billing/subscription/{subscriptionId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/subscriptionId"
        }
      ],
      "get": {
        "summary": "Get Subscription",
        "tags": [
          "Subscription"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Subscription"
          }
        },
        "operationId": "get-subscription",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a subscription\n\n**Required Permissions:** `*`,`billing:*`,`billing:subscription:*`,`billing:subscription:read`"
      },
      "patch": {
        "summary": "Update Subscription",
        "operationId": "update-subscription",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Update a subscription\n\n**Required Permissions:** `*`,`billing:*`,`billing:subscription:*`,`billing:subscription:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Subscription"
        ]
      },
      "delete": {
        "summary": "Delete Subscription",
        "operationId": "delete-subscription",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete a subscription\n\n**Required Permissions:** `*`,`billing:*`,`billing:subscription:*`,`billing:subscription:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Subscription"
        ]
      }
    },
    "/billing/subscription/{subscriptionId}/upcoming-invoice": {
      "parameters": [
        {
          "$ref": "#/components/parameters/subscriptionId"
        }
      ],
      "get": {
        "summary": "Get Upcoming Invoice",
        "tags": [
          "Subscription"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-subscription-upcoming-invoice",
        "description": "Get upcoming invoice\n\n**Required Permissions:** `*`,`billing:*`,`billing:invoice:*`,`billing:invoice:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/collector": {
      "post": {
        "summary": "Create Collector",
        "operationId": "create-collector",
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-Create-Collector"
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "description": "Create a point collector\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:create`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@point": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The UUID of the point to be collected"
                  },
                  "interval": {
                    "type": "number",
                    "format": "double",
                    "default": 300,
                    "enum": [
                      300,
                      900,
                      1800,
                      3600
                    ],
                    "description": "The frequency in which to sample the point"
                  }
                },
                "required": [
                  "@point"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "@point": "52aa66de-e553-4383-9e16-52bfcd0efb0f",
                    "interval": 300
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Collector"
        ]
      },
      "get": {
        "summary": "List Collectors",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Collector-Listing"
          }
        },
        "operationId": "list-collectors",
        "description": "Retrieve a list of point collectors\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/@controller"
          },
          {
            "$ref": "#/components/parameters/@gateway"
          },
          {
            "$ref": "#/components/parameters/@site"
          },
          {
            "$ref": "#/components/parameters/@point"
          }
        ],
        "tags": [
          "Collector"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Collector"
        }
      },
      "parameters": []
    },
    "/collector/{collectorId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/collectorId"
        }
      ],
      "get": {
        "summary": "Retrieve Collector",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Collector"
          },
          "404": {
            "$ref": "#/components/responses/404-Collector-Not-Found"
          }
        },
        "operationId": "get-collector",
        "description": "Retreieve a point collector\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "tags": [
          "Collector"
        ]
      },
      "delete": {
        "summary": "Delete Collector",
        "operationId": "delete-collector",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true
                },
                "examples": {}
              }
            }
          }
        },
        "description": "Delete a point collector\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:delete`",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Collector"
        ]
      },
      "patch": {
        "summary": "Update Collector",
        "operationId": "update-collector",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Collector"
          },
          "404": {
            "$ref": "#/components/responses/404-Collector-Not-Found"
          }
        },
        "tags": [
          "Collector"
        ],
        "description": "Update a point collector\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Collector"
        }
      }
    },
    "/collector/{collectorId}/sample": {
      "parameters": [
        {
          "$ref": "#/components/parameters/collectorId"
        }
      ],
      "get": {
        "summary": "Sample Collector Data",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Collector-Samples"
          },
          "404": {
            "$ref": "#/components/responses/404-Collector-Not-Found"
          }
        },
        "operationId": "get-collector-samples",
        "description": "Retrieve data samples for the specified collector \n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:sample`\n\n### Adjusting the Sample Window\nBy default, if no query parameters are specified, the last 12 hours of sample data is returned. \n\nThe starting point and ending point of the sample window can be adjust with query parameters in two ways. \n\n#### Using a Fixed Date Range\nTo retrieve sample data for a fixed period of time (between two dates), pass both the `start` and `end` parameters as the unix timestamps for the desired dates.\n\nFor example, for sample data between 8AM on March 1st, 2021 to 8PM on March 5th, 2021, convert these dates and times to their corresponding UNIX timestamps and pass them in the corresponding parameter.\n\n```\nHTTP/1.1 https://api.counterbalance.io/.../sample?start=1614700800&end=1615005120\n```\n\n#### Using a Relative Date Range\n\nTo retrieve sample data for a relative period of time _(last 7 days, last 2 hours, etc)_, the `duration` parameter is used to dynamically set the window start or end point.\n\nWhen `duration` is passed, the `start` and `end` parameters become mutually exclusive. The relative range can only be set by specifying one or the other (or neither). If neither `start` nor `end` are passed, the starting point is set relative to the current date and time.\n\nIf `end` is specified, the relative start is calculated and samples _up to_ the specified end date are returned.\n\nIf `start` is specified, the relative end is calculated and samples _since_ the specified start date are returned\n\nFor example, for sample data for the 24 hours ending at 8AM on March 1st, 2021, convert the end date and time to a UNIX timestamp and specify the desired duration.\n\n```\nHTTP/1.1 https://api.counterbalance.io/.../sample?start=1614700800\n```\n\n#### Using Start Only\nTo retrieve sample data for a relative period of time _(last 7 days, last 2 hours, etc)_, the `duration` parameter is used to dynamically set a window start or end point.\n\nWhen `duration` is passwed, the `start` and `end` parameters become mutually exclusive and the relative range can only be set by specifying one or the other (or neither).\n\nThe `end` paramater is optional. The current date and time will be used if no end is explicitly set.\n\nFor example, for sample data for the 24 hours ending at 8AM on March 1st, 2021, convert the end date and time to a UNIX timestamp and specify the desired duration.\n\n```\nHTTP/1.1 https://api.counterbalance.io/.../sample?start=1614700800\n```\n",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "start",
            "description": "Specify the timestamp for the historic point in time where a sample window begins (left side of the X-axis)"
          },
          {
            "schema": {
              "type": "number",
              "default": "now"
            },
            "in": "query",
            "name": "end",
            "description": "Specify the timestamp where a sample window ends (right side of the X-axis)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "duration",
            "description": "The length of a relative sample window in seconds"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "schema": {
              "type": "array",
              "enum": [
                "data",
                "health",
                "statistics"
              ]
            },
            "in": "query",
            "name": "include",
            "description": "Specify which sample components to return with the response"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Collector"
        ]
      }
    },
    "/collector/{collectorId}/stats": {
      "parameters": [
        {
          "$ref": "#/components/parameters/collectorId"
        }
      ],
      "get": {
        "summary": "Retrieve Collector Sample Statistics",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Collector-Sample-Stats"
          },
          "404": {
            "$ref": "#/components/responses/404-Collector-Not-Found"
          }
        },
        "operationId": "get-collector-stats",
        "description": "Retrieve sample statistics for a collector\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:read`\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Collector"
        ]
      }
    },
    "/controller": {
      "get": {
        "summary": "List Controllers",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Controller-Listing"
          }
        },
        "operationId": "get-controller-list",
        "description": "Retrieve a list of controllers\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:controller:*`,`infrastructure:controller:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@gateway"
          },
          {
            "$ref": "#/components/parameters/@site"
          }
        ],
        "tags": [
          "Controller"
        ]
      },
      "post": {
        "summary": "Register Controller",
        "operationId": "create-controller",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Controller"
          }
        },
        "description": "Register a new BACnet controller\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:controller:*`,`infrastructure:controller:register`\n\n### Compatible BACnet Field Controllers\nMost BACnet automation devices are compatible with Counterbalance. The complete list of compatible devices is available in the support portal.\n\n* [Compatible BACnet Devices](https://counterbalance.zendesk.com/hc/en-us/articles/360063269913)",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Controller"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Controller"
        }
      },
      "parameters": []
    },
    "/controller/{controllerId}": {
      "parameters": [
        {
          "name": "controllerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "A valid controller UUID"
        }
      ],
      "get": {
        "summary": "Retrieve Controller",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Controller"
          },
          "404": {
            "$ref": "#/components/responses/404-Controller-Not-Found"
          }
        },
        "operationId": "get-controller",
        "description": "Retrieve a controller\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:controller:*`,`infrastructure:controller:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "bacnet",
            "description": "Include online and BACnet data"
          }
        ],
        "tags": [
          "Controller"
        ]
      },
      "patch": {
        "summary": "Update Controller",
        "operationId": "update-controller",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Controller"
          },
          "404": {
            "$ref": "#/components/responses/404-Controller-Not-Found"
          }
        },
        "description": "Update a field controller\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:controller:*`,`infrastructure:controller:update`",
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Controller"
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Controller"
        ]
      },
      "delete": {
        "summary": "Delete Field Controller",
        "operationId": "delete-controller",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Controller-Not-Found"
          }
        },
        "description": "### Synopsis\nDelete a controller\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:controller:*`,`infrastructure:controller:delete`\n\n<!-- theme: danger -->\n> **Danger!** Deleting a field controller will also remove its associated telemetry (points, schedules, etc) and all associated meters and collectors",
        "tags": [
          "Controller"
        ]
      }
    },
    "/department": {
      "get": {
        "summary": "List Departments",
        "tags": [
          "Departments"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-departments",
        "description": "<!-- theme: info -->\n> _Coming soon_",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "post": {
        "summary": "Create New Department",
        "operationId": "create-department",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "<!-- theme: info -->\n> _Coming soon_",
        "tags": [
          "Department"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "parameters": []
    },
    "/department/{departmentId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "departmentId",
          "in": "path",
          "required": true,
          "description": "A valid department UUID"
        }
      ],
      "get": {
        "summary": "Retrieve Department",
        "tags": [
          "Department"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-department",
        "description": "<!-- theme: info -->\n> _Coming soon_",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Department",
        "operationId": "update-department",
        "tags": [
          "Departments"
        ],
        "description": "<!-- theme: info -->\n> _Coming soon_",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "Delete Department",
        "operationId": "delete-department",
        "description": "<!-- theme: info -->\n> _Coming soon_",
        "tags": [
          "Departments"
        ],
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/gateway": {
      "get": {
        "summary": "List Gateways",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Gateway-Listing"
          }
        },
        "operationId": "get-gateway-list",
        "description": "Retrieve a list of gateway devices\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Gateway"
        ]
      },
      "post": {
        "summary": "Activate Gateway",
        "operationId": "create-gateway",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Gateway"
          }
        },
        "description": "Activate a gateway device and register it with a tenant account\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:register`\n\n> **Heads Up** This endpoint is subject to `gateway` quota availabilty\n\n### Prerequisite Setup\nThe target gateway device must be fully configured on a network with Internet access before it can be registered. Registration will fail if the device cannot be contacted. \n\n##### Helpful Support Articles\n* [How to Purchase a Gateway Device]()\n* [Configure Gateway Networking & BACnet](https://counterbalance.zendesk.com/hc/en-us/articles/360063269293)\n* [Gateway Architecture & Specifications]()\n\n### Gateway Serial Number\nThe gateway serial number is required in order to activate it. The serial number is found on the bottom of the device or by loading the local web GUI of the gateway.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Gateway"
        },
        "tags": [
          "Gateway"
        ]
      },
      "parameters": []
    },
    "/gateway/{gatewayId}": {
      "parameters": [
        {
          "name": "gatewayId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "539fea81-d151-46e1-b1f6-36e3864ebeff"
          },
          "description": "A valid gateway UUID"
        }
      ],
      "get": {
        "summary": "Retrieve Gateway",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Gateway"
          },
          "404": {
            "$ref": "#/components/responses/404-Gateway-Not-Found"
          }
        },
        "operationId": "get-gateway",
        "description": "Retrieve a gateway device by ID\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:read`",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Gateway"
        ]
      },
      "patch": {
        "summary": "Update Gateway",
        "operationId": "update-gateway",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Gateway"
          },
          "404": {
            "$ref": "#/components/responses/404-Gateway-Not-Found"
          }
        },
        "description": "Update a gateway device\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Gateway"
        },
        "tags": [
          "Gateway"
        ]
      },
      "delete": {
        "summary": "Delete Gateway",
        "operationId": "delete-gateway",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Gateway-Not-Found"
          }
        },
        "description": "Delete a gateway device\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:delete`\n\n### Connected Controllers\nWhen a gateway is deleted, the connected controllers are retained but all data collection activities will stop, building intelligence rules will be unavailable, and any associated meters will be in fault. \n\nA controller can be re-associated with an active gateway via the [Update Controller](/reference/Infrastructure.v1.json/paths/~1v1~1infrastructure~1gateway~1%7BgatewayId%7D/patch) endpoint.\n\n### Deleting an Offline Gateway\nBy default, when a gateway is deleted, the system will attempt to contact and initialize it. If the gateway cannot be contacted, the delete operation will fail. \n\nTo override this default action, set the `force` query parameter to `true`. This will require an additional manual reset in the local web GUI of the gateway device before the device can be registered again.\n\nRefer to support article [Manually Resetting a Gateway Device]() for additional information.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "force",
            "description": "Force the delete of a gateway that is offline"
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    },
    "/gateway/{gatewayId}/status": {
      "parameters": [
        {
          "name": "gatewayId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "539fea81-d151-46e1-b1f6-36e3864ebeff"
          },
          "description": "A valid gateway UUID"
        }
      ],
      "get": {
        "summary": "Retrieve Gateway Status",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Gateway-Status"
          },
          "404": {
            "$ref": "#/components/responses/404-Gateway-Not-Found"
          }
        },
        "operationId": "get-gateway-status",
        "description": "Retrieve a gateway device status details\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:read`",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    },
    "/gateway/{gatewayId}/devices": {
      "parameters": [
        {
          "name": "gatewayId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "539fea81-d151-46e1-b1f6-36e3864ebeff"
          },
          "description": "A valid gateway UUID"
        }
      ],
      "get": {
        "summary": "List Available Controllers",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Gateway-Devices"
          },
          "404": {
            "$ref": "#/components/responses/404-Gateway-Not-Found"
          }
        },
        "operationId": "get-gateway-devices",
        "description": "Retrieve a list of available controllers connected via the specified gateway\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:query`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Gateway"
        ]
      }
    },
    "/gateway/{gatewayId}/whois": {
      "parameters": [
        {
          "name": "gatewayId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "539fea81-d151-46e1-b1f6-36e3864ebeff"
          },
          "description": "A valid gateway UUID"
        }
      ],
      "post": {
        "summary": "Send BACnet Who-Is",
        "operationId": "send-whois",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Gateway-Whois"
          },
          "404": {
            "$ref": "#/components/responses/404-Gateway-Not-Found"
          }
        },
        "description": "Send a BACnet Who-Is to the network and review responsive field controllers\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:query`\n",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "BACnet"
        ]
      }
    },
    "/gateway/{gatewayId}/admin/service": {
      "parameters": [
        {
          "$ref": "#/components/parameters/gatewayId"
        }
      ],
      "put": {
        "summary": "Start/Stop Gateway Service",
        "operationId": "toggle-gateway-service",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Gateway-Generic-Operation"
          }
        },
        "tags": [
          "Gateway"
        ],
        "description": "Start and stop gateway services\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:service`\n\n > **Note:** *This endpoint is intended for advanced troubleshooting and **should not be used** without advice from Counterbalance support.*\n <!-- theme: danger -->\n > **Warning:** *Improper use of this endpoint may sever communication to the device and may require the gateway to be reset to factory defaults.*\n\n## Services Available\n\n| Service ID | Name | Description |\n|:-|:-|:-|\n| `bacnet` | **BACnet Middleware** | Toggles the BACnet middleware daemon for communicating with the BACnet network\n| `ssh` | **Secure Shell (SSH)** | Toggles SSH access to the device locally. By default, SSH is enabled.\n| `tunnel` | **Tunnel Middleware** | Toggles the secure tunnel service for remote device access <br>***Caution:** Stopping this service will sever remote access to the gateway from the cloud. This can be restarted using the local GUI of the gateway.*\n",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cycle-Gateway-Service"
        }
      }
    },
    "/gateway/{gatewayId}/admin/ethernet": {
      "parameters": [
        {
          "$ref": "#/components/parameters/gatewayId"
        }
      ],
      "put": {
        "summary": "Configure Gateway Network",
        "operationId": "config-gateway-network",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Gateway-Generic-Operation"
          }
        },
        "tags": [
          "Gateway"
        ],
        "description": "Configure a gateway network interfce IP address, DNS servers, and DHCP\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:network`\n\n## Specifying the Interface\nYou must specify which interface to update by setting the `interface` request body parameter to one of the values in the following table.\n\n| Interface | Description |\n|:-|:-|\n| **`eth0`** | Primary ethernet port\n\n## Supported Network Configurations\nThe gateway device currently supports one ethernet interface, `eth0`, and can be configured for dynamic addressing with DHCP, or a static IP address (recommended). \n\n### Configuring a Static IP Address\nTo configure an interface with a static IP address, set the `address`, `mask`, and `gateway` request body parameters, set the `dhcp` request body parameter to `false`, and provide at least one DNS server address.\n\n```json\n{\n  \"interface\": \"eth0\",\n  \"dhcp\": false,\n  \"address\": \"192.168.1.100\",\n  \"mask\": \"255.255.255.0\",\n  \"gateway\": \"192.168.1.254\",\n  \"dns\": [\n    \"1.1.1.1\"\n  ]\n}\n``` \n\n### Configuring DHCP\nTo configure the interface to use DHCP, set the `dhcp` request body parameter to `true`. You can provide up to four DNS servers with the `dns` paramater to overwrite the DNS servers provided from the DHCP server. In this mode, all other address parameters are ignored.\n\n```json\n{\n  \"interface\": \"eth0\",\n  \"dhcp\": true\n}\n```\n",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Gateway-Network"
        }
      }
    },
    "/gateway/{gatewayId}/admin/hostname": {
      "parameters": [
        {
          "$ref": "#/components/parameters/gatewayId"
        }
      ],
      "put": {
        "summary": "Configure Gateway Hostname",
        "operationId": "config-gateway-hostname",
        "tags": [
          "Gateway"
        ],
        "description": "Configure a gateway hostname\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:hostname`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Gateway-Hostname"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Gateway-Generic-Operation"
          }
        }
      }
    },
    "/gateway/{gatewayId}/admin/restart": {
      "parameters": [
        {
          "$ref": "#/components/parameters/gatewayId"
        }
      ],
      "put": {
        "summary": "Restart Gateway",
        "operationId": "restart-gateway",
        "tags": [
          "Gateway"
        ],
        "description": "Restart a gateway device\n\n**Required Permissions:** `*`,`infrastructure:*`,`infrastructure:gateway:*`,`infrastructure:gateway:manage`\n\nThere is no request body for this endpoint.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Gateway-Generic-Operation"
          }
        }
      }
    },
    "/group": {
      "get": {
        "summary": "List User Groups",
        "tags": [
          "User Group"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Groups"
          }
        },
        "operationId": "list-groups",
        "description": "List groups\n\n**Required Permissions:** `*`,`user:*`,`user:group:*`,`user:group:read`\n\n### Filtering Results\nA combination of one or more query parameters may be used to filter returned data. Query parameters are stacked such that using multiple parameters will result in a narrower data set.\n\nWildcard searches are permitted on the `name` and `description` query parameters. Wildcard searches are case insensitive and all data is forced to lowercase for matching purposes. See usage examples below.\n\n<!--\ntitle: \"Group Name Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/group?name=*engineer*\n```",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "A list of comma-separated group IDs to return"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter results by group name. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string",
              "example": "*engineers*"
            },
            "in": "query",
            "name": "description",
            "description": "Filter results by group descrption. Accepts * wildcard searches."
          }
        ]
      },
      "post": {
        "summary": "Create User Group",
        "operationId": "create-group",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Group"
          }
        },
        "tags": [
          "User Group"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Create a new group\n\n**Required Permissions:** `*`,`user:*`,`user:group:*`,`user:group:create`",
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-User-Group"
        }
      },
      "parameters": []
    },
    "/group/{groupId}": {
      "get": {
        "summary": "Retrieve User Group",
        "tags": [
          "User Group"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Group"
          }
        },
        "operationId": "get-group",
        "description": "Retreieve a group\n\n**Required Permissions:** `*`,`user:*`,`user:group:*`,`user:group:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "A valid group UUID"
        }
      ],
      "patch": {
        "summary": "Update User Group",
        "operationId": "update-group",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Group"
          }
        },
        "tags": [
          "User Group"
        ],
        "description": "Update a group\n\n**Required Permissions:** `*`,`user:*`,`user:group:*`,`user:group:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-User-Group"
        }
      },
      "delete": {
        "summary": "Delete Group",
        "operationId": "delete-group",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "User Group"
        ],
        "description": "Delete a group\n\n**Required Permissions:** `*`,`user:*`,`user:group:*`,`user:group:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/group/{groupId}/members": {
      "get": {
        "summary": "Retrieve User Group Members",
        "tags": [
          "User Group"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Group"
          }
        },
        "operationId": "get-group",
        "description": "Retreieve a group's members\n\n**Required Permissions:** `*`,`user:*`,`user:group:*`,`user:group:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "A valid group UUID"
        }
      ],
      "delete": {
        "summary": "Remove Group Members",
        "operationId": "delete-group",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "User Group"
        ],
        "description": "Delete a group\n\n**Required Permissions:** `*`,`user:*`,`user:group:*`,`user:group:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "put": {
        "summary": "Add Group Members",
        "operationId": "put-v1-group-groupId-members",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "User Group"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/network": {
      "get": {
        "summary": "List Networks",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "list-networks",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "post": {
        "summary": "Create Network",
        "operationId": "create-network",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "Network"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "parameters": []
    },
    "/network/{networkId}": {
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "A valid network UUID"
        }
      ],
      "get": {
        "summary": "Retrieve Network",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-network",
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Network",
        "operationId": "update-network",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Network"
        ],
        "description": ""
      },
      "delete": {
        "summary": "Delete Network",
        "operationId": "delete-network",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Network"
        ],
        "description": ""
      }
    },
    "/point": {
      "get": {
        "summary": "List Points",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Point-Listing"
          }
        },
        "operationId": "list-points",
        "description": "Retrieve a list of points\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:read`\n\n### Retrieving BACnet Data for Point Lists\nYou can retrieve a limited amount of online BACnet data for each point in a point listing by specifying a controller ID using the `@controller` query parameter, and setting the `bacnet` query parameter to `true`.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@site"
          },
          {
            "$ref": "#/components/parameters/@controller"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Filter results by a comma-separated list of object UUIDs"
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false",
              "enum": [
                "true",
                "false"
              ]
            },
            "in": "query",
            "name": "bacnet",
            "description": "Used in conjunction with `@controller` parameter to retrieve BACnet data for the points returned"
          }
        ],
        "tags": [
          "Point"
        ]
      },
      "post": {
        "summary": "Create Point",
        "operationId": "create-point",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Point-Offline"
          },
          "400": {
            "$ref": "#/components/responses/400-Invalid-Scope"
          },
          "404": {
            "$ref": "#/components/responses/404-Controller-Not-Found"
          }
        },
        "description": "Create a new point definition\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:create`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Point"
        },
        "tags": [
          "Point"
        ]
      },
      "parameters": []
    },
    "/point/{pointId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pointId"
        }
      ],
      "get": {
        "summary": "Retrieve Point",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Point"
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "operationId": "get-point",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "online",
            "description": "Fetch the latest BACnet data for the point <br> ***Use of this parameter is deprecated as of V1.4.0** Use the `/bacnet` endpoint to retrieve BACnet data.*",
            "deprecated": true
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a point\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:read`\n\n### Online BACnet Data\nEach BACnet object type will return a variable BACnet response body depending on the parameters present and supported by the target field controller. \n\nSeveral response examples are provided to illustrate the variety of parameters available.",
        "tags": [
          "Point"
        ]
      },
      "delete": {
        "summary": "Delete Point",
        "operationId": "delete-point",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "description": "Delete a point\n\n**Required Permissions** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Point"
        ]
      },
      "patch": {
        "summary": "Update Point",
        "operationId": "update-point",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Point"
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "description": "Update a point\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:update`\n\n<!-- theme: info -->\n> **Heads Up** This endpoint will only update the Counterbalance definition of a defined point. This will not update the BACnet definition on the device. \n> \n> _Future endpoints are planned to permit online BACnet updates._",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the point"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the point"
                  },
                  "resolution": {
                    "type": "string",
                    "description": "The display and collection resolution for analog points (decimal places)"
                  },
                  "@site": {
                    "type": "string",
                    "format": "uuid",
                    "description": "A valid site UUID to assign the point to"
                  },
                  "instance_id": {
                    "type": "number",
                    "description": "The BACnet object instance ID"
                  },
                  "units": {
                    "type": "string",
                    "description": "A valid BACnet units ID"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "SEA.RMT",
                    "description": "ROOM TEMP",
                    "site": "82478e3a-a212-41bf-9e2b-7522a1504a6b"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "tags": [
          "Point"
        ]
      }
    },
    "/point/{pointId}/bacnet": {
      "parameters": [
        {
          "name": "pointId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "168a3e32-996f-410a-a06c-c4cdc10fa362"
          },
          "description": "A valid point UUID"
        }
      ],
      "get": {
        "summary": "Retrieve BACnet Point Details",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-BACnet-Point"
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "operationId": "get-point-bacnet",
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve the BACnet details for a point\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:read`\n\n### Online BACnet Data\nEach BACnet object type will return a variable BACnet response body depending on the parameters present and supported by the target field controller. ",
        "tags": [
          "Point"
        ]
      }
    },
    "/point/{pointId}/command": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pointId"
        }
      ],
      "put": {
        "summary": "Command Point",
        "operationId": "command-point",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Command-Point"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid Parameters": {
                    "value": {
                      "error": {
                        "message": "One or more required parameters are missing",
                        "console": "Check the request body and try again",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  },
                  "Invalid Operation": {
                    "value": {
                      "error": {
                        "message": "Invalid operation requested",
                        "console": "Only command and relinquish are supported",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  },
                  "Point Not Commandable": {
                    "value": {
                      "error": {
                        "message": "Datapoint not commandable",
                        "console": "This datapoint is not commandable",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "description": "Command or release a point\n\n**Required Permisions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:command`\n\n### Commandable Points\nThe table below defines the BACnet object types compatible with this endpoint. Support for enumerated values is planned for a future release.\n\n| Object Type | Description |\n|:-|:-|\n| `1` | Analog Output |\n| `2` | Analog Value |\n| `4` | Binary Output |\n| `5` | Binary Value |\n\n### Supported Command Priorities\nAll sixteen BACnet command priorities are supported. \n\n### Command vs Relinquish\nThe `operation` body parameter accepts two values: `command` or `relinquish`. These operations are described below.\n\n#### Command a New Value\nTo command a data point to a new value, set `operation` to `command` in the request body and include the desired priority and new value. The new value will be added to the command priority array at the requested priority and any previous value at the same priority is overwritten. \n\n#### Relinqush a Set Value\nTo relinquish a command priority, set `operation` to `relinquish` in the request body and include the desired priority. The requested priority will be set to _null_ in the command priority array.\n\n### Automatically Release a Command\nA user may opt to have a command be automatically released at a later date. This is useful for temporary setpoint adjustments or system testing and can contribute to improved overall system health. \n\nTo schedule an automatic release, include the `scheduled_release` configuration in the request body of the command. This will trigger the creation of a [Scheduled Release Job](https://docs.counterbalance.io/docs/core-api/b3A6NDIyNzg5MTU) for tracking the release request.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "tags": [
          "Point"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Command-Point"
        }
      }
    },
    "/reporting/report": {
      "get": {
        "summary": "List Reports",
        "tags": [
          "Report"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "list-reports",
        "description": "",
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Report",
        "operationId": "create-report",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "## Report Types\n### Telemetry Report\n**Type:** `telemetry`",
        "tags": [
          "Report"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Report"
        }
      }
    },
    "/reporting/report/{reportId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/reportId"
        }
      ],
      "get": {
        "summary": "Retrieve Report",
        "tags": [
          "Report"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-report",
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "summary": "Update Report",
        "operationId": "update-report",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Report"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Report"
        }
      },
      "delete": {
        "summary": "Delete Report",
        "operationId": "delete-report",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Report"
        ],
        "description": "",
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/reporting/plot": {
      "get": {
        "summary": "List Trend Plots",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Plots"
          }
        },
        "operationId": "list-plots",
        "description": "Retrieve a list of trend plot objects\n\n**Required Permissions:** `*`,`reporting:*`,`reporting:plot:*`,`reporting:plot:read`\n\n### Filtering Results\nA combination of one or more query parameters may be used to filter returned data. Query parameters are stacked such that using multiple parameters will result in a narrower data set.\n\nWildcard searches are permitted on all query parameters. Wildcard searches are case insensitive and all data is forced to lowercase for matching purposes. See usage examples below.\n\n<!--\ntitle: \"Plot Name Wildcard Search\"\nlineNumbers: false\n-->\n```Name\nhttps://api.counterbalance.io/reporting/plot?name=*MN*\n```\n<!--\ntitle: \"Plot Description Wildcard Search\"\nlineNumbers: false\n-->\n```Description\nhttps://api.counterbalance.io/v1/reporting/plot?description=*MN*\n```",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "id",
            "description": "Filter results with a comma-separated list of plot IDs"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@owner",
            "description": "Filter results by owner UUID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Filter results by plot object name. Accepts * wildcard searches.",
            "name": "name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter results by plot object description. Accepts * wildcard searches."
          }
        ],
        "tags": [
          "Trend Plot"
        ]
      },
      "post": {
        "summary": "Create Trend Plot",
        "operationId": "create-plot",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Plot"
          }
        },
        "description": "Create a trend plot object\n\n**Required Permissions:** `*`,`reporting:*`,`reporting:plot:*`,`reporting:plot:create`",
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Plot"
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "tags": [
          "Trend Plot"
        ]
      },
      "parameters": []
    },
    "/reporting/plot/{plotId}": {
      "parameters": [
        {
          "name": "plotId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "A valid plot UUID"
        }
      ],
      "get": {
        "summary": "Retrieve Trend Plot",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Plot"
          },
          "404": {
            "$ref": "#/components/responses/404-Plot-Not-Found"
          }
        },
        "operationId": "get-plot",
        "description": "Retrieve a trend plot object\n\n**Required Permissions:** `*`,`reporting:*`,`reporting:plot:*`,`reporting:plot:read`",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Trend Plot"
        ]
      },
      "patch": {
        "summary": "Update Trend Plot",
        "operationId": "update-plot",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Plot"
          },
          "404": {
            "$ref": "#/components/responses/404-Plot-Not-Found"
          }
        },
        "description": "Update a trend plot object\n\n**Required Permissions:** `*`,`reporting:*`,`reporting:plot:*`,`reporting:plot:update`",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json",
              "example": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Plot"
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Trend Plot"
        ]
      },
      "delete": {
        "summary": "Delete Trend Plot",
        "operationId": "delete-plot",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "$ref": "#/components/responses/404-Plot-Not-Found"
          }
        },
        "description": "Delete a trend plot object\n\n**Required Permissions:** `*`,`reporting:*`,`reporting:plot:*`,`reporting:plot:delete`",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Trend Plot"
        ]
      }
    },
    "/reporting/group": {
      "get": {
        "summary": "List Report Groups",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Report-Groups"
          }
        },
        "operationId": "list-groups",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Report Group"
        ],
        "description": ""
      },
      "post": {
        "summary": "Create Report Group",
        "operationId": "create-group",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Report-Group"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Report Group"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Report-Group"
        }
      },
      "parameters": []
    },
    "/reporting/group/{groupId}": {
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "A valid report group UUID"
        }
      ],
      "get": {
        "summary": "Retrieve Report Group",
        "tags": [
          "Report Group"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Report-Group"
          }
        },
        "operationId": "get-group",
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "summary": "Update Report Group",
        "operationId": "update-group",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Report-Group"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Report Group"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Report-Group"
        }
      },
      "delete": {
        "summary": "Delete Report Group",
        "operationId": "delete-group",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "",
        "tags": [
          "Report Group"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/reporting/schedule": {
      "get": {
        "summary": "List Report Schedules",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Report-Schedules"
          }
        },
        "operationId": "list-report-schedules",
        "description": "",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Report Schedule"
        ]
      },
      "post": {
        "summary": "Create Report Schedule",
        "operationId": "create-report-schedule",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Report-Schedule"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Report Schedule"
        ],
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Report-Schedule"
        }
      }
    },
    "/reporting/schedule/{scheduleId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/scheduleId"
        }
      ],
      "get": {
        "summary": "Retrieve Report Schedule",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Report-Schedule"
          }
        },
        "operationId": "get-report-schedule",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Report Schedule"
        ],
        "description": ""
      },
      "patch": {
        "summary": "Update Report Schedule",
        "operationId": "update-report-schedule",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Report-Schedule"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "",
        "tags": [
          "Report Schedule"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Report-Schedule"
        }
      },
      "delete": {
        "summary": "Delete Report Schedule",
        "operationId": "delete-report-schedule",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "",
        "tags": [
          "Report Schedule"
        ]
      }
    },
    "/release": {
      "get": {
        "summary": "List Scheduled Release Jobs",
        "tags": [
          "Scheduled Release"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Release-Listing"
          }
        },
        "operationId": "list-releases",
        "description": "Retrieve a list of scheduled release jobs\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@point"
          },
          {
            "$ref": "#/components/parameters/@controller"
          },
          {
            "$ref": "#/components/parameters/@gateway"
          },
          {
            "$ref": "#/components/parameters/@site"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@owner",
            "description": "Filter results by their associated owner UUID"
          }
        ]
      }
    },
    "/release/{releaseId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/releaseId"
        }
      ],
      "get": {
        "summary": "Retrieve Scheduled Release Job",
        "tags": [
          "Scheduled Release"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Release"
          },
          "404": {
            "$ref": "#/components/responses/404-Release-Not-Found"
          }
        },
        "operationId": "get-release",
        "description": "Retrieve a scheduled release job\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Scheduled Release Job",
        "operationId": "update-release",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Release"
          },
          "404": {
            "$ref": "#/components/responses/404-Release-Not-Found"
          }
        },
        "description": "Update a scheduled release job\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:command`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Release"
        },
        "tags": [
          "Scheduled Release"
        ]
      },
      "delete": {
        "summary": "Delete Scheduled Release Job",
        "operationId": "delete-release",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "$ref": "#/components/responses/404-Release-Not-Found"
          }
        },
        "tags": [
          "Scheduled Release"
        ],
        "description": "Delete a scheduled release job\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:command`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/reset": {
      "get": {
        "summary": "List Resets",
        "tags": [
          "Setpoint Reset"
        ],
        "responses": {},
        "operationId": "list-resets",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Filter results with a comma-separated list of reset IDs"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter results by reset object name. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter results by reset object description. Accepts * wildcard searches."
          }
        ]
      },
      "post": {
        "summary": "Create Reset",
        "operationId": "create-reset",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "",
        "tags": [
          "Setpoint Reset"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/reset/{resetId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resetId"
        }
      ],
      "get": {
        "summary": "Retrieve Reset",
        "tags": [
          "Setpoint Reset"
        ],
        "responses": {},
        "operationId": "get-reset",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Reset",
        "operationId": "update-reset",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Setpoint Reset"
        ]
      },
      "delete": {
        "summary": "Delete Reset",
        "operationId": "delete-reset",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Setpoint Reset"
        ]
      }
    },
    "/routine": {
      "get": {
        "summary": "List Routines",
        "tags": [
          "Routine"
        ],
        "responses": {},
        "operationId": "list-routines",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Filter results with a comma-separated list of routine IDs"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter results by routine object name. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter results by routine object description. Accepts * wildcard searches."
          }
        ]
      },
      "post": {
        "summary": "Create Routine",
        "operationId": "create-routine",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Routine"
        ]
      }
    },
    "/routine/{routineId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/routineId"
        }
      ],
      "get": {
        "summary": "Retrieve Routine",
        "tags": [
          "Routine"
        ],
        "responses": {},
        "operationId": "get-routine",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Routine",
        "operationId": "update-routine",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Routine"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Routine",
        "operationId": "delete-routine",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Routine"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": ""
      }
    },
    "/schedule": {
      "get": {
        "summary": "List Schedules",
        "tags": [
          "Schedule"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "list-schedules",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "post": {
        "summary": "Create Schedule",
        "operationId": "create-schedule",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "Schedule"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/schedule/{scheduleId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/scheduleId"
        }
      ],
      "get": {
        "summary": "Retrieve Schedule",
        "tags": [
          "Schedule"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-schedule",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Schedule",
        "operationId": "update-schedule",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Schedule"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Schedule",
        "operationId": "delete-schedule",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Schedule"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "put": {
        "summary": "Update Schedule Object",
        "operationId": "update-schedule-object",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Schedule"
        ],
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/site": {
      "get": {
        "summary": "List Sites",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Sites"
          }
        },
        "operationId": "list-sites",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a list of site objects\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:list`\n\n### Filtering Results\nA combination of one or more query parameters may be used to filter returned data. Query parameters are stacked such that using multiple parameters will result in a narrower data set.\n\nWildcard searches are permitted on all query parameters. Wildcard searches are case insensitive and all data is forced to lowercase for matching purposes. See usage examples below.\n\n<!--\ntitle: \"Site Code Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?code=*MN*\n```\n<!--\ntitle: \"Site Name Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?name=*elementary*\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "code",
            "description": "Filter results by site code. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter results by site name. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter sites by description. Accepts * wildcard searches."
          }
        ],
        "tags": [
          "Site"
        ]
      },
      "post": {
        "summary": "Create Site",
        "operationId": "create-site",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Site"
          }
        },
        "description": "Create a new site object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:create`\n\n> **Heads Up** This endpoint is subject to `site` quota availabilty\n\n### Defining Building Category & Type\nNew sites must be defined with a building `category` and `type`. In some cases, a type will have additional sub-types, in which case, the `sub_type` paramater must also be provided. \n\nCategory, type, and sub_type are all defined using an index ID. The various indexes and their values can be found in [this support article](https://counterbalance.zendesk.com/hc/en-us/articles/5405264196499).",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Site"
        },
        "tags": [
          "Site"
        ]
      }
    },
    "/site/{siteId}": {
      "get": {
        "summary": "Retrieve a Site",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Retrieve-Site"
          }
        },
        "operationId": "get-site",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/siteId"
        }
      ]
    },
    "/site/address": {
      "parameters": [],
      "put": {
        "summary": "Add Address to Site",
        "operationId": "create-address",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                },
                "examples": {
                  "Response": {
                    "$ref": "#/components/examples/Address"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Address-Already-Exists"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Create a new address object and attach it to a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:update`\n\n### Address Geocoding\nBy default, new addresses are geocoded to determine their GPS coordinates, timezone, and to fill-in various extended properties such as the locality, country, and ZIP or postcode. \n\nGeocoding is an optional process and can be skipped by setting `geocode` to `false` in the request body. If geocoding is skipped, the following additional body parameters become required: `county`, `country`, `postcode`, `timezone`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@site",
            "description": "A valid site UUID for which to assign this address"
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Address"
        },
        "tags": [
          "Address"
        ]
      }
    },
    "/site/address/{addressId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/addressId"
        }
      ],
      "get": {
        "summary": "Retrieve Address",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Address"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "operationId": "get-address",
        "description": "### Synopsis\nRetrieve the details for the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Address"
        ]
      },
      "patch": {
        "summary": "Update Address",
        "operationId": "update-address",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Address"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "Update an address object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:address:*`,`sites:address:update`",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Address"
        },
        "tags": [
          "Address"
        ]
      },
      "delete": {
        "summary": "Delete Address",
        "operationId": "delete-address",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "Delete an address object\n\n**Required Permissions:** `*`,`sites:*`,`sites:address:*`,`sites:address:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Address"
        ]
      }
    },
    "/site/address/{addressId}/operation": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "A valid address UUID"
        }
      ],
      "post": {
        "summary": "Perform Address Operations",
        "operationId": "address-operations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Address"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "Perform operations on an address\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:address:*`,`sites:address:update`\n\n### Supported Operations\nThe following operations are currently supported:\n\n#### Address Normalization\nAn existing address object can be normalized or re-normalized by specifying the operation as `normalize`. The address' existing lines, city, and state values are used to generate a normalization query and updates are performed based on these values. If normalization data is incorrect, try adjusting these parameters and re-normalizing. \n\nWhen an address is normalized, the following properties are looked up and overridden: `city`,`state`,`latitude`,`longitude`,`postcode`,`locality`,`county`,`country`,`timezone`\n",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "string",
                    "enum": [
                      "normalize"
                    ],
                    "description": "The operation to perform"
                  }
                },
                "required": [
                  "operation"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "operation": "normalize"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Address"
        ]
      }
    },
    "/site/floor": {
      "get": {
        "summary": "List Floors",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Floors"
          }
        },
        "operationId": "list-floors",
        "description": "Retrieve a list of floors\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@site"
          }
        ],
        "tags": [
          "Floor"
        ]
      },
      "post": {
        "summary": "Create Floor",
        "operationId": "create-floor",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Floor"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Create a new floor and assign it to a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:create`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Floor"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Floor"
        }
      },
      "parameters": []
    },
    "/site/floor/{floorId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/floorId"
        }
      ],
      "get": {
        "summary": "Retrieve Floor",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Floor"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "operationId": "get-floor",
        "description": "Retrieve a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Floor"
        ]
      },
      "patch": {
        "summary": "Update Floor",
        "operationId": "update-floor",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Floor"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "description": "Update a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Floor"
        },
        "tags": [
          "Floor"
        ]
      },
      "delete": {
        "summary": "Delete Floor",
        "operationId": "delete-floor",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Floor-Not-Empty"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "description": "Delete a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:delete`\n\n<!-- theme: danger -->\n> **Danger** This cannot be undone!",
        "tags": [
          "Floor"
        ]
      }
    },
    "/site/room": {
      "get": {
        "summary": "List Rooms",
        "operationId": "list-rooms",
        "description": "Retrieve a list of rooms\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@site"
          },
          {
            "$ref": "#/components/parameters/@floor"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Rooms"
          }
        },
        "tags": [
          "Room"
        ]
      },
      "post": {
        "summary": "Create Room",
        "operationId": "create-room",
        "description": "Create a new room and assign it to a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:create`\n\n### Defining Room Occupancy\nThe room occupancy classification must be specifid in the `occupancy` body parameter. One of the [International Building Code (IBC)](https://buildingcodetrainer.com/building-occupancy-classification-occupancy-types-explained/) occupancy codes is required and all occupancies are considered valid values.\n\n### Defining Room Area\nThe `area` body parameter is required and should contain the net area of the room in localized units (square meters or square feet). Only integer values are permitted.\n\n### Defining Room Volume\nThe room volume can be explicitly provided in the `volume` body parameter. The volume should be expressed in the same localized units as the room area. Only integer values are permitted.\n\nIf the volume is not defined, the `ceiling_height` body parameter, if provided, is used to calculate the room volume using the area specified. ",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Room"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "tags": [
          "Room"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Room"
        }
      }
    },
    "/site/room/{roomId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/roomId"
        }
      ],
      "get": {
        "summary": "Retrieve Room",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Room"
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "operationId": "get-room",
        "description": "Retrieve a room\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Room"
        ]
      },
      "patch": {
        "summary": "Update Room",
        "operationId": "update-room",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Room"
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Update a room\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:room:*`,`sites:room:update`",
        "tags": [
          "Room"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Room"
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete Room",
        "operationId": "delete-room",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "description": "Delete a room\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:delete`\n\n<!-- theme: danger -->\n> _**Heads Up** This cannot be undone!_",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Room"
        ]
      }
    },
    "/site/utilities/geocode": {
      "get": {
        "summary": "Retrieve Geocoding by Query",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Geocode-Search"
          }
        },
        "operationId": "get-geocode",
        "description": "Geocode a search query\n\n**Required Permissions:** `*`,`view:console*`\n\n### Accepted Queries\n*coming soon*",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "query",
            "required": true,
            "description": "A geocode search query"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Site"
        ]
      }
    },
    "/site/utilities/timezone": {
      "get": {
        "summary": "Retrieve Timezone Details",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Timezone"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either an IANA timezone ID, coordinates, or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid parameter combination",
                        "console": "Parameters timezone, coordinates, and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID ... is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-timezone",
        "description": "### Synopsis\nRetrieve timezone details including the current time\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:utilities:*`,`sites:utilities:timezone`\n* Licensed Feature: `sites_base`\n\n### Specifying Coordinates or Address ID\nTimezone details can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n### Specifying am IANA Timezone ID\nTimezone details can be obtained for any Timezone by specifying the IANA timezone ID\n\n<!-- theme: warning-->\n> _Parameters `timezone`, `coordinates` and `@address` are mutually exclusive. Passing more than one will result in an error_\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "timezone",
            "description": "An IANA timezone ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Retrieve the timezone for the specified coordinates"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@address",
            "description": "Retrieve the timezone for the specified address ID"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Site"
        ]
      }
    },
    "/tenant": {
      "get": {
        "summary": "Retrieve Tenant Account",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Tenant-Account"
          }
        },
        "operationId": "get-tenant",
        "description": "Retrieve the tenant account for the authenticated user\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Tenant"
        ]
      },
      "post": {
        "summary": "Create Tenant Account",
        "operationId": "create-tenant",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success_message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "value": {
                      "success_message": "The new tenant account was created! Email confirmation required."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "$ref": "#/components/responses/503-Tenant-Create-Error"
          }
        },
        "description": "Create a new tenant account (aka, account signup)\n\n__Required Permissions:__ _none_\n\n### Accepting the Terms of Service\nThe [Terms of Service](https://www.counterbalance.io/terms) must be accepted before the account can be created. The `accept_terms` body field must be set to `true` in order for the request to be completed successfully.\n\n### Account Confirmation\nNew tenant accounts created via this endpoint must be confirmed before they will be activated. The user will be emailed a confirmation code and the account must be confirmed using the __Confirm Tenant Account__ operations endpoint.\n\n### Password Strength\nThe password specified must meet the following requirements:\n\n* Must be at least 8-characters in length\n* Lower case (a-z), upper case (A-Z) and numbers (0-9)\n* Special characters (!@#$%^&*)\n* No more than 2 identical characters in a row\n\nNIST recommends a minimum character length of 8, and suggests that length is a better indicator of strength than complexity.\n\n<!-- theme: warning -->\n> **Heads Up:** A password will be rejected if it contains common dictionary phrases or the user's first name, last name, or shortname.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "given_name": {
                    "type": "string",
                    "description": "The tenant owner's given (first) name"
                  },
                  "family_name": {
                    "type": "string",
                    "description": "The tenant owner's sur (last) name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The tenant owner's email address"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The tenant owner's desired login password"
                  },
                  "company_name": {
                    "type": "string",
                    "description": "The name of the new tenant account"
                  },
                  "accept_terms": {
                    "type": "boolean",
                    "description": "Set to `true` to indicate acceptance of the Counterbalance Terms of Service"
                  }
                },
                "required": [
                  "given_name",
                  "family_name",
                  "email",
                  "password",
                  "company_name",
                  "accept_terms"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "given_name": "Taylor",
                    "family_name": "Vick",
                    "email": "hello@counterbalance.io",
                    "password": "Se@ttle1!",
                    "company_name": "Counterbalance Software",
                    "accept_terms": true
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type"
          }
        ],
        "tags": [
          "Tenant"
        ]
      },
      "patch": {
        "summary": "Update Tenant Account",
        "operationId": "update-tenant",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Tenant-Account"
          }
        },
        "description": "Update the tenant account for the authenticated user\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 240,
                    "description": "The company or organization name for the tenant",
                    "minLength": 1
                  },
                  "primary_contact": {
                    "type": "string",
                    "format": "uuid",
                    "description": "UUID of the user designated as the primary contact for the tenant account"
                  }
                }
              },
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Update-Tenant-Body"
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type"
          }
        ],
        "tags": [
          "Tenant"
        ]
      },
      "delete": {
        "summary": "Delete Tenant Account",
        "operationId": "delete-tenant",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete the tenant account of the authenticated user\n\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:delete`\n\n### Immediate Account Termination",
        "tags": [
          "Tenant"
        ]
      }
    },
    "/tenant/confirm": {
      "post": {
        "summary": "Confirm Tenant Account",
        "operationId": "post-v1-tenant-confirm",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success_message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "success_message": "Tenant account has been successfully confirmed!"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Confirm a newly-created tenant account\n\nThe following prerequisites are required for this endpoint:\n* The tenant account confirmation code _(emailed to the new user)_\n* Permissions _(at least one):_ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:update`\n\n> **Please Note:** A confirm operation can only be completed by the user who created the tenant acccount",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "A six-digit confirmation code",
                    "minLength": 6,
                    "maxLength": 6,
                    "default": "645881"
                  }
                },
                "required": [
                  "code"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "code": "645881"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tenant"
        ]
      }
    },
    "/tenant/deletion-pin": {
      "post": {
        "summary": "Set Deletion PIN",
        "operationId": "post-v1-tenant-deletion-pin",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant-Deletion-PIN"
                }
              }
            }
          }
        },
        "description": "Set a deletion PIN that allows Counterbalance Support to permanently delete a tenant account",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Tenant"
        ]
      }
    },
    "/tenant/onboarding": {
      "parameters": [],
      "post": {
        "summary": "Complete Tenant Onboarding",
        "operationId": "complete-tenant-onboarding",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Complete-Onboarding"
          }
        },
        "description": "Mark the tenant account for the authenticated user as having completed onboarding\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "null"
              },
              "examples": {
                "Example": {
                  "value": null
                }
              }
            }
          },
          "description": "*No request body is necesssary for this request*"
        },
        "tags": [
          "Tenant"
        ]
      }
    },
    "/tenant/preferences": {
      "get": {
        "summary": "Retrieve Tenant Preferences",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Tenant-Preferences"
          }
        },
        "operationId": "get-tenant-preferences",
        "description": "Retrieve platform preferences set for the authenticated user's tenant account\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "application/json"
          }
        ],
        "tags": [
          "Preferences"
        ]
      },
      "patch": {
        "summary": "Update Tenant Preferences",
        "operationId": "update-tenant-preferences",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Tenant-Preferences"
          }
        },
        "description": "Update platform preferences set for the authenticated user's tenant account\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:account:*`,`tenant:account:update`",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "Application-json"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tenant-Preferences"
              }
            }
          }
        },
        "tags": [
          "Preferences"
        ]
      }
    },
    "/tenant/quota": {
      "get": {
        "summary": "RetrieveTenant Quota Summary",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Tenant-Quota-Summary"
          }
        },
        "operationId": "get-tenant-quota",
        "description": "Retrieve a list of authorized platform features and a summary of metered tenant objects and their usage for the authenticated user's tenant account\n\n__Required Permissions:__ `*`,`tenant:*`,`tenant:quota:*`,`tenant:quota:read`\n\n> **Please Note:** This endpoint will return all the features and quotas for the tenant account, regardless of the authenticated user's ability to use or access them",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "features_only",
            "description": "Only return the authorized features, excludes quota summary and usage details"
          }
        ],
        "tags": [
          "Quota"
        ]
      }
    },
    "/trigger": {
      "get": {
        "summary": "List Triggers",
        "tags": [
          "Trigger"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "list-triggers",
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "Filter results with a comma-separated list of trigger IDs"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter results by trigger object name. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter results by trigger object description. Accepts * wildcard searches."
          }
        ]
      },
      "post": {
        "summary": "Create Trigger",
        "operationId": "create-trigger",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Trigger"
        ],
        "description": ""
      }
    },
    "/trigger/{triggerId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/triggerId"
        }
      ],
      "get": {
        "summary": "Retrieve Trigger",
        "tags": [
          "Trigger"
        ],
        "responses": {},
        "operationId": "get-trigger",
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Trigger",
        "operationId": "update-trigger",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Trigger"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Trigger",
        "operationId": "delete-trigger",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Trigger"
        ],
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "summary": "List Users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "description": "The number of account objects returned"
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "An array of user account objects",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  },
                  "required": [
                    "count",
                    "data"
                  ]
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 1,
                      "data": [
                        {
                          "id": "5391c363-70f0-46bb-abd2-4eecd1574201",
                          "license": "record_user",
                          "flags": {
                            "active": true,
                            "blocked": false,
                            "licensed": false,
                            "archived": false,
                            "deleted": false
                          },
                          "picture": "https://api.counterbalance.io/v1/user/5391c363-70f0-46bb-abd2-4eecd1574201/photo",
                          "name": {
                            "given": "Diego",
                            "preferred": "",
                            "middle": "",
                            "family": "Siciliano",
                            "prefix": null,
                            "suffix": null,
                            "full": "Diego Siciliano",
                            "display": "Diego Siciliano",
                            "short": ""
                          },
                          "email": "diegos@peterbalance.com",
                          "site": null,
                          "department": null,
                          "manager": null,
                          "room": null,
                          "mail_stop": null,
                          "title": "",
                          "employee_id": "",
                          "org_guid": "",
                          "links": []
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "operationId": "get-user-list",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a list of user accounts available to the authenticated user\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:account:*`,`user:account:list`\n* Licensed Feature: `user_base`\n\n### Variations\nIf the `status` query paramter is not included with the request, only active user accounts are returned. \n\nQuery paramters are stacked. That is, if you specify a specific site and department, then only users that match BOTH of these parameters will be returned.\n\n### Returned User Scope\nThis is a scoped endpoint and the data returned may not be a complete, conclusive listing of all resources in the tenant account.\n\nUsers with `*` & `user:*` permission scopes will always have access to the complete resource data set in the tenant.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "archived",
                "deleted",
                "all"
              ]
            },
            "in": "query",
            "name": "status",
            "description": ""
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "site",
            "description": "Return only the users assigned to the specified site ID"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "department",
            "description": "Return only the users assigned to the specified department ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "auth_only",
            "description": "Return only the users with active auth accounts"
          }
        ]
      },
      "post": {
        "summary": "Create New User",
        "operationId": "create-user",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "73f180ba-caa3-4e49-a68c-f643b5e7bf79",
                      "license": "record_user",
                      "flags": {
                        "active": true,
                        "blocked": false,
                        "licensed": false,
                        "archived": false,
                        "deleted": false
                      },
                      "picture": "https://api.counterbalance.io/v1/user/73f180ba-caa3-4e49-a68c-f643b5e7bf79/photo",
                      "auth": null,
                      "name": {
                        "given": "Megan",
                        "preferred": "",
                        "middle": "",
                        "family": "Bowen",
                        "prefix": null,
                        "suffix": null,
                        "full": "Megan Bowen",
                        "display": "Megan Bowen",
                        "short": ""
                      },
                      "email": "meganb@peterbalance.com",
                      "site": null,
                      "department": null,
                      "manager": null,
                      "room": null,
                      "mail_stop": null,
                      "title": "",
                      "links": [],
                      "milestones": {
                        "accepted_terms": {
                          "status": false,
                          "timestamp": 0
                        },
                        "completed_onboarding": {
                          "status": false,
                          "timestamp": 0
                        },
                        "account_created": {
                          "status": true,
                          "timestamp": 1604882067
                        },
                        "account_blocked": {
                          "status": false,
                          "timestamp": 0
                        },
                        "account_archived": {
                          "status": false,
                          "timestamp": 0
                        },
                        "license_assigned": {
                          "status": false,
                          "timestamp": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid User Type": {
                    "value": {
                      "error": {
                        "message": "Invalid user type",
                        "console": "foo is not a valid user type",
                        "code": 400
                      },
                      "logging_hash": "7420265096f60cd5015ab814f670ef15bbaeb61a"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nCreate a new user and optionally assign a license and password\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:account:*`,`user:account:create`\n* Licensed Feature: `user_base`\n* If adding a license, adequate quota of the requested type\n\n### Defining the User Type\nThe field `type` may be one of either: \n\n* `record_user` _(non-licensed user)_\n* `seat` _(licensed system user)_ \n* `user` _(licensed end user)_\n\nIf type is defined as either `seat` or `user`, the new user will be sent a notification email informing them of their new account. _As of February 2021, there is a pending request to disable this feature via query paramater_\n\nIf the `type` field is omitted, the user will default to `record_user`\n\n### Setting the User Password\nThe `password` field is required when the user type specified is either `seat` or `user`. In all other cases, it is ignored.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "given_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 90,
                    "description": "The user's first name"
                  },
                  "family_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 90,
                    "description": "The user's last name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "title": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "record_user",
                      "seat",
                      "user"
                    ]
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "Required for \"seat\" and \"user\" types"
                  }
                },
                "required": [
                  "given_name",
                  "family_name",
                  "email",
                  "type"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "given_name": "Megan",
                    "family_name": "Bowen",
                    "email": "meganb@peterbalance.com",
                    "type": "record_user",
                    "title": ""
                  }
                },
                "Example w/ Password": {
                  "value": {
                    "given_name": "Megan",
                    "family_name": "Bowen",
                    "email": "meganb@peterbalance.com",
                    "type": "seat",
                    "title": "",
                    "password": "Se@ttle1!"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "parameters": []
    },
    "/user/{userId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "A valid user account UUID _unless indicated otherwise_"
        }
      ],
      "get": {
        "summary": "Retrieve User Account",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "ce48daca-f044-48e6-ad20-0c6e53db12da",
                      "license": "seat",
                      "flags": {
                        "active": true,
                        "blocked": false,
                        "licensed": true,
                        "archived": false,
                        "deleted": false
                      },
                      "picture": "https://api.counterbalance.io/v1/user/ce48daca-f044-48e6-ad20-0c6e53db12da/photo",
                      "auth": {
                        "email_verified": true,
                        "last_login": 1604815512,
                        "last_password_reset": 0,
                        "last_ip": "67.168.168.228",
                        "total_logins": 78,
                        "is_blocked": false
                      },
                      "name": {
                        "given": "Alex",
                        "preferred": "",
                        "middle": "",
                        "family": "Wilbur",
                        "prefix": null,
                        "suffix": null,
                        "full": "Alex Wilbur",
                        "display": "Alex Wilbur",
                        "short": ""
                      },
                      "email": "alexw@peterbalance.com",
                      "site": null,
                      "department": "1f3da4db-3364-4f58-b8bd-4fee1398a6e1",
                      "manager": null,
                      "room": null,
                      "mail_stop": null,
                      "title": "",
                      "links": [
                        {
                          "context": "Counterbalance ID",
                          "id": "auth0|5e93ab33f346950c46b694d5"
                        },
                        {
                          "context": "Microsoft 365",
                          "id": "201e0cc6-9b88-4908-a69e-60e88b4d9ff7"
                        }
                      ],
                      "milestones": {
                        "accepted_terms": {
                          "status": true,
                          "timestamp": 1586735922
                        },
                        "completed_onboarding": {
                          "status": false,
                          "timestamp": 0
                        },
                        "account_created": {
                          "status": true,
                          "timestamp": 1586735922
                        },
                        "account_blocked": {
                          "status": false,
                          "timestamp": 0
                        },
                        "account_archived": {
                          "status": false,
                          "timestamp": 0
                        },
                        "license_assigned": {
                          "status": true,
                          "timestamp": 1586735923
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "User Not Found": {
                    "value": {
                      "error": {
                        "message": "User not found",
                        "console": "A user with ID 54d71164-9ea1-4a58-a232-930df7418c4c could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": "daa4ceb0a1d0434987e2e536318f4140ad537560"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-user-profile",
        "parameters": [],
        "description": "### Synopsis\nRetrieve the specified user account\n\n<!-- theme: success -->\n> _This endpoint accepts `self` in place of a UUID_\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n#### When using a UUID:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:account:*`,`user:account:read`\n* Licensed Feature: `user_base`\n\n#### When using _self_:\n* Permissions _(at least one):_ `*`,`user:*`,`user:self:*`,`user:self:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update User Account",
        "operationId": "update-user-profile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "User Not Found": {
                    "value": {
                      "error": {
                        "message": "User not found",
                        "console": "A user with ID 54d71164-9ea1-4a58-a232-930df7418c4c could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": "daa4ceb0a1d0434987e2e536318f4140ad537560"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nUpdate the specified user account\n\n<!-- theme: success -->\n> _**Note:** This endpoint accepts `self` in place of a UUID_\n\nSome body fields are marked as _**required**._ This indicates that if they are included in the body of a request, they cannot be empty strings or null values.\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\nWhen using a UUID:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:account:*`,`user:account:update`\n* Licensed Feature: `user_base`\n\nWhen using self:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:self:*`,`user:self:update`\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "given_name": {
                    "type": "string",
                    "description": "The user's first name"
                  },
                  "middle_name": {
                    "type": "string",
                    "description": "The user's middle name"
                  },
                  "family_name": {
                    "type": "string",
                    "description": "The user's last name"
                  },
                  "preferred_given_name": {
                    "type": "string",
                    "description": "The user's preferred first name"
                  },
                  "title": {
                    "type": "string",
                    "description": "The user's job title",
                    "maxLength": 90
                  },
                  "employee_id": {
                    "type": "string",
                    "description": "The user's employee ID"
                  },
                  "user_org_guid": {
                    "type": "string",
                    "description": "The user's alternate GUID"
                  },
                  "room": {
                    "type": "string",
                    "description": "The user's office or room number"
                  },
                  "mail_stop": {
                    "type": "string",
                    "description": "The user's mail stop"
                  },
                  "site": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "uuid",
                    "description": "The user's assigned site"
                  },
                  "manager": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "uuid",
                    "description": "The user's manager"
                  }
                },
                "required": [
                  "given_name",
                  "family_name"
                ]
              }
            }
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Delete User Account",
        "operationId": "delete-user-account",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "User Not Found": {
                    "value": {
                      "error": {
                        "message": "User not found",
                        "console": "A user with ID 54d71164-9ea1-4a58-a232-930df7418c4c could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": "daa4ceb0a1d0434987e2e536318f4140ad537560"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nMark the specified user account for deletion\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:account:*`,`user:account:delete`\n\n### Account Retention & Restoration\n\nWhen deleted, an account is merely marked for deletion and any associated auth account is blocked. The user can be restored for up to 30 days after it is deleted using the Restore User Account endpoint. \n\n### Permanently Delete a User\n\nTo permanently delete a user account, pass the `permanent` query parameter and set it to true. The account will be immediately and permanently removed from the system and cannot be restored. ",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "permanent",
            "description": "If true, the user will be permanently deleted and cannot be restored"
          }
        ]
      }
    },
    "/user/{userId}/block": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Block User Account",
        "operationId": "block-user",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "### Synopsis\nBlock the specified user and prevent them from logging in\n\n<!-- theme: info -->\n> _Coming soon_",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Unblock User Account",
        "operationId": "unblock-user",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "### Synopsis\nUnblock the specified user account and allow them to login\n\n<!-- theme: info -->\n> _Coming soon_",
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}/license": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "A valid user account UUID"
        }
      ],
      "put": {
        "summary": "Assign User Licensing",
        "operationId": "assign-user-licensing",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "ce48daca-f044-48e6-ad20-0c6e53db12da",
                      "license": "seat",
                      "flags": {
                        "active": true,
                        "blocked": false,
                        "licensed": true,
                        "archived": false,
                        "deleted": false
                      },
                      "picture": "https://api.counterbalance.io/v1/user/ce48daca-f044-48e6-ad20-0c6e53db12da/photo",
                      "auth": {
                        "email_verified": true,
                        "last_login": 1604815512,
                        "last_password_reset": 0,
                        "last_ip": "67.168.168.228",
                        "total_logins": 78,
                        "is_blocked": false
                      },
                      "name": {
                        "given": "Alex",
                        "preferred": "",
                        "middle": "",
                        "family": "Wilbur",
                        "prefix": null,
                        "suffix": null,
                        "full": "Alex Wilbur",
                        "display": "Alex Wilbur",
                        "short": ""
                      },
                      "email": "alexw@peterbalance.com",
                      "site": null,
                      "department": "1f3da4db-3364-4f58-b8bd-4fee1398a6e1",
                      "manager": null,
                      "room": null,
                      "mail_stop": null,
                      "title": "",
                      "links": [
                        {
                          "context": "Counterbalance ID",
                          "id": "auth0|5e93ab33f346950c46b694d5"
                        },
                        {
                          "context": "Microsoft 365",
                          "id": "201e0cc6-9b88-4908-a69e-60e88b4d9ff7"
                        }
                      ],
                      "milestones": {
                        "accepted_terms": {
                          "status": true,
                          "timestamp": 1586735922
                        },
                        "completed_onboarding": {
                          "status": false,
                          "timestamp": 0
                        },
                        "account_created": {
                          "status": true,
                          "timestamp": 1586735922
                        },
                        "account_blocked": {
                          "status": false,
                          "timestamp": 0
                        },
                        "account_archived": {
                          "status": false,
                          "timestamp": 0
                        },
                        "license_assigned": {
                          "status": true,
                          "timestamp": 1586735923
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "License Already Activated": {
                    "value": {
                      "error": {
                        "message": "License already activated",
                        "console": "Adele Vance is already assigned a record_user license and it cannot be assigned again",
                        "code": 400
                      },
                      "logging_hash": "212b317605514926303d36e9a341ef7ea46d0c08"
                    }
                  },
                  "Inactive User Account": {
                    "value": {
                      "error": {
                        "message": "Inactive user account",
                        "console": "Adele Vance is not an active user and cannot be assigned a license",
                        "code": 400
                      },
                      "logging_hash": "212b317605514926303d36e9a341ef7ea46d0c08"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "User Not Found": {
                    "value": {
                      "error": {
                        "message": "User not found",
                        "console": "A user with ID 131acd64-f270-4718-80df-1821475d80ac could not be found in the database",
                        "code": 400
                      },
                      "logging_hash": "212b317605514926303d36e9a341ef7ea46d0c08"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nSet the license type for the spcified user\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`tenant:*`,`tenant:licensing:*`,`tenant:licensing:assign`\n* Licensed Feature: `user_base`\n* Adequate quota of the requested type\n\n### Setting the License Type\nThe field `type` may be one of either: \n\n* `record_user` _(non-licensed user)_\n* `seat` _(licensed system user)_ \n* `user` _(licensed end user)_\n\n<!-- theme: danger -->\n> _**Heads Up** Downgrading a user to the `record_user` license will block the user's CounterbalanceID account_\n\n### Setting the User Password\nThe body field `password` is required when the user type specified is either `seat` or `user`. In all other cases, it is ignored.\n\n### Notifying the User\nComing soon...\n",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of license to assign the user",
                    "enum": [
                      "record_user",
                      "user",
                      "seat"
                    ]
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "Required for \"seat\" and \"user\" types"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "type": "seat",
                    "password": "Se@ttle1!"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}/photo": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "A valid user account UUID"
        }
      ],
      "get": {
        "summary": "Retrieve User Photo",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "null"
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-user-photo",
        "description": "### Synopsis\nGet the specified user's photo in PNG format\n\n<!--theme: warning-->\n> _**Heads Up** This is a public endpoint and does not require authentication_\n\n### Prerequisites\n_None_\n\n### Usage Examples\n\nThis endpoint can be used as the `src` attribute of an HTML `img` tag.\n```html\n<img src=\"https://api.counterbalance.io/v1/user/{userId}/photo\">\n```",
        "parameters": []
      },
      "post": {
        "summary": "Upload a Custom Photo",
        "operationId": "post-v1-user-userId-photo",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Upload a custom photo for the specified user\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:account:*`,`user:account:update`\n* Licensed Feature: `user_base`\n\n**Photo Requirements**\n\nThe uploaded photo must meet the following criteria:\n\n* `jpeg` or `png` format\n* Square, equal dimensions\n* Greater than 250px but less than 1000px \n",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "null"
              }
            }
          },
          "description": "POST a JPEG or PNG fle as binary data"
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}/password": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "A valid user account UUID _unless indicated otherwise_"
        }
      ],
      "put": {
        "summary": "Reset User Password",
        "operationId": "reset-user-password",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "No Auth Account": {
                    "value": {
                      "error": {
                        "message": "No authentication account",
                        "console": "Adele Vance does not have an authentication account",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "User Not Found": {
                    "value": {
                      "error": {
                        "message": "User not found",
                        "console": "A user with ID ee876c8d-f404-4e13-84b6-ee22ec304322 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": "..."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "The user's new password",
                    "format": "password"
                  }
                },
                "required": [
                  "password"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "password": "Se@ttle1!"
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nReset the password for the specified user\n\n<!-- theme: success -->\n> _This endpoint accepts `self` in place of a UUID_\n\nThe target user will be notified via email that their password has changed. The new password will not be included in the email.\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n#### When using a UUID:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:account:*`,`user:account:update`\n\n#### When using _self_:\n* Permissions _(at least one):_ `*`,`user:*`,`user:self:*`,`user:self:password`\n\n### Password Strength\nPassword strength is an important consideration when setting passwords for your users. Counterbalance enforces a strong password policy that has the following requirements:\n\n* Must be at least 8-characters in length\n* Lower case (a-z), upper case (A-Z) and numbers (0-9)\n* Special characters (!@#$%^&*)\n* No more than 2 identical characters in a row\n\nNIST recommends a minimum character length of 8, and suggests that length is a better indicator of strength than complexity.\n\n<!-- theme: warning -->\n> ##### ⚠️ Heads Up\n> \n> _A password will be rejected if it contains common dictionary phrases or the user's first name, last name, or shortname._\n\n### Password History\n\nA new password must be different than the user's last 3 passwords. ",
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}/permissions": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "A valid user account UUID"
        }
      ],
      "get": {
        "summary": "Retrieve User Permissions",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-Permissions"
                },
                "examples": {
                  "Example": {
                    "value": [
                      "billing:account:view",
                      "sites:*",
                      "tenant:*",
                      "user:account:*"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-user-permissions",
        "description": "### Synopsis\nRetrieve the permissions associated with the specified user\n\n<!-- theme: success -->\n> _**Note:** This endpoint accepts `self` in place of a UUID_\n\n_**February 2021: ** Retrieving users via UUID is not yet supported._\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n#### When using a UUID _(not yet supported)_:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:account:*`,`user:permissions:*`,`user:account:read`,`user:permissions:read`\n\n#### When using self:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:self:*`,`user:self:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/user/{userId}/roles": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve User's Assigned Roles",
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-Assigned-Roles"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "roles": [
                        "rol_ef4g..."
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-user-roles",
        "description": "### Synopsis\nRetrieve a list of roles assigned to a user\n\n<!-- theme: success -->\n> _This endpoint accepts `self` in place of a UUID_\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n#### When using a UUID:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:roles:*`,`user:roles:read`\n* Licensed Feature: `user_base`\n\n#### When using _self_:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:self:*`,`user:self:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": []
      },
      "put": {
        "summary": "Assign User Roles",
        "operationId": "assign-user-roles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-Assigned-Roles"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 3,
                      "data": [
                        {
                          "id": "rol_9t7sUEmXhoXG0JIn",
                          "name": "Automation Technician",
                          "description": "Permissions suitable for a user in a technical automation service role",
                          "tags": [
                            "functional"
                          ],
                          "system_only": false
                        },
                        {
                          "id": "rol_BjYA2HwGRnfaFhuV",
                          "name": "Base Permissions",
                          "description": "System-assigned role that provides the minimum permissions required to access the console",
                          "tags": [
                            "system"
                          ],
                          "system_only": true
                        },
                        {
                          "id": "rol_t0duC3p8gZbzhZ5a",
                          "name": "Energy Manager",
                          "description": "Permissions suitable for a user in an energy management/environmental responsibility role",
                          "tags": [
                            "functional"
                          ],
                          "system_only": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid Role ID": {
                    "value": {
                      "error": {
                        "message": "Invalid role ID",
                        "console": "One or more of the role IDs are not assignable to this user",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  },
                  "Invalid License Type": {
                    "value": {
                      "error": {
                        "message": "Invalid license type",
                        "console": "The user is not assigned a license that allows role assignment",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "An array of role IDs to add",
                "items": {}
              },
              "examples": {
                "Example": {
                  "value": [
                    "rol_9t7sUEmXhoXG0JIn"
                  ]
                }
              }
            }
          },
          "description": ""
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type"
          }
        ],
        "description": "### Synopsis\nAssign one or more roles to a user\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:roles:*`,`user:roles:update`",
        "tags": [
          "Roles"
        ]
      },
      "delete": {
        "summary": "Remove User Roles",
        "operationId": "remove-user-roles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-Assigned-Roles"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 3,
                      "data": [
                        {
                          "id": "rol_BjYA2HwGRnfaFhuV",
                          "name": "Base Permissions",
                          "description": "System-assigned role that provides the minimum permissions required to access the console",
                          "tags": [
                            "system"
                          ],
                          "system_only": true
                        },
                        {
                          "id": "rol_t0duC3p8gZbzhZ5a",
                          "name": "Energy Manager",
                          "description": "Permissions suitable for a user in an energy management/environmental responsibility role",
                          "tags": [
                            "functional"
                          ],
                          "system_only": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nRemove one or more roles from a user\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`user:*`,`user:roles:*`,`user:roles:remove`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {}
              },
              "examples": {
                "Example": {
                  "value": [
                    "rol_9t7sUEmXhoXG0JIn"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type"
          }
        ]
      }
    },
    "/weather/air-quality/current": {
      "get": {
        "summary": "Retrieve Air Quality Conditions",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-airquality-current",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve current air quality\n\n**Required Permissions:** `*`,`wx:*`,`wx:airquality:*`,`wx:airquality:read`\n\n### Specifying the Location\nAir quality data can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both. Passing more than one will result in an error \n\n<!-- theme: info-->\n> **Please Note:**\n> If the specified address ID has not been geocoded, an error will be returned.\n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "tags": [
          "Weather"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/@address"
        },
        {
          "$ref": "#/components/parameters/coordinates"
        },
        {
          "$ref": "#/components/parameters/language"
        }
      ]
    },
    "/weather/air-quality/forecast": {
      "get": {
        "summary": "Retrieve Air Quality Forecast",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-AQ-Forecast"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-airquality-forecast",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve forecasted daily air quality\n\n**Required Permissions:** `*`,`wx:*`,`wx:airquality:*`,`wx:airquality:read`\n\n### Specifying the Location\nAir quality data can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both. Passing more than one will result in an error \n\n<!-- theme: info-->\n> **Please Note:**\n> If the specified address ID has not been geocoded, an error will be returned.\n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "parameters": [
          {
            "$ref": "#/components/parameters/@address"
          },
          {
            "$ref": "#/components/parameters/coordinates"
          },
          {
            "$ref": "#/components/parameters/language"
          },
          {
            "schema": {
              "type": "integer",
              "default": 5,
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ]
            },
            "in": "query",
            "name": "duration",
            "description": "The number of forecast outlook days to return"
          }
        ],
        "tags": [
          "Weather"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "default": "47.620506,-122.349277"
          },
          "in": "query",
          "name": "coordinates",
          "description": "Retrieve air quality for the specified lat/lon position"
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "in": "query",
          "name": "@address",
          "description": "Retrieve air quality for the specified address ID"
        },
        {
          "schema": {
            "type": "string"
          },
          "in": "query",
          "name": "language",
          "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive."
        }
      ]
    },
    "/weather/alerts": {
      "get": {
        "summary": "Retrieve Severe Weather Alerts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather-Alerts"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 1,
                      "effective_coordinates": {
                        "latitude": 47.8877148,
                        "longitude": -124.6237354
                      },
                      "data": [
                        {
                          "id": 2203972,
                          "category": "FLOOD",
                          "description": "High Surf Advisory",
                          "source": "U.S. National Weather Service",
                          "areas": [
                            {
                              "name": "North Coast",
                              "summary": "High Surf Advisory in effect from 10:00 PM PST until Wednesday, 10:00 PM PST.  Source: U.S. National Weather Service",
                              "status": "New",
                              "span": {
                                "start": "2021-04-13T14:00:00+0000",
                                "end": "2021-04-13T14:00:00+0000"
                              },
                              "details": "...HIGH SURF ADVISORY IN EFFECT FROM 10 PM THIS EVENING TO 10 PM\nPST WEDNESDAY...\n\n* WHAT...Large breaking waves of 18 to 21 feet expected in the\n  surf zone.\n\n* WHERE...North Coast and Central Coast.\n\n* WHEN...From 10 PM this evening to 10 PM PST Wednesday.\n\n* IMPACTS...Dangerous conditions along the coast and in the surf\n  zone. Localized beach erosion may also occur due to large waves.\n\nPRECAUTIONARY/PREPAREDNESS ACTIONS...\n\nLarge waves may break and run up beaches farther than usual. Keep\nyour distance from the coastline and never turn your back on the\nocean.\n\nInexperienced swimmers should remain out of the water due to\ndangerous surf conditions.\n\n&&"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-weather-alerts",
        "description": "Retrieve current severe weather alerts and advisories\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:weather:*`,`sites:weather:alerts`\n* Licensed Feature: `weather_alerts`\n\n### Specifying the Location\nWeather alerts and advisories can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both. Passing more than one will result in an error \n\n<!-- theme: info-->\n> **Please Note:**\n> If the specified address ID has not been geocoded, an error will be returned.\n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code.\n\n<!-- theme: warning-->\n> _The API supports any valid IETF language code but alert data may not be available in the specified language_",
        "parameters": [
          {
            "$ref": "#/components/parameters/@address"
          },
          {
            "$ref": "#/components/parameters/coordinates"
          },
          {
            "$ref": "#/components/parameters/language"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Weather"
        ]
      },
      "parameters": []
    },
    "/weather/current": {
      "get": {
        "summary": "Retrieve Current Weather Conditions",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Current-Conditions"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-current-conditions",
        "description": "Retrieve detailed current weather conditions\n\n**Required Permissions:** `*`,`wx:*`,`wx:conditions:*`,`wx:conditions:read`\n\n### Specifying the Location\nWeather conditions can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both. Passing more than one will result in an error \n\n<!-- theme: info-->\n> **Please Note:**\n> If the specified address ID has not been geocoded, an error will be returned.\n\n### Units\nBy default, data is returned in Imperial units. To return data in Metric units, pass the `metric` query parameter and set it to _true_. \n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "parameters": [
          {
            "$ref": "#/components/parameters/@address"
          },
          {
            "$ref": "#/components/parameters/coordinates"
          },
          {
            "$ref": "#/components/parameters/language"
          },
          {
            "$ref": "#/components/parameters/metric"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Weather"
        ]
      },
      "parameters": []
    },
    "/weather/forecast": {
      "get": {
        "summary": "Retrieve Forecast",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Daily-Forecast"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Too Many Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID, but not both",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  },
                  "Not Enough Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Duration": {
                    "value": {
                      "error": {
                        "message": "9 is not a valid duration",
                        "console": "Invalid duration value. Allowed value(s): 1, 5, 10, or 15",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-weather-forecast",
        "description": "Retrieve a detailed daily weather forecast\n\n **Required Permissions:** `*`,`wx:*`,`wx:forecast:*`,`wx:forecast:read` \n\n ### Specifying the Location\nWeather forecasts can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both. Passing more than one will result in an error \n\n<!-- theme: info-->\n> **Please Note:**\n> If the specified address ID has not been geocoded, an error will be returned.\n\n### Units\nBy default, data is returned in Imperial units. To return data in Metric units, pass the `metric` query parameter and set it to _true_. \n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "parameters": [
          {
            "$ref": "#/components/parameters/@address"
          },
          {
            "$ref": "#/components/parameters/coordinates"
          },
          {
            "$ref": "#/components/parameters/language"
          },
          {
            "$ref": "#/components/parameters/metric"
          },
          {
            "schema": {
              "type": "integer",
              "default": 5,
              "enum": [
                1,
                5,
                10,
                15
              ]
            },
            "in": "query",
            "name": "duration",
            "description": "The number of forecast outlook days to return"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Weather"
        ]
      },
      "parameters": []
    },
    "/weather/indices": {
      "get": {
        "summary": "Retrieve Activity Indices",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Activity-Indices"
          }
        },
        "operationId": "get-weather-indices",
        "description": "Retrieve activity indices and recommendations based on current weather conditions\n\n**Required Permissions:** `*`,`wx:*`,`wx:conditions:*`,`wx:conditions:read`\n\n### Specifying the Location\nWeather indices can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both. Passing more than one will result in an error \n\n<!-- theme: info-->\n> **Please Note:**\n> If the specified address ID has not been geocoded, an error will be returned.\n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "parameters": [
          {
            "$ref": "#/components/parameters/@address"
          },
          {
            "$ref": "#/components/parameters/coordinates"
          },
          {
            "$ref": "#/components/parameters/language"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Weather"
        ]
      },
      "parameters": []
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer Token": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "200-Get-Billing-Account": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Billing-Account"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Billing-Account"
              }
            }
          }
        }
      },
      "200-Get-Payment-Sources": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment-Source"
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "200-Get-Payment-Source": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Payment-Source"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Payment-Source"
              }
            }
          }
        }
      },
      "404-Get-Payment-Source-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "string",
                    "console": "string",
                    "code": 0
                  },
                  "logging_hash": "string"
                }
              }
            }
          }
        }
      },
      "200-Get-Subscriptions": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          }
        }
      },
      "200-Get-Subscription": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Subscription"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Subscription"
              }
            }
          }
        }
      },
      "200-Get-Group": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User-Group"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/User-Group"
              }
            }
          }
        }
      },
      "200-List-Groups": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The number of group objects returned"
                },
                "index": {
                  "type": "array",
                  "uniqueItems": true,
                  "description": "The group IDs returned",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "readOnly": true
                },
                "data": {
                  "type": "array",
                  "description": "An array of group objects",
                  "items": {
                    "$ref": "#/components/schemas/User-Group"
                  }
                }
              }
            }
          }
        }
      },
      "400-Invalid-Scope": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Invalid object type",
                    "console": "The object type specified is invalid",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Collector-Samples": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Collector-Sample"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Collector-Samples"
              }
            }
          }
        }
      },
      "404-Collector-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Collector not found",
                    "console": "Please check the collector ID and try your request again",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Non-Commandable-Point": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Datapoint not commandable",
                    "console": "string",
                    "code": 0
                  },
                  "logging_hash": null
                }
              }
            }
          }
        }
      },
      "404-Point-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Point not found",
                    "console": "Please check the point ID and try your request again",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Point-Offline": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Point"
            },
            "examples": {
              "Analog Input Point": {
                "$ref": "#/components/examples/Get-Analog-Input-Point"
              }
            }
          }
        }
      },
      "200-Get-Point": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Point"
            },
            "examples": {
              "Analog Input": {
                "$ref": "#/components/examples/Get-Analog-Input-Point"
              },
              "Analog Input Online": {
                "$ref": "#/components/examples/Get-Analog-Input-Point-Online"
              },
              "Binary Output Online": {
                "$ref": "#/components/examples/Get-Binary-Output-Point-Online"
              }
            }
          }
        }
      },
      "200-Get-Collector": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Collector"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Collector-Details"
              }
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "application/json"
          }
        }
      },
      "200-Get-Collector-Listing": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "readOnly": true
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Collector"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Collector-Details"
              }
            }
          }
        }
      },
      "200-Get-Point-Listing": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Point"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Point-List"
              }
            }
          }
        }
      },
      "200-Command-Point": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "description": "Indicates the status of the request, produced by the gateway",
                  "readOnly": true
                },
                "scheduled_release_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The UUID of the scheduled release job, if requested",
                  "nullable": true,
                  "readOnly": true
                }
              }
            },
            "examples": {
              "Response Success": {
                "value": {
                  "status": true
                }
              },
              "Response Fail": {
                "value": {
                  "status": false
                }
              }
            }
          }
        }
      },
      "200-Get-Release": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Release-Job"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Release-Job"
              }
            }
          }
        }
      },
      "200-Get-Release-Listing": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of release jobs returned",
                  "type": "integer",
                  "readOnly": true
                },
                "index": {
                  "type": "array",
                  "description": "An array of release job UUIDs as they appear in the `data` array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "readOnly": true
                },
                "data": {
                  "type": "array",
                  "description": "An array of release jobs",
                  "uniqueItems": true,
                  "items": {
                    "$ref": "#/components/schemas/Release-Job"
                  },
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "404-Release-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Release job ID ... could not be found",
                    "console": "Sorry, we couldn't find that job",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-BACnet-Point": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BACnet-Point"
            },
            "examples": {}
          }
        }
      },
      "200-Get-Collector-Sample-Stats": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Collector-Stats"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Collector-Stats"
              }
            }
          }
        }
      },
      "200-Get-Plot": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Trend-Plot"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Plot"
              }
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string",
              "default": "application/json",
              "example": "application/json"
            }
          }
        }
      },
      "200-List-Plots": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "The number of plot objects returned",
                  "readOnly": true
                },
                "index": {
                  "type": "array",
                  "description": "An array of plot object IDs",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "description": "An array of plot objects",
                  "items": {
                    "$ref": "#/components/schemas/Trend-Plot"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Plot-Object-Listing"
              }
            }
          }
        }
      },
      "404-Plot-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Plot ID ... could not be found",
                    "console": "Sorry, we couldn't find that plot",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Report": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "200-List-Reports": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "404-Report-Not-Found": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "200-Get-Report-Group": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "200-List-Report-Groups": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "200-Get-Report-Schedule": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "200-List-Report-Schedules": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Retrieve-Tenant-Account": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Tenant-Account"
            }
          }
        }
      },
      "Retrieve-Site": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Site"
            }
          }
        }
      },
      "404-Site-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site not found",
                    "console": "The site ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "404-Floor-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Floor not found",
                    "console": "The floor ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "404-Room-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Room not found",
                    "console": "The room ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Site-Not-Empty": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site is not empty",
                    "console": "The site ID ... cannot be deleted while it contains floors. Delete the associated floorsand try again.",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Floor-Not-Empty": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Floor not empty",
                    "console": "The floor ID ... cannot be deleted while it contains rooms. Delete the associated rooms and try again.",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Floor": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Floor"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Floor"
              }
            }
          }
        }
      },
      "200-Get-Room": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Room"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Room"
              }
            }
          }
        }
      },
      "200-Get-Site": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Site"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Site"
              }
            }
          }
        }
      },
      "200-Get-Address": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Address"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Address"
              }
            }
          }
        }
      },
      "404-Address-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Address not found",
                    "console": "The address ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Address-Already-Exists": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site already has an address",
                    "console": "Update or delete the existing address",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "409-No-Address-Geocoding": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Invalid Geocoding": {
                "value": {
                  "error": {
                    "message": "Invalid address geocoding",
                    "console": "The address ID ... is not geocoded and we have no coordinates to check",
                    "code": 409
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Timezone": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Time-Zone"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Timezone"
              }
            }
          }
        }
      },
      "200-List-Sites": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "description": "The number of site objects returned"
                },
                "index": {
                  "type": "array",
                  "description": "An array of the returned site object UUIDs",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "uniqueItems": true,
                  "description": "An array of site objects",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Site-Object-List"
              }
            }
          }
        }
      },
      "200-List-Floors": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "description": "The number of floor objects returned"
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "description": "An array of floor objects",
                  "items": {
                    "$ref": "#/components/schemas/Floor"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Floor-Object-List"
              }
            }
          }
        }
      },
      "200-List-Rooms": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "The number of room objects returned"
                },
                "index": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "description": "An array of room objects",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Room-Object-List"
              }
            }
          }
        }
      },
      "200-Geocode-Search": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Geocode-Search"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Geocode-Search"
              }
            }
          }
        }
      },
      "200-Tenant-Account": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Tenant-Account"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Tenant-Account"
              }
            }
          }
        }
      },
      "201-Create-Tenant": {
        "description": "Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Generic-Response"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Create-Tenant-Account"
              }
            }
          }
        }
      },
      "200-Tenant-Quota-Summary": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Tenant-Quota-Summary"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Tenant-Quota-Summary"
              }
            }
          }
        }
      },
      "200-Tenant-Confirmed": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success_message": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Confirm-Tenant-Account"
              }
            }
          }
        }
      },
      "503-Tenant-Create-Error": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "We are unable to process your request right now. Please try again later.",
                    "console": "There was an error while creating your account. Please try again later. If the issue persists, please contact support and provide the loggin hash provided.",
                    "code": 503
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Complete-Onboarding": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Generic-Response"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Onboard-Tenant-Account"
              }
            }
          }
        }
      },
      "200-Tenant-Preferences": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Tenant-Preferences"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Tenant-Preferences"
              }
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "Application/json"
          }
        }
      },
      "200-Get-Daily-Forecast": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Weather-Forecast"
            }
          }
        }
      },
      "200-Get-Current-Conditions": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Weather-Conditions"
            },
            "examples": {
              "Response (Imperial Units)": {
                "$ref": "#/components/examples/Response (Imperial Units)"
              },
              "Response (Metric Units)": {
                "$ref": "#/components/examples/Response (Metric Units)"
              }
            }
          }
        }
      },
      "200-Get-Activity-Indices": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Weather-Indices"
            }
          }
        }
      },
      "200-Get-Current-AQ": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Air-Quality"
            }
          }
        }
      },
      "200-Get-AQ-Forecast": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "string"
                },
                "effective_coordinates": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    }
                  }
                },
                "forecasts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Air-Quality-Forecast"
                  }
                }
              }
            }
          }
        }
      },
      "200-Get-Gateway": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Gateway"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Gateway"
              }
            }
          }
        },
        "headers": {}
      },
      "404-Gateway-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Gateway not found",
                    "console": "Please check the gateway ID and try your request again",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        },
        "headers": {}
      },
      "200-Get-Gateway-Listing": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number"
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "uniqueItems": true,
                  "minItems": 1,
                  "items": {
                    "$ref": "#/components/schemas/Gateway"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Gateway-List"
              }
            }
          }
        },
        "headers": {}
      },
      "200-Gateway-Whois": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "responses": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "device_id": {
                            "type": "string"
                          },
                          "device_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "online_devices": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Gateway-Whois"
              }
            }
          }
        }
      },
      "200-Get-Gateway-Devices": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "description": "The number of devices available"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "managed_devices",
                    "unmanaged_devices",
                    "online_devices",
                    "offline_devices",
                    "new_devices_available"
                  ],
                  "properties": {
                    "managed_devices": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "description": {
                            "type": "string",
                            "minLength": 1
                          },
                          "location": {
                            "type": "string",
                            "minLength": 1
                          },
                          "site": {
                            "type": "string",
                            "minLength": 1
                          },
                          "online": {
                            "type": "boolean"
                          },
                          "bacnet": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "location",
                          "site",
                          "online"
                        ]
                      }
                    },
                    "unmanaged_devices": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "An array of devies available but not yet managed",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device_id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "device_name": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "device_id",
                          "device_name"
                        ]
                      }
                    },
                    "online_devices": {
                      "type": "array",
                      "description": "A list of BACnet device instance IDs that are online",
                      "items": {
                        "type": "object"
                      }
                    },
                    "offline_devices": {
                      "type": "array",
                      "description": "A list of BACnet device instance IDs that are managed and not responding",
                      "items": {
                        "type": "object"
                      }
                    },
                    "new_devices_available": {
                      "type": "boolean",
                      "description": "Indicates if new devices are available for management"
                    }
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Gateway-Devices"
              }
            }
          }
        }
      },
      "200-Get-Controller-Listing": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Controller"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Controller-Listing"
              }
            }
          }
        }
      },
      "404-Controller-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Controller not found",
                    "console": "The controller ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Controller": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Controller"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Controller-Details"
              },
              "Response w/ BACnet Details": {
                "$ref": "#/components/examples/Get-Controller-Details-Online"
              }
            }
          }
        }
      },
      "200-Get-Network": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "200-Get-Network-Listing": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "200-Gateway-Generic-Operation": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "description": "The result of the command. If `true`, command was successful. If `false`, command failed."
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Generic-Gateway-Operation"
              }
            }
          }
        }
      },
      "200-Get-Gateway-Status": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Gateway-Status"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Gateway-Status"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Address": {
        "description": "",
        "type": "object",
        "title": "Address",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "@site": {
            "type": "string",
            "format": "uuid"
          },
          "lines": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "locality": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postcode": {
            "type": "number"
          },
          "country": {
            "type": "string"
          },
          "formatted": {
            "type": "string"
          },
          "geolocation": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "timezone": {
            "type": "string"
          },
          "designations": {
            "type": "object",
            "properties": {
              "primary_mailing": {
                "type": "boolean"
              },
              "primary_billing": {
                "type": "boolean"
              }
            }
          }
        },
        "x-tags": [
          "Address"
        ]
      },
      "Air-Quality": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "effective_coordinates": {
              "latitude": "47.55355",
              "longitude": "-122.04792"
            },
            "timestamp": "2022-02-22T21:00:00+0000",
            "description": "The air quality is generally acceptable for most individuals. However, sensitive groups may experience minor to moderate symptoms from long-term exposure.",
            "index": {
              "local": 27.5,
              "global": 30.9
            },
            "status": "Fair",
            "status_color": "#FFC300",
            "dominant_pollutant": "Ozone",
            "pollutants": [
              {
                "type": "NO2",
                "name": "Nitrogen Dioxide",
                "index": {
                  "local": 2.7,
                  "global": 2.6
                },
                "concentration": {
                  "value": 5,
                  "unit": "µg/m³"
                }
              }
            ]
          }
        },
        "title": "Air Quality",
        "x-tags": [
          "Air Quality"
        ],
        "properties": {
          "effective_coordinates": {
            "type": "object",
            "description": "An array of coordinates",
            "properties": {
              "latitude": {
                "type": "string",
                "description": "The effective latitude of this request"
              },
              "longitude": {
                "type": "string",
                "description": "The effective longitude of this request"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "description": "Date and time of the current observation displayed in ISO 8601 format. *For example, 2022-02-23T08:00:00+0000*",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "description": "A textual explanation of this air quality result in the requested language.",
            "readOnly": true
          },
          "index": {
            "type": "object",
            "properties": {
              "local": {
                "type": "number",
                "description": "Air quality rating on a scale set by local regulating bodies. Scales can vary widely based on location. See [Wikipedia](https://en.wikipedia.org/wiki/Air_quality_index) for more information.",
                "readOnly": true
              },
              "global": {
                "type": "number",
                "description": "Internationally normalized air quality rating on a scale from 0 to 300 and up, with higher numbers representing worse air quality.",
                "readOnly": true
              }
            }
          },
          "status": {
            "type": "string",
            "description": "One-word description of the air quality in the requested language. For example, \"Excellent\".",
            "readOnly": true
          },
          "status_color": {
            "type": "string",
            "description": "A unique color corresponding to the category of this air quality result.",
            "readOnly": true
          },
          "dominant_pollutant": {
            "type": "string",
            "description": "The pollutant with the highest concentration.",
            "readOnly": true
          },
          "pollutants": {
            "type": "array",
            "uniqueItems": true,
            "description": "Information about individual pollutants.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of pollutant. Please note that more may be added at any time.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the pollutant in English.",
                  "readOnly": true
                },
                "index": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "number",
                      "description": "Air quality rating on a scale set by local regulating bodies. Scales can vary widely based on location. See [Wikipedia](https://en.wikipedia.org/wiki/Air_quality_index) for more information.",
                      "readOnly": true
                    },
                    "global": {
                      "type": "number",
                      "description": "Internationally normalized air quality rating on a scale from 0 to 300 and up, with higher numbers representing worse air quality.",
                      "readOnly": true
                    }
                  }
                },
                "concentration": {
                  "type": "object",
                  "description": "An object containing the number of pollutant particles per volume of air.",
                  "properties": {
                    "value": {
                      "type": "number",
                      "readOnly": true
                    },
                    "unit": {
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "readOnly": true
          }
        }
      },
      "Air-Quality-Forecast": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "timestamp": "2022-02-23T08:00:00+0000",
            "description": "The air quality is generally acceptable for most individuals. However, sensitive groups may experience minor to moderate symptoms from long-term exposure.",
            "index": {
              "local": 33.7,
              "global": 35.7
            },
            "status": "Fair",
            "status_color": "#FFC300",
            "dominant_pollutant": "Ozone"
          }
        },
        "title": "Air Quality Forecast",
        "x-tags": [
          "Air Quality"
        ],
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Date and time of the current observation displayed in ISO 8601 format. *For example, 2022-02-23T08:00:00+0000*",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "A textual explanation of this air quality result in the requested language.",
            "readOnly": true
          },
          "index": {
            "type": "object",
            "properties": {
              "local": {
                "type": "number",
                "description": "Air quality rating on a scale set by local regulating bodies. Scales can vary widely based on location. See [Wikipedia](https://en.wikipedia.org/wiki/Air_quality_index) for more information.",
                "readOnly": true
              },
              "global": {
                "type": "number",
                "description": "Internationally normalized air quality rating on a scale from 0 to 300 and up, with higher numbers representing worse air quality.",
                "readOnly": true
              }
            },
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "One-word description of the air quality in the requested language. *For example, \"Excellent\"*.",
            "readOnly": true
          },
          "status_color": {
            "type": "string",
            "description": "A unique color corresponding to the category of this air quality result.",
            "readOnly": true
          },
          "dominant_pollutant": {
            "type": "string",
            "description": "The pollutant with the highest concentration.",
            "readOnly": true
          }
        }
      },
      "BACnet-Point": {
        "title": "BACnet Point",
        "type": "object",
        "description": "",
        "properties": {
          "object": {
            "type": "object",
            "description": "Details about the BACnet object",
            "properties": {
              "instance": {
                "type": "number",
                "description": "The BACnet object instance ID of the point"
              },
              "type": {
                "type": "number",
                "description": "The BACnet object type of the point ",
                "example": 0,
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  13,
                  14,
                  19
                ]
              },
              "name": {
                "type": "string",
                "description": "The BACnet object name of the point"
              },
              "description": {
                "type": "string",
                "description": "The BACnet object description of the point"
              }
            },
            "required": [
              "instance",
              "type",
              "name"
            ]
          },
          "telemetry": {
            "type": "object",
            "description": "Details about the BACnet telemetry",
            "properties": {
              "present_value": {
                "type": "number",
                "description": "The unformatted present value of the point"
              },
              "reliability": {
                "type": "string",
                "description": "The BACnet reliability of the point",
                "example": "no fault detected",
                "enum": [
                  "no fault detected",
                  "unreliable other"
                ],
                "readOnly": true
              },
              "device_type": {
                "type": "string",
                "description": "The BACnet device or sensor type of the point",
                "example": "10k Thermister",
                "readOnly": true
              },
              "event_state": {
                "type": "string",
                "description": "The BACnet event state of the point",
                "example": "normal",
                "enum": [
                  "normal",
                  "fault",
                  "offnormal"
                ],
                "readOnly": true
              },
              "state_text": {
                "type": "array",
                "description": "The BACnet state text array of the point",
                "minItems": 2,
                "items": {
                  "type": "string",
                  "readOnly": true
                },
                "readOnly": true
              },
              "polarity": {
                "type": "string",
                "description": "The polarity of the point",
                "readOnly": true
              },
              "feedback_value": {
                "type": "number",
                "readOnly": true
              },
              "relinquish_default": {
                "type": "number",
                "description": "The relinquish default for the point",
                "readOnly": true
              },
              "units": {
                "type": "string",
                "description": "The raw BACnet units for the point",
                "readOnly": true
              }
            },
            "required": [
              "present_value"
            ]
          },
          "status": {
            "type": "object",
            "properties": {
              "in_alarm": {
                "type": "boolean"
              },
              "fault": {
                "type": "boolean"
              },
              "out_of_service": {
                "type": "boolean"
              },
              "overridden": {
                "type": "boolean"
              }
            }
          },
          "priority_array": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "alarming": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "acked_transitions": {
                "type": "object",
                "properties": {
                  "to_normal": {
                    "type": "boolean"
                  },
                  "to_offnormal": {
                    "type": "boolean"
                  },
                  "to_fault": {
                    "type": "boolean"
                  }
                }
              },
              "notify": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "notification_class": {
                    "type": "number"
                  }
                }
              },
              "time_delay": {
                "type": "number"
              }
            }
          },
          "totalization": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "elapsed_active_time": {
                "type": "number"
              },
              "last_reset": {
                "type": "number"
              },
              "ealpsed_inactive_time": {
                "type": "number"
              }
            }
          }
        },
        "x-tags": [
          "Point"
        ]
      },
      "Billing-Account": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "minLength": 1
          },
          "currency": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string"
          },
          "subscriptions": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "readOnly": true
              },
              "index": {
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "readOnly": true
                }
              },
              "data": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "sources": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer"
              },
              "index": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "data": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/Payment-Source"
                }
              }
            }
          },
          "default_source": {
            "type": "string",
            "minLength": 1
          },
          "invoicing": {
            "type": "object",
            "properties": {
              "prefix": {
                "type": "string",
                "minLength": 1
              },
              "next_sequence": {
                "type": "integer",
                "readOnly": true
              }
            }
          },
          "balance": {
            "type": "number",
            "readOnly": true
          },
          "delinquent": {
            "type": "boolean",
            "readOnly": true
          },
          "billing": {
            "type": "object",
            "properties": {
              "company": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "address": {
                "type": "object",
                "properties": {
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1
                  },
                  "postcode": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "title": "Billing Account",
        "x-tags": [
          "Billing Account"
        ]
      },
      "Collector": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "Collector",
        "x-tags": [
          "Collector"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The collector object UUID",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date/time the collector object was created",
            "readOnly": true
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "**Not in use**",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "If `true`, the collector will collect data at the interval configured. If `false`, the collector will not collect new data."
          },
          "interval": {
            "enum": [
              300,
              600,
              900
            ],
            "type": "integer",
            "description": "The number of seconds between data samples"
          },
          "sample_count": {
            "type": "integer",
            "description": "The total number of samples that are stored in the cloud, since the collector was created ",
            "readOnly": true
          },
          "source": {
            "type": "object",
            "properties": {
              "point": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "object_type": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "instance_id": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "readOnly": true
                  }
                },
                "required": [
                  "id"
                ]
              },
              "controller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true,
                    "readOnly": true
                  },
                  "device_id": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "gateway": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true,
                    "readOnly": true
                  }
                },
                "readOnly": true
              }
            }
          },
          "@site": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          }
        },
        "required": [
          "id"
        ]
      },
      "Collector-Sample": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Response": {
            "$ref": "#/components/examples/Get-Collector-Samples"
          }
        },
        "properties": {
          "count": {
            "type": "number"
          },
          "range": {
            "type": "object",
            "properties": {
              "start": {
                "type": "number"
              },
              "end": {
                "type": "number"
              }
            }
          },
          "integrity": {
            "type": "object",
            "properties": {
              "sample_duration": {
                "type": "number"
              },
              "expected_samples": {
                "type": "number"
              },
              "missing_samples": {
                "type": "number"
              },
              "quality": {
                "type": "number"
              }
            }
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "minLength": 1
                },
                "timestamp": {
                  "type": "number"
                },
                "value": {
                  "type": "number"
                },
                "feedback_value": {},
                "state_text": {},
                "event_state": {
                  "type": "string",
                  "minLength": 1
                },
                "priority_array": {},
                "status_flags": {
                  "type": "object",
                  "properties": {
                    "fault": {
                      "type": "boolean"
                    },
                    "in_alarm": {
                      "type": "boolean"
                    },
                    "overridden": {
                      "type": "boolean"
                    },
                    "out_of_service": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "statistics": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number"
              },
              "max": {
                "type": "number"
              },
              "mean": {
                "type": "number"
              }
            }
          },
          "health": {
            "type": "object",
            "properties": {
              "event_state_distribution": {
                "type": "object",
                "properties": {
                  "normal": {
                    "type": "object",
                    "properties": {
                      "sample_count": {
                        "type": "number"
                      },
                      "percent_total": {
                        "type": "number"
                      }
                    }
                  },
                  "offnormal": {
                    "type": "object",
                    "properties": {
                      "sample_count": {
                        "type": "number"
                      },
                      "percent_total": {
                        "type": "number"
                      }
                    }
                  },
                  "fault": {
                    "type": "object",
                    "properties": {
                      "sample_count": {
                        "type": "number"
                      },
                      "percent_total": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "status_distribution": {
                "type": "object",
                "properties": {
                  "fault": {
                    "type": "object",
                    "properties": {
                      "sample_count": {
                        "type": "number"
                      },
                      "percent_total": {
                        "type": "number"
                      }
                    }
                  },
                  "in_alarm": {
                    "type": "object",
                    "properties": {
                      "sample_count": {
                        "type": "number"
                      },
                      "percent_total": {
                        "type": "number"
                      }
                    }
                  },
                  "overridden": {
                    "type": "object",
                    "properties": {
                      "sample_count": {
                        "type": "number"
                      },
                      "percent_total": {
                        "type": "number"
                      }
                    }
                  },
                  "out_of_service": {
                    "type": "object",
                    "properties": {
                      "sample_count": {
                        "type": "number"
                      },
                      "percent_total": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "title": "Collector Sample",
        "x-tags": [
          "Collector"
        ]
      },
      "Collector-Stats": {
        "title": "Collector Stats",
        "type": "object",
        "x-tags": [
          "Collector"
        ],
        "description": "",
        "properties": {
          "sample_count": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        }
      },
      "Controller": {
        "description": "",
        "type": "object",
        "title": "Controller",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "@gateway": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "instance_id": {
            "type": "number"
          },
          "@site": {
            "type": "string"
          },
          "is_online": {
            "type": "boolean",
            "nullable": true
          },
          "is_ostracized": {
            "type": "boolean"
          },
          "point_count": {
            "type": "integer",
            "description": "The number of points that are connected to this controller",
            "readOnly": true
          },
          "bacnet": {
            "type": "object",
            "properties": {
              "object": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "string"
                  }
                }
              },
              "protocol": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "number"
                  },
                  "revision": {
                    "type": "number"
                  },
                  "max_master": {
                    "type": "number"
                  },
                  "device_id": {
                    "type": "string"
                  },
                  "max_segments_accepted": {
                    "type": "number"
                  },
                  "apdu": {
                    "type": "object",
                    "properties": {
                      "timeout": {
                        "type": "number"
                      },
                      "retries": {
                        "type": "number"
                      },
                      "segment_timeout": {
                        "type": "number"
                      },
                      "max_length": {
                        "type": "number"
                      }
                    }
                  },
                  "services_supported": {
                    "type": "object",
                    "properties": {
                      "atomic-read-file": {
                        "type": "boolean"
                      },
                      "confirmed-text-message": {
                        "type": "boolean"
                      },
                      "unconfirmed-text-message": {
                        "type": "boolean"
                      },
                      "time-synchronization": {
                        "type": "boolean"
                      },
                      "confirmed-event-notification": {
                        "type": "boolean"
                      },
                      "reinitialize-device": {
                        "type": "boolean"
                      },
                      "who-is": {
                        "type": "boolean"
                      },
                      "who-has": {
                        "type": "boolean"
                      },
                      "unconfirmed-event-notification": {
                        "type": "boolean"
                      },
                      "subscribe-cov-property": {
                        "type": "boolean"
                      },
                      "vt-data": {
                        "type": "boolean"
                      },
                      "unconfirmed-private-transfer": {
                        "type": "boolean"
                      },
                      "create-object": {
                        "type": "boolean"
                      },
                      "delete-object": {
                        "type": "boolean"
                      },
                      "read-property-conditional": {
                        "type": "boolean"
                      },
                      "add-list-element": {
                        "type": "boolean"
                      },
                      "vt-open": {
                        "type": "boolean"
                      },
                      "remove-list-element": {
                        "type": "boolean"
                      },
                      "get-event-information": {
                        "type": "boolean"
                      },
                      "confirmed-cov-notification": {
                        "type": "boolean"
                      },
                      "i-am": {
                        "type": "boolean"
                      },
                      "device-communication-control": {
                        "type": "boolean"
                      },
                      "acknowledge-alarm": {
                        "type": "boolean"
                      },
                      "get-alarm-summary": {
                        "type": "boolean"
                      },
                      "i-have": {
                        "type": "boolean"
                      },
                      "subscribe-cov": {
                        "type": "boolean"
                      },
                      "confirmed-private-transfer": {
                        "type": "boolean"
                      },
                      "vt-close": {
                        "type": "boolean"
                      },
                      "request-key": {
                        "type": "boolean"
                      },
                      "read-property-multiple": {
                        "type": "boolean"
                      },
                      "write-property": {
                        "type": "boolean"
                      },
                      "life-safety-operation": {
                        "type": "boolean"
                      },
                      "read-property": {
                        "type": "boolean"
                      },
                      "atomic-write-file": {
                        "type": "boolean"
                      },
                      "utc-time-synchronization": {
                        "type": "boolean"
                      },
                      "get-enrollment-summary": {
                        "type": "boolean"
                      },
                      "write-property-multiple": {
                        "type": "boolean"
                      },
                      "unconfirmed-cov-notification": {
                        "type": "boolean"
                      },
                      "read-range": {
                        "type": "boolean"
                      },
                      "authenticate": {
                        "type": "boolean"
                      }
                    }
                  },
                  "object_types_supported": {
                    "type": "object",
                    "properties": {
                      "averaging": {
                        "type": "boolean"
                      },
                      "multi-state-input": {
                        "type": "boolean"
                      },
                      "schedule": {
                        "type": "boolean"
                      },
                      "multi-state-output": {
                        "type": "boolean"
                      },
                      "binary-output": {
                        "type": "boolean"
                      },
                      "analog-value": {
                        "type": "boolean"
                      },
                      "life-safety-point": {
                        "type": "boolean"
                      },
                      "group": {
                        "type": "boolean"
                      },
                      "notification-class": {
                        "type": "boolean"
                      },
                      "analog-input": {
                        "type": "boolean"
                      },
                      "file": {
                        "type": "boolean"
                      },
                      "command": {
                        "type": "boolean"
                      },
                      "life-safety-zone": {
                        "type": "boolean"
                      },
                      "binary-input": {
                        "type": "boolean"
                      },
                      "loop": {
                        "type": "boolean"
                      },
                      "multi-state-value": {
                        "type": "boolean"
                      },
                      "analog-output": {
                        "type": "boolean"
                      },
                      "calendar": {
                        "type": "boolean"
                      },
                      "event-enrollment": {
                        "type": "boolean"
                      },
                      "pulse-converter": {
                        "type": "boolean"
                      },
                      "device": {
                        "type": "boolean"
                      },
                      "trend-log": {
                        "type": "boolean"
                      },
                      "binary-value": {
                        "type": "boolean"
                      },
                      "program": {
                        "type": "boolean"
                      },
                      "accumulator": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "hardware": {
                "type": "object",
                "properties": {
                  "make": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "vendor_id": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "firmware_revision": {
                    "type": "string"
                  }
                }
              },
              "system": {
                "type": "object",
                "properties": {
                  "application_software_version": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string"
                  },
                  "time": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-tags": [
          "Controller"
        ]
      },
      "Error": {
        "title": "Error Response",
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "The error that occurred"
              },
              "console": {
                "type": "string",
                "description": "Additional error output and further instruction"
              },
              "code": {
                "type": "number",
                "description": "The HTTP error code"
              }
            },
            "required": [
              "message",
              "console",
              "code"
            ]
          },
          "logging_hash": {
            "type": [
              "string",
              "null"
            ],
            "description": "A logging entry ID for debugging"
          }
        }
      },
      "Floor": {
        "description": "",
        "type": "object",
        "title": "Floor",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "@site": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "below_grade": {
                "type": "boolean"
              },
              "gross_floor_area": {
                "type": "number",
                "readOnly": true
              },
              "room_count": {
                "type": "number",
                "readOnly": true
              },
              "net_room_area": {
                "type": "number",
                "readOnly": true
              }
            }
          }
        },
        "x-tags": [
          "Floor"
        ]
      },
      "Gateway": {
        "title": "Gateway",
        "type": "object",
        "description": "",
        "x-examples": {},
        "x-tags": [
          "Gateway"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The gateway UUID"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the gateway was created",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the gateway was last modified",
            "readOnly": true
          },
          "serial": {
            "type": "string",
            "description": "The serial number of the gateway"
          },
          "name": {
            "type": "string",
            "description": "The name of the gateway"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the gateway"
          }
        }
      },
      "Gateway-Network-Interface": {
        "title": "Gateway Network Interface",
        "type": "object",
        "x-tags": [
          "Gateway"
        ],
        "properties": {
          "dhcp": {
            "type": "boolean"
          },
          "mac": {
            "type": "string",
            "example": "2C:54:91:88:C9:E3",
            "description": "The physical MAC address of the interface",
            "readOnly": true
          },
          "address": {
            "type": "string"
          },
          "subnet": {
            "type": "string",
            "description": "The IPv4 subnet mask of the interface"
          },
          "gateway": {
            "type": "string",
            "description": "The IPv4 gateway address of the interface"
          },
          "cidr": {
            "type": "string",
            "description": "The CIDR mask length of the interface",
            "readOnly": true
          },
          "dns": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "maxItems": 4,
            "description": "An array of IPv4 DNS server addresses used with the interface",
            "items": {
              "type": "string",
              "format": "ipv4"
            }
          }
        }
      },
      "Gateway-Status": {
        "title": "Gateway Status",
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "The hostname of the gateway device",
            "format": "hostname"
          },
          "serial": {
            "type": "string",
            "description": "The serial number of the gateway device",
            "format": "hostname"
          },
          "registration": {
            "type": "object",
            "properties": {
              "tenant": {
                "type": "string",
                "description": "The registered tenant ID",
                "format": "uuid",
                "readOnly": true
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of device registration in ISO8601 format",
                "readOnly": true
              }
            }
          },
          "uptime": {
            "type": "string",
            "description": "The uptime of the gateway device",
            "readOnly": true
          },
          "services": {
            "type": "object",
            "additionalProperties": false,
            "description": "Details about the services running on the gateway device",
            "properties": {
              "running": {
                "type": "number",
                "description": "The number of services running",
                "readOnly": true
              },
              "status": {
                "type": "object",
                "description": "The status of key gateway services",
                "properties": {
                  "web_server": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "cache": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "ssh": {
                    "type": "boolean",
                    "readOnly": true
                  },
                  "bacnet": {
                    "type": "boolean"
                  },
                  "tunnel": {
                    "type": "boolean"
                  }
                },
                "readOnly": true
              }
            },
            "readOnly": true
          },
          "network": {
            "type": "object",
            "description": "An object describing the gateway's physical network interfaces",
            "properties": {
              "eth0": {
                "$ref": "#/components/schemas/Gateway-Network-Interface"
              }
            }
          },
          "config": {
            "type": "object",
            "description": "Details about the gateway configuration",
            "properties": {
              "hosts": {
                "type": "object",
                "properties": {
                  "api": {
                    "type": "string"
                  },
                  "data": {
                    "type": "string"
                  }
                }
              },
              "cache": {
                "type": "object",
                "properties": {
                  "aging": {
                    "type": "object",
                    "properties": {
                      "max_object_age": {
                        "type": "number"
                      },
                      "max_controller_age": {
                        "type": "number"
                      },
                      "max_objectlist_age": {
                        "type": "number"
                      },
                      "max_controllerlist_age": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "network_scanning": {
                "type": "object",
                "properties": {
                  "limits": {
                    "type": "object",
                    "properties": {
                      "controllers": {
                        "type": "integer"
                      },
                      "collectors": {
                        "type": "integer"
                      }
                    }
                  },
                  "bounce": {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "integer"
                      },
                      "collector": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "firmware": {
            "type": "object",
            "description": "Details about the gateway firmware",
            "properties": {
              "revision": {
                "type": "string",
                "description": "The firmware revision string"
              },
              "release": {
                "type": "string",
                "description": "The release revision of the gateway firmware"
              },
              "architecture": {
                "type": "string",
                "description": "The architecture of the gateway firmware"
              }
            }
          }
        },
        "x-tags": [
          "Gateway"
        ]
      },
      "Geocode-Search": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "$ref": "#/components/examples/Geocode-Search"
          }
        },
        "properties": {
          "name": {
            "type": "string"
          },
          "geolocation": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "geometry": {
            "type": "string",
            "format": "uuid"
          }
        },
        "title": "Geocode Search",
        "x-tags": [
          "Utilities"
        ]
      },
      "Invoice": {
        "title": "Invoice",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Invoice"
        ]
      },
      "Network": {
        "title": "Network",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Network"
        ]
      },
      "Payment-Source": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "Payment Source",
        "x-tags": [
          "Payment Source"
        ],
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "nickname": {
            "type": "string"
          },
          "cardholder_name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "funding": {
            "type": "string",
            "readOnly": true
          },
          "last4": {
            "type": "string",
            "readOnly": true
          },
          "expiration": {
            "type": "object",
            "properties": {
              "month": {
                "type": "number"
              },
              "year": {
                "type": "number"
              }
            }
          },
          "fingerprint": {
            "type": "string",
            "readOnly": true
          },
          "cvc_check": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Point": {
        "description": "",
        "type": "object",
        "title": "Point",
        "properties": {
          "id": {
            "type": "string"
          },
          "@controller": {
            "type": "string",
            "format": "uuid"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "instance_id": {
            "type": "number"
          },
          "object_type": {
            "type": "number"
          },
          "collector_count": {
            "type": "integer",
            "minimum": 0,
            "maximum": 16
          },
          "@site": {
            "type": "string",
            "format": "uuid"
          },
          "units": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "raw": {
                "type": "string"
              },
              "short": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Point"
        ]
      },
      "Release-Job": {
        "title": "Scheduled Release Job",
        "type": "object",
        "x-tags": [
          "Scheduled Release"
        ],
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of the release job",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "Date and time the release job was created, displayed in ISO 8601 format",
            "format": "date-time",
            "example": "2022-02-23T08:00:00+0000",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the release job was last modified, displayed in ISO 8601 format",
            "example": "2022-02-23T08:00:00+0000",
            "nullable": true,
            "readOnly": true
          },
          "source": {
            "type": "object",
            "properties": {
              "point": {
                "type": "object",
                "description": "Details about the source point",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The UUID of the source point that will be released",
                    "readOnly": true
                  },
                  "object_type": {
                    "type": "integer",
                    "description": "The BACnet object type of the source point",
                    "readOnly": true
                  },
                  "instance_id": {
                    "type": "integer",
                    "description": "The BACnet instance ID of the source point",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the source point",
                    "readOnly": true
                  }
                }
              },
              "controller": {
                "type": "object",
                "description": "Details about the source controller",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The UUID of the source controller",
                    "readOnly": true
                  },
                  "device_id": {
                    "type": "integer",
                    "description": "The BACnet device ID of the source controller",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the source controller",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the source controller",
                    "readOnly": true
                  }
                }
              },
              "gateway": {
                "type": "object",
                "description": "Details about the source gateway device ",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The UUID of the source gateway",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the source gateway",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the source gateway",
                    "readOnly": true
                  },
                  "serial": {
                    "type": "string",
                    "description": "The serial number of the source gateway",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "@site": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of the source point's assigned site, if applicable",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "error"
            ],
            "description": "The current status of the release job",
            "readOnly": true
          },
          "release_timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-23T08:00:00+0000",
            "description": "Date and time the release job will be executed, displayed in ISO 8601 format"
          },
          "priority": {
            "example": 8,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16
            ],
            "description": "The BACnet priority the source point will be relinquished from",
            "type": "integer"
          },
          "owner": {
            "type": "object",
            "description": "Details about the user who created the request",
            "properties": {
              "id": {
                "type": "string",
                "description": "The UUID of the user who created the request"
              },
              "name": {
                "description": "The name of the user who created the request",
                "type": "object",
                "properties": {
                  "given": {
                    "type": "string",
                    "description": "The user's given (first) name"
                  },
                  "family": {
                    "type": "string",
                    "description": "The user's family (last) name"
                  },
                  "full": {
                    "type": "string",
                    "description": "The user's full name"
                  }
                }
              },
              "email": {
                "type": "string",
                "description": "The email address of the user who created the request"
              },
              "title": {
                "type": "string",
                "description": "The job title of the user who created the request"
              }
            }
          },
          "email_updates": {
            "type": "boolean",
            "default": true,
            "description": "Indicates if email alerts are enabled. If `true`, alerts will be emailed to the owner when the job is accepted, completed, or has failed."
          },
          "note": {
            "type": "string",
            "maxLength": 300,
            "example": "Requested by Jennifer at OR control desk",
            "description": "A brief note or summary of the request"
          },
          "overdue": {
            "type": "boolean",
            "description": "Indicates if the release job is overdue. Overdue means the release timestamp has been reached and the job is still pending.",
            "readOnly": true
          }
        }
      },
      "Report": {
        "title": "Report",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Report"
        ]
      },
      "Report-Group": {
        "title": "Report Group",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Report Group"
        ]
      },
      "Report-Schedule": {
        "title": "Report Schedule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Report Schedule"
        ]
      },
      "Room": {
        "description": "",
        "type": "object",
        "title": "Room",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "@site": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "@floor": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "occupancy": {
                "type": "string"
              },
              "area": {
                "type": "number"
              },
              "ceiling_height": {
                "type": "number"
              },
              "volume": {
                "type": "integer"
              }
            }
          }
        },
        "x-tags": [
          "Room"
        ]
      },
      "Routine": {
        "title": "Routine",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Routine"
        ]
      },
      "Setpoint-Reset": {
        "title": "Setpoint Reset",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Setpoint Reset"
        ],
        "description": ""
      },
      "Schedule": {
        "title": "Schedule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Schedule"
        ]
      },
      "Site": {
        "description": "",
        "type": "object",
        "title": "Site",
        "x-tags": [
          "Site"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The site object UUID",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the site object was created",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the site object was last modified",
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "A unique site code or abbreviation",
            "maxLength": 32
          },
          "name": {
            "type": "string",
            "description": "The name of the site object",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "maxLength": 300
          },
          "@address": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "classification": {
            "type": "object",
            "properties": {
              "category": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "type": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "sub_type": {
                "type": "object",
                "nullable": true,
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "occupancy": {
            "type": "object",
            "properties": {
              "default": {
                "type": "string",
                "enum": [
                  "A-1",
                  "A-2",
                  "A-3",
                  "A-4",
                  "A-5",
                  "B",
                  "E",
                  "F-1",
                  "F-2",
                  "H-1",
                  "H-2",
                  "H-3",
                  "H-4",
                  "H-5",
                  "I-1",
                  "I-2",
                  "I-3",
                  "I-4",
                  "M",
                  "R-1",
                  "R-2",
                  "R-3",
                  "R-3.1",
                  "R-4",
                  "S-1",
                  "S-2",
                  "U"
                ]
              },
              "allowed": {
                "type": "array",
                "description": "If set, room objects must be one of the occupancies in the given array",
                "items": {
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 27
                },
                "enum": [
                  "A-1",
                  "A-2",
                  "A-3",
                  "A-4",
                  "A-5",
                  "B",
                  "E",
                  "F-1",
                  "F-2",
                  "H-1",
                  "H-2",
                  "H-3",
                  "H-4",
                  "H-5",
                  "I-1",
                  "I-2",
                  "I-3",
                  "I-4",
                  "M",
                  "R-1",
                  "R-2",
                  "R-3",
                  "R-3.1",
                  "R-4",
                  "S-1",
                  "S-2",
                  "U"
                ]
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "year_built": {
                "type": "string"
              },
              "floor_count": {
                "type": "integer",
                "readOnly": true
              },
              "room_count": {
                "type": "integer",
                "readOnly": true
              },
              "gross_floor_area": {
                "type": "integer"
              },
              "net_room_area": {
                "type": "integer",
                "readOnly": true
              }
            }
          }
        }
      },
      "Subscription": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "Subscription",
        "x-tags": [
          "Subscription"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "sub_K5p1RfYtyRnfMG"
          },
          "created": {
            "type": "string",
            "example": "2021-08-23T13:40:18+0000"
          },
          "start_date": {
            "type": "string",
            "minLength": 1,
            "format": "date-time",
            "example": "2021-08-23T13:40:18+0000",
            "readOnly": true
          },
          "status": {
            "type": "string"
          },
          "billing": {
            "type": "object",
            "properties": {
              "cycle_anchor": {
                "type": "string",
                "minLength": 1
              },
              "collection_method": {
                "type": "string",
                "minLength": 1
              },
              "paused": {
                "type": "boolean"
              },
              "pause_collection": {
                "type": "object",
                "nullable": true
              },
              "current_period": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-08-23T13:40:17+0000",
                    "readOnly": true
                  }
                }
              },
              "default_source": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "days_until_due": {
            "type": "integer",
            "nullable": true
          },
          "latest_invoice": {
            "type": "string",
            "minLength": 1
          },
          "items": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "index": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "data": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/Subscription-Item"
                }
              }
            }
          }
        }
      },
      "Subscription-Item": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "Subscription Item",
        "x-tags": [
          "Subscription"
        ],
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "created": {
            "type": "string",
            "minLength": 1
          },
          "product": {
            "type": "string",
            "minLength": 1
          },
          "plan": {
            "type": "string",
            "minLength": 1
          },
          "price": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1
              },
              "scheme": {
                "type": "string",
                "minLength": 1
              },
              "unit_amount": {
                "type": "number"
              },
              "frequency": {
                "type": "string",
                "minLength": 1
              },
              "interval": {
                "type": "number"
              }
            }
          },
          "usage_type": {
            "type": "string",
            "minLength": 1
          },
          "quantity": {
            "type": "number"
          },
          "name": {}
        }
      },
      "Tenant-Account": {
        "description": "",
        "type": "object",
        "title": "Tenant Account",
        "x-examples": {
          "Example": {
            "id": "d6797ebf-5b00-4a59-b3e5-19711b4c55bb",
            "name": "Figgis Agency",
            "flags": {
              "active": true,
              "has_subscription": true,
              "has_billing_account": true,
              "locked": false,
              "confirmed": true,
              "deleted": false
            },
            "billing_id": "cus_GZBdOM86hQZldD",
            "locale": "en-us",
            "primary_contact": {
              "id": "1b17e73b-4cf7-4b47-a0f8-46f878ef7bf1",
              "name": {
                "given": "Cyril",
                "family": "Figgis",
                "full": "Cyril Figgis"
              },
              "email": "cyril@figgisagency.com",
              "phone": {
                "primary": {
                  "type": null,
                  "number": null
                }
              }
            },
            "subscription": {
              "tier": 3,
              "sku": "plan_GvzroFXIrnFYdH",
              "active": true
            },
            "trial": {
              "status": "Never Started",
              "used": false,
              "active": false,
              "expired": false,
              "expires": 0
            },
            "addresses": {
              "mailing": "f3643601-d122-47c5-893c-1f108c07d840",
              "billing": null
            },
            "milestones": {
              "account_created": {
                "status": true,
                "timestamp": 1517451002
              },
              "account_deleted": {
                "status": false,
                "timestamp": 0
              },
              "account_confirmation": {
                "status": true,
                "timestamp": 1580183430
              },
              "onboarded": {
                "status": true,
                "timestamp": 1580183430
              },
              "accepted_terms": {
                "status": false,
                "timestamp": 0
              },
              "accepted_billing_terms": {
                "status": false,
                "timestamp": 0
              },
              "accepted_subscription_terms": {
                "status": false,
                "timestamp": 0
              }
            }
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of the tenant account"
          },
          "name": {
            "type": "string"
          },
          "flags": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "has_billing_account": {
                "type": "boolean"
              },
              "locked": {
                "type": "boolean"
              },
              "confirmed": {
                "type": "boolean"
              },
              "deleted": {
                "type": "boolean"
              }
            }
          },
          "tier": {
            "default": 1,
            "type": "integer",
            "readOnly": true
          },
          "billing_id": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string"
          },
          "primary_contact": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "object",
                "properties": {
                  "given": {
                    "type": "string"
                  },
                  "family": {
                    "type": "string"
                  },
                  "full": {
                    "type": "string"
                  }
                }
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "object",
                "properties": {
                  "primary": {
                    "type": "object",
                    "properties": {
                      "type": {},
                      "number": {}
                    }
                  }
                }
              }
            }
          },
          "addresses": {
            "type": "object",
            "properties": {
              "mailing": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "billing": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              }
            }
          },
          "milestones": {
            "type": "object",
            "properties": {
              "account_created": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "account_deleted": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              },
              "account_confirmation": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              },
              "onboarded": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              },
              "accepted_terms": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              },
              "accepted_billing_terms": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              },
              "accepted_subscription_terms": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "x-tags": [
          "Account"
        ]
      },
      "Tenant-Preferences": {
        "description": "",
        "type": "object",
        "properties": {
          "display_name_format": {
            "type": "string",
            "minLength": 1
          },
          "shell": {
            "type": "object",
            "properties": {
              "theme": {
                "type": "string",
                "minLength": 1
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "default_limit": {
                    "type": "number",
                    "default": 10
                  }
                }
              },
              "disabled_applications": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "title": "Tenant Account Preferences",
        "x-tags": [
          "Preferences"
        ]
      },
      "Tenant-Quota": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "Tenant Account Quota",
        "x-internal": false,
        "x-tags": [
          "Quota"
        ],
        "properties": {
          "usage": {
            "type": "object",
            "properties": {
              "collector": {
                "type": "number"
              },
              "controller": {
                "type": "number"
              },
              "equipment": {
                "type": "number"
              },
              "fdd_rule": {
                "type": "number"
              },
              "gateway": {
                "type": "number"
              },
              "kiosk": {
                "type": "number"
              },
              "meter": {
                "type": "number"
              },
              "point": {
                "type": "number"
              },
              "record_user": {
                "type": "number"
              },
              "reset": {
                "type": "number"
              },
              "routine": {
                "type": "number"
              },
              "seat": {
                "type": "number"
              },
              "site": {
                "type": "number"
              },
              "trigger": {
                "type": "number"
              },
              "user": {
                "type": "number"
              }
            }
          },
          "tenant": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1
              },
              "billing_id": {
                "type": "string",
                "minLength": 1
              },
              "tier": {
                "type": "number"
              },
              "account_type": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          "quotas": {
            "type": "object",
            "properties": {
              "collector": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "controller": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "equipment": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "fdd_rule": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "gateway": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "kiosk": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "meter": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "point": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "record_user": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "report_schedule": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "reset": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "routine": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "seat": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "site": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "trigger": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              },
              "user": {
                "$ref": "#/components/schemas/Tenant-Quota-Item"
              }
            }
          },
          "composition": {
            "type": "object",
            "properties": {
              "base": {
                "type": "object",
                "properties": {
                  "included_quotas": {
                    "type": "object",
                    "properties": {
                      "controller": {
                        "type": "number"
                      },
                      "gateway": {
                        "type": "number"
                      },
                      "meter": {
                        "type": "number"
                      },
                      "point": {
                        "type": "number"
                      },
                      "seat": {
                        "type": "number"
                      },
                      "site": {
                        "type": "number"
                      },
                      "record_user": {}
                    }
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "purchased_items": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "si_HZ3bajOlRzV6Yz"
                    },
                    "product": {
                      "type": "string",
                      "example": "prod_HZ369tGn3VJSVa"
                    },
                    "plan": {
                      "type": "string",
                      "example": "price_1Gzv76J5K0z3IHPXeoVpLSY0"
                    },
                    "quantity": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Tenant-Deletion-PIN": {
        "description": "",
        "type": "object",
        "properties": {
          "pin": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "description": "An eight-character deletion PIN"
          }
        },
        "x-examples": {
          "Example": {
            "pin": "71VIFU22"
          }
        },
        "title": "Tenant Deletion PIN Request Body",
        "x-tags": [
          "Operations"
        ]
      },
      "Tenant-Quota-Item": {
        "description": "",
        "type": "object",
        "title": "Quota Item Object",
        "properties": {
          "usage": {
            "type": "number",
            "description": "The number of objects of this type"
          },
          "quota": {
            "type": "object",
            "properties": {
              "included": {
                "type": "number",
                "description": "The quota quantity included with the base account"
              },
              "purchased": {
                "type": "number",
                "description": "The quota quantity that has been added via purchased SKUs"
              },
              "total": {
                "type": "number",
                "description": "A simple formula of `included` + `purchased`"
              }
            }
          },
          "remaining": {
            "type": "number",
            "description": "A simple formula of `total` - `usage`"
          },
          "status": {
            "type": "object",
            "properties": {
              "can_add_more": {
                "type": "boolean",
                "description": "Indicates that the quota has not been met and additional objects can be added"
              },
              "is_exceeded": {
                "type": "boolean",
                "description": "Indicates that the quota limit has been exceeded"
              },
              "is_met": {
                "type": "boolean",
                "description": "Indicates the quota limit has been reached"
              }
            }
          }
        },
        "x-tags": [
          "Quota"
        ]
      },
      "Time-Zone": {
        "description": "",
        "type": "object",
        "title": "Time Zone",
        "properties": {
          "id": {
            "type": "string"
          },
          "effective_coordinates": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "wall_time": {
                "type": "string"
              },
              "utc_offset": {
                "type": "number"
              },
              "is_dst": {
                "type": "boolean"
              },
              "tag": {
                "type": "string"
              }
            }
          },
          "names": {
            "type": "object",
            "properties": {
              "ISO6391_language_code": {
                "type": "string"
              },
              "generic": {
                "type": "string"
              },
              "standard": {
                "type": "string"
              },
              "daylight": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Utilities"
        ]
      },
      "Trend-Plot": {
        "title": "Trend Plot",
        "type": "object",
        "description": "",
        "examples": [],
        "x-tags": [
          "Trend Plot"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The plot object UUID",
            "format": "uuid",
            "example": "8e52e134-4b19-481a-891f-3974f494d67d",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00+0000",
            "description": "Date/time the plot object was created",
            "readOnly": true
          },
          "last_modified": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "example": "2022-01-01T00:00:00+0000",
            "description": "Date/time the plot object was last modified *(`null` if never modified)*",
            "readOnly": true
          },
          "@owner": {
            "type": "string",
            "format": "uuid",
            "example": "9d6b9387-1721-4e62-a6c4-8457d2d16ded",
            "description": "The user UUID responsible for the plot object"
          },
          "public": {
            "type": "boolean",
            "default": false,
            "description": "If `true`, the plot obejct is visible to all users. If `false`, the plot object is visible only to the owner."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 96,
            "description": "The name of the plot object"
          },
          "description": {
            "type": "string",
            "description": "An optional plot object description",
            "minLength": 0,
            "maxLength": 120
          },
          "config": {
            "type": "object",
            "description": "The proprietary plot object configuration data **(internal use only)**",
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "name",
          "config"
        ]
      },
      "Trigger": {
        "title": "Trigger",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-tags": [
          "Trigger"
        ],
        "description": ""
      },
      "User": {
        "description": "",
        "type": "object",
        "title": "User",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The user's UUID"
          },
          "license": {
            "type": "string",
            "enum": [
              "record_user",
              "user",
              "seat"
            ],
            "description": "The assigned license class"
          },
          "flags": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "blocked": {
                "type": "boolean"
              },
              "licensed": {
                "type": "boolean"
              },
              "archived": {
                "type": "boolean"
              },
              "deleted": {
                "type": "boolean"
              }
            }
          },
          "picture": {
            "type": "string",
            "minLength": 1,
            "description": "The URL for the user's avatar photo"
          },
          "auth": {},
          "name": {
            "type": "object",
            "properties": {
              "given": {
                "type": "string",
                "maxLength": 90
              },
              "preferred": {
                "type": "string",
                "maxLength": 90
              },
              "middle": {
                "type": "string",
                "maxLength": 90
              },
              "family": {
                "type": "string",
                "maxLength": 90
              },
              "prefix": {},
              "suffix": {},
              "full": {
                "type": "string",
                "minLength": 1
              },
              "display": {
                "type": "string",
                "minLength": 1
              },
              "short": {
                "type": "string"
              }
            },
            "required": [
              "full",
              "display",
              "short"
            ]
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 120,
            "description": "The user's email address"
          },
          "site": {
            "type": "string",
            "minLength": 1
          },
          "department": {
            "type": "string",
            "minLength": 1
          },
          "manager": {
            "type": "string",
            "format": "uuid",
            "default": "null"
          },
          "room": {},
          "mail_stop": {},
          "title": {
            "type": "string",
            "minLength": 1
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "context": {
                  "type": "string",
                  "enum": [
                    "Counterbalance ID",
                    "Microsoft 365"
                  ]
                }
              }
            }
          },
          "milestones": {
            "type": "object",
            "required": [
              "accepted_terms",
              "completed_onboarding",
              "account_created",
              "account_blocked",
              "account_archived",
              "license_assigned"
            ],
            "properties": {
              "accepted_terms": {
                "type": "object",
                "required": [
                  "status",
                  "timestamp"
                ],
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "number"
                  }
                }
              },
              "completed_onboarding": {
                "type": "object",
                "required": [
                  "status",
                  "timestamp"
                ],
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "number"
                  }
                }
              },
              "account_created": {
                "type": "object",
                "required": [
                  "status",
                  "timestamp"
                ],
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "number"
                  }
                }
              },
              "account_blocked": {
                "type": "object",
                "required": [
                  "status",
                  "timestamp"
                ],
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "number"
                  }
                }
              },
              "account_archived": {
                "type": "object",
                "required": [
                  "status",
                  "timestamp"
                ],
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "number"
                  }
                }
              },
              "license_assigned": {
                "type": "object",
                "required": [
                  "status",
                  "timestamp"
                ],
                "properties": {
                  "status": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "required": [
          "site",
          "department",
          "title",
          "links",
          "milestones"
        ],
        "x-examples": {
          "Licensed User Example": {
            "id": "ce48daca-f044-48e6-ad20-0c6e53db12da",
            "license": "seat",
            "flags": {
              "active": true,
              "blocked": false,
              "licensed": true,
              "archived": false,
              "deleted": false
            },
            "picture": "https://api.counterbalance.io/v1/user/ce48daca-f044-48e6-ad20-0c6e53db12da/photo",
            "auth": {
              "email_verified": true,
              "last_login": 1604815512,
              "last_password_reset": 0,
              "last_ip": "67.168.168.228",
              "total_logins": 78,
              "is_blocked": false
            },
            "name": {
              "given": "Alex",
              "preferred": "",
              "middle": "",
              "family": "Wilbur",
              "prefix": null,
              "suffix": null,
              "full": "Alex Wilbur",
              "display": "Alex Wilbur",
              "short": ""
            },
            "email": "alexw@peterbalance.com",
            "site": null,
            "department": "1f3da4db-3364-4f58-b8bd-4fee1398a6e1",
            "manager": null,
            "room": null,
            "mail_stop": null,
            "title": "",
            "links": [
              {
                "context": "Counterbalance ID",
                "id": "auth0|5e93ab33f346950c46b694d5"
              },
              {
                "context": "Microsoft 365",
                "id": "201e0cc6-9b88-4908-a69e-60e88b4d9ff7"
              }
            ],
            "milestones": {
              "accepted_terms": {
                "status": true,
                "timestamp": 1586735922
              },
              "completed_onboarding": {
                "status": false,
                "timestamp": 0
              },
              "account_created": {
                "status": true,
                "timestamp": 1586735922
              },
              "account_blocked": {
                "status": false,
                "timestamp": 0
              },
              "account_archived": {
                "status": false,
                "timestamp": 0
              },
              "license_assigned": {
                "status": true,
                "timestamp": 1586735923
              }
            }
          },
          "Unlicensed User Example": {
            "id": "73f180ba-caa3-4e49-a68c-f643b5e7bf79",
            "license": "record_user",
            "flags": {
              "active": true,
              "blocked": false,
              "licensed": false,
              "archived": false,
              "deleted": false
            },
            "picture": "https://api.counterbalance.io/v1/user/73f180ba-caa3-4e49-a68c-f643b5e7bf79/photo",
            "auth": null,
            "name": {
              "given": "Megan",
              "preferred": "",
              "middle": "",
              "family": "Bowen",
              "prefix": null,
              "suffix": null,
              "full": "Megan Bowen",
              "display": "Megan Bowen",
              "short": ""
            },
            "email": "meganb@peterbalance.com",
            "site": null,
            "department": null,
            "manager": null,
            "room": null,
            "mail_stop": null,
            "title": "",
            "links": [],
            "milestones": {
              "accepted_terms": {
                "status": false,
                "timestamp": 0
              },
              "completed_onboarding": {
                "status": false,
                "timestamp": 0
              },
              "account_created": {
                "status": true,
                "timestamp": 1604882067
              },
              "account_blocked": {
                "status": false,
                "timestamp": 0
              },
              "account_archived": {
                "status": false,
                "timestamp": 0
              },
              "license_assigned": {
                "status": false,
                "timestamp": 0
              }
            }
          }
        },
        "x-tags": [
          "Object Models"
        ]
      },
      "User-Assigned-Roles": {
        "description": "",
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "The number of roles assigned"
          },
          "data": {
            "$ref": "#/components/schemas/User-Role-Item"
          }
        },
        "required": [
          "count",
          "data"
        ],
        "title": "User Assigned Roles",
        "x-examples": {
          "Example": {
            "count": 2,
            "data": [
              {
                "id": "rol_BjYA2HwGRnfaFhuV",
                "name": "Base Permissions",
                "description": "System-assigned role that provides the minimum permissions required to access the console",
                "tags": [
                  "system"
                ],
                "system_only": true
              },
              {
                "id": "rol_t0duC3p8gZbzhZ5a",
                "name": "Energy Manager",
                "description": "Permissions suitable for a user in an energy management/environmental responsibility role",
                "tags": [
                  "functional"
                ],
                "system_only": false
              }
            ]
          }
        }
      },
      "User-Group": {
        "title": "User Group",
        "type": "object",
        "description": "",
        "x-tags": [
          "User Group"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The group object UUID",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "description": "The timestamp the group object was created",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "description": "The timestamp the group object was last modified",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 120,
            "description": "The name of the group object"
          },
          "description": {
            "type": "string",
            "maxLength": 300,
            "description": "A brief description of the group object"
          },
          "member_count": {
            "type": "integer",
            "description": "The number of member users in the group",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "User-Group-Member": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "properties": {
          "@user": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "permission": {
            "type": "string",
            "enum": [
              "read",
              "edit"
            ]
          }
        },
        "title": "User Group Member",
        "x-tags": [
          "User Group"
        ]
      },
      "User-Permissions": {
        "title": "User Permissions",
        "type": "array",
        "description": "An array of user permission strings",
        "x-examples": {
          "Example": [
            "billing:account:view",
            "console:view",
            "hardware:device:read",
            "sites:*",
            "tenant:*",
            "user:account:*"
          ]
        },
        "items": {
          "type": "string"
        },
        "x-tags": [
          "Object Models"
        ]
      },
      "User-Preferences": {
        "description": "",
        "type": "object",
        "properties": {
          "shell": {
            "type": "object",
            "required": [
              "theme",
              "nav",
              "pagination",
              "disabled_applications"
            ],
            "properties": {
              "theme": {
                "type": "string",
                "minLength": 1
              },
              "nav": {
                "type": "object",
                "required": [
                  "collapsed"
                ],
                "properties": {
                  "collapsed": {
                    "type": "boolean"
                  },
                  "disabled_applications": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "enabled",
                  "default_limit"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "default_limit": {
                    "type": "number"
                  }
                }
              },
              "disabled_applications": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        },
        "required": [
          "shell"
        ],
        "title": "User Preferences",
        "x-examples": {
          "Example": {
            "shell": {
              "theme": "string",
              "nav": {
                "collapsed": true,
                "disabled_applications": [
                  "string"
                ]
              },
              "pagination": {
                "enabled": true,
                "default_limit": 0
              },
              "disabled_applications": [
                {}
              ]
            }
          }
        },
        "x-tags": [
          "Object Models"
        ]
      },
      "User-Role-Item": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "system_only": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "tags",
          "system_only"
        ],
        "title": "User Role Item",
        "x-examples": {
          "Example": {
            "id": "rol_BjYA2HwGRnfaFhuV",
            "name": "Base Permissions",
            "description": "System-assigned role that provides the minimum permissions required to access the console",
            "tags": [
              "system"
            ],
            "system_only": true
          }
        }
      },
      "Weather-Alerts": {
        "description": "",
        "type": "object",
        "title": "Weather Alerts",
        "x-examples": {
          "Example": {
            "count": 1,
            "effective_coordinates": {
              "latitude": 47.8877148,
              "longitude": -124.6237354
            },
            "data": [
              {
                "id": 2203972,
                "category": "FLOOD",
                "description": "High Surf Advisory",
                "source": "U.S. National Weather Service",
                "areas": [
                  {
                    "name": "North Coast",
                    "summary": "High Surf Advisory in effect from 10:00 PM PST until Wednesday, 10:00 PM PST.  Source: U.S. National Weather Service",
                    "status": "New",
                    "span": {
                      "start": 1606284000,
                      "end": 1606370400
                    },
                    "details": "...HIGH SURF ADVISORY IN EFFECT FROM 10 PM THIS EVENING TO 10 PM\nPST WEDNESDAY...\n\n* WHAT...Large breaking waves of 18 to 21 feet expected in the\n  surf zone.\n\n* WHERE...North Coast and Central Coast.\n\n* WHEN...From 10 PM this evening to 10 PM PST Wednesday.\n\n* IMPACTS...Dangerous conditions along the coast and in the surf\n  zone. Localized beach erosion may also occur due to large waves.\n\nPRECAUTIONARY/PREPAREDNESS ACTIONS...\n\nLarge waves may break and run up beaches farther than usual. Keep\nyour distance from the coastline and never turn your back on the\nocean.\n\nInexperienced swimmers should remain out of the water due to\ndangerous surf conditions.\n\n&&"
                  }
                ]
              }
            ]
          }
        },
        "x-tags": [
          "Alerts"
        ],
        "properties": {
          "count": {
            "type": "number",
            "readOnly": true
          },
          "effective_coordinates": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "readOnly": true,
            "description": "An array of weather alert objects",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "A unique numerical identifier for a weather alert.",
                  "readOnly": true
                },
                "category": {
                  "type": "string",
                  "description": "Category of the alert.",
                  "readOnly": true
                },
                "description": {
                  "type": "string",
                  "description": "Description of the alert.",
                  "readOnly": true
                },
                "source": {
                  "type": "string",
                  "description": "The provider of the alert information. By default the source is returned in English (en-US). The alerts are from official Government Meteorological Agencies and leading global weather alert providers.",
                  "readOnly": true
                },
                "areas": {
                  "type": "array",
                  "uniqueItems": true,
                  "readOnly": true,
                  "description": "Information about the alert specific to the affected area(s).",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "\t\nThe name of an area which is affected by the alert. The location that was requested falls under the alert area.",
                        "readOnly": true
                      },
                      "summary": {
                        "type": "string",
                        "description": "Text summarizing the alert in the returned area.",
                        "readOnly": true
                      },
                      "status": {
                        "type": "string",
                        "description": "The latest status of the alert in the current area.",
                        "readOnly": true
                      },
                      "span": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "number",
                            "description": "The start date and time of the alert in ISO 8601 format, for example, 2019-10-27T19:39:57-08:00. If the alert crosses multiple time zones the returned time in the response is the local time to the requested coordinate location.",
                            "readOnly": true
                          },
                          "end": {
                            "type": "number",
                            "description": "The end date and time of the alert in ISO 8601 format, for example, 2019-10-27T19:39:57-08:00. If the alert crosses multiple time zones the returned time in the response is the local time to the requested coordinate location.",
                            "readOnly": true
                          }
                        }
                      },
                      "details": {
                        "type": "string",
                        "description": "Full details associated with the alert. Returned if `details`=True. This field is always returned in the language(s) of choice by the issuing provider and Azure Maps only returns what is created by the provider. Please note, some countries/regions may offer their native language and English. Language parameter won’t apply to this field.",
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Weather-Conditions": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "effective_coordinates": {
              "latitude": "44.98588",
              "longitude": "-93.28069"
            },
            "units": "imperial",
            "timestamp": 1606150620,
            "phrase": "Mostly sunny",
            "icon": 2,
            "is_raining": false,
            "is_daytime": true,
            "temperature": {
              "value": 30,
              "unit": "F"
            },
            "apparent_temperature": {
              "value": 30,
              "unit": "F"
            },
            "wetbulb_temperature": {
              "value": 28,
              "unit": "F"
            },
            "windchill_temperature": {
              "value": 27,
              "unit": "F"
            },
            "relative_humidity": 71,
            "dewpoint": {
              "value": 22,
              "unit": "F"
            },
            "wind": {
              "direction": {
                "degrees": 113,
                "localized": "ESE"
              },
              "speed": {
                "value": 3,
                "unit": "mi/h"
              },
              "gust": {
                "value": 6,
                "unit": "mi/h"
              }
            },
            "visibility": {
              "value": 10,
              "unit": "mi",
              "obstructions": ""
            },
            "cloud_cover": 14,
            "ceiling": {
              "value": 40000,
              "unit": "ft"
            },
            "pressure": {
              "value": 30.37,
              "unit": "inHg",
              "direction": "Steady"
            }
          }
        },
        "title": "Weather Conditions",
        "x-tags": [
          "Current Conditions"
        ],
        "properties": {
          "effective_coordinates": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              }
            }
          },
          "units": {
            "type": "string",
            "description": "Indicates whether `metric` or `imperial` units are used"
          },
          "timestamp": {
            "type": "string",
            "description": "Date and time of the current observation displayed in ISO 8601 format. *For example, 2022-02-23T08:00:00+0000*"
          },
          "phrase": {
            "type": "string",
            "description": "Phrase description of the current weather condition. Displayed in specified language."
          },
          "icon": {
            "type": "number",
            "description": "Numeric value representing an image"
          },
          "is_raining": {
            "type": "boolean",
            "description": "Indicates the presence or absence of precipitation. `True` indicates the presence of precipitation, `false` indicates the absence of precipitation."
          },
          "is_daytime": {
            "type": "boolean",
            "description": "Indicates the time of the day. `True` indicates 'day',', `false` indicates 'night.",
            "readOnly": true
          },
          "temperature": {
            "type": "object",
            "description": "Temperature being returned.",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          "apparent_temperature": {
            "type": "object",
            "description": "Perceived outdoor temperature caused by the combination of air temperature, relative humidity, and wind speed in specified unit.",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              }
            }
          },
          "wetbulb_temperature": {
            "type": "object",
            "description": "The temperature to which air may be cooled by evaporating water into it at constant pressure until it reaches saturation.",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              }
            }
          },
          "windchill_temperature": {
            "type": "object",
            "description": "Perceived air temperature on exposed skin due to wind.",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              }
            }
          },
          "relative_humidity": {
            "type": "number",
            "description": "Relative humidity is the amount of water vapor present in air expressed as a percentage of the amount needed for saturation at the same temperature."
          },
          "dewpoint": {
            "type": "object",
            "description": "The dewpoint temperature in specified unit. The dewpoint temperature is the temperature that the air must be cooled to in order to reach saturation.",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              }
            }
          },
          "wind": {
            "type": "object",
            "description": "Wind details being returned including speed and direction.",
            "properties": {
              "direction": {
                "type": "object",
                "description": "Wind direction",
                "properties": {
                  "degrees": {
                    "type": "number",
                    "description": "Wind direction in Azimuth degrees, starting at true North and continuing in clockwise direction. North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270 degrees. Possible values 0-359."
                  },
                  "localized": {
                    "type": "string",
                    "description": "Direction abbreviation in the specified language."
                  }
                }
              },
              "speed": {
                "type": "object",
                "description": "Speed of the wind in specified unit.",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string"
                  }
                }
              },
              "gust": {
                "type": "object",
                "description": "Wind gust. Wind gust is a sudden, brief increase in speed of the wind.",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "visibility": {
            "type": "object",
            "description": "Visibility in specified unit. A measure of the distance at which an object or light can be clearly discerned.",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              },
              "obstructions": {
                "type": "string"
              }
            }
          },
          "cloud_cover": {
            "type": "number",
            "description": "Percent representing cloud cover."
          },
          "ceiling": {
            "type": "object",
            "description": "Cloud ceiling in specified unit. The ceiling is a measurement of the height of the base of the lowest clouds.",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              }
            }
          },
          "pressure": {
            "type": "object",
            "description": "Atmospheric pressure in specified unit.",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              },
              "direction": {
                "type": "string",
                "description": "Description of the pressure tendency in specified language. One of F=Falling, S=Steady, R=Rising.",
                "enum": [
                  "Falling",
                  "Rising",
                  "Steady"
                ],
                "readOnly": true
              }
            }
          }
        }
      },
      "Weather-Forecast": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "effective_coordinates": {
              "latitude": "44.98588",
              "longitude": "-93.28069"
            },
            "units": "imperial",
            "summary": "Snow between late tonight and tomorrow morning will accumulate 1-2 inches before changing to rain",
            "forecasts": [
              {
                "date": 1606136400,
                "sources": [
                  "AccuWeather"
                ],
                "air_quality": {
                  "airquality": {
                    "value": 75,
                    "rating": "Moderate",
                    "rating_value": 2
                  },
                  "grass": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "mold": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "ragweed": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "tree": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "uvindex": {
                    "value": 2,
                    "rating": "Low",
                    "rating_value": 1
                  }
                },
                "hours_of_sun": 7,
                "temperature": {
                  "minimum": {
                    "value": 30,
                    "unit": "F"
                  },
                  "maximum": {
                    "value": 38,
                    "unit": "F"
                  }
                },
                "day": {
                  "icon": 3,
                  "phrases": {
                    "long": "Times of clouds and sun",
                    "short": "Times of clouds and sun"
                  },
                  "is_raining": false,
                  "probabilities": {
                    "precipitation": 4,
                    "thunderstorm": 0,
                    "rain": 3,
                    "snow": 1,
                    "ice": 0
                  },
                  "wind": {
                    "direction": {
                      "degrees": 122,
                      "localized": "ESE"
                    },
                    "speed": {
                      "value": 4,
                      "unit": "mi/h"
                    },
                    "gust": {
                      "value": 10,
                      "unit": "mi/h",
                      "direction": "SE"
                    }
                  },
                  "cloud_cover": 29
                },
                "night": {
                  "icon": 22,
                  "phrases": {
                    "long": "Plenty of clouds with a coating to an inch of snow late",
                    "short": "Overcast with snow late"
                  },
                  "is_raining": true,
                  "probabilities": {
                    "precipitation": 75,
                    "thunderstorm": 0,
                    "rain": 10,
                    "snow": 75,
                    "ice": 3
                  },
                  "wind": {
                    "direction": {
                      "degrees": 139,
                      "localized": "SE"
                    },
                    "speed": {
                      "value": 9,
                      "unit": "mi/h"
                    },
                    "gust": {
                      "value": 13,
                      "unit": "mi/h",
                      "direction": "SE"
                    }
                  },
                  "cloud_cover": 97
                }
              }
            ]
          }
        },
        "title": "Weather Forecast",
        "x-tags": [
          "Forecast"
        ],
        "properties": {
          "effective_coordinates": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              }
            }
          },
          "units": {
            "type": "string"
          },
          "summary": {
            "type": "string",
            "description": "Summary for the main conditions for the requested time period. Notice that summary can cover only part of the time period.",
            "readOnly": true
          },
          "forecasts": {
            "type": "array",
            "description": "Forecast data for each requested day.",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "number",
                  "description": "Date and time of the current observation displayed in ISO 8601 format. *For example, 2022-02-23T08:00:00+0000*"
                },
                "sources": {
                  "type": "array",
                  "description": "Source(s) of the forecast data.",
                  "items": {
                    "type": "string"
                  }
                },
                "air_quality": {
                  "type": "object",
                  "properties": {
                    "airquality": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "rating": {
                          "type": "string"
                        },
                        "rating_value": {
                          "type": "number"
                        }
                      }
                    },
                    "grass": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "rating": {
                          "type": "string"
                        },
                        "rating_value": {
                          "type": "number"
                        }
                      }
                    },
                    "mold": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "rating": {
                          "type": "string"
                        },
                        "rating_value": {
                          "type": "number"
                        }
                      }
                    },
                    "ragweed": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "rating": {
                          "type": "string"
                        },
                        "rating_value": {
                          "type": "number"
                        }
                      }
                    },
                    "tree": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "rating": {
                          "type": "string"
                        },
                        "rating_value": {
                          "type": "number"
                        }
                      }
                    },
                    "uvindex": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "rating": {
                          "type": "string"
                        },
                        "rating_value": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "hours_of_sun": {
                  "type": "number",
                  "description": "Hours of sun."
                },
                "temperature": {
                  "type": "object",
                  "description": "Temperature values for the day.",
                  "properties": {
                    "minimum": {
                      "type": "object",
                      "description": "Minimum temperature for the time period.",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string"
                        }
                      }
                    },
                    "maximum": {
                      "type": "object",
                      "description": "Maximum temperature for the time period",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "day": {
                  "type": "object",
                  "description": "Day forecast detail",
                  "properties": {
                    "icon": {
                      "type": "number",
                      "description": "Numeric value representing an image"
                    },
                    "phrases": {
                      "type": "object",
                      "properties": {
                        "short": {
                          "type": "string",
                          "description": "Phrase description of the forecast in specified language. ~30 characters"
                        },
                        "long": {
                          "type": "string",
                          "description": "Phrase description of the forecast in specified language. ~100 characters",
                          "readOnly": true
                        }
                      }
                    },
                    "is_raining": {
                      "type": "boolean",
                      "description": "Indicates the presence or absence of precipitation. True indicates the presence of precipitation, false indicates the absence of precipitation.",
                      "readOnly": true
                    },
                    "probabilities": {
                      "type": "object",
                      "properties": {
                        "precipitation": {
                          "type": "number",
                          "description": "Percent representing the probability of precipitation.",
                          "readOnly": true
                        },
                        "thunderstorm": {
                          "type": "number",
                          "readOnly": true
                        },
                        "rain": {
                          "type": "number",
                          "description": "Percent representing the probability of rain. ",
                          "readOnly": true
                        },
                        "snow": {
                          "type": "number",
                          "description": "Percent representing the probability of snow.",
                          "readOnly": true
                        },
                        "ice": {
                          "type": "number",
                          "description": "Percent representing the probability of ice.",
                          "readOnly": true
                        }
                      },
                      "readOnly": true
                    },
                    "wind": {
                      "type": "object",
                      "description": "Wind details being returned including speed and direction.",
                      "properties": {
                        "direction": {
                          "type": "object",
                          "description": "Wind direction",
                          "additionalProperties": false,
                          "properties": {
                            "degrees": {
                              "type": "number",
                              "description": "Wind direction in Azimuth degrees, starting at true North and continuing in clockwise direction. North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270 degrees. Possible values 0-359.",
                              "readOnly": true
                            },
                            "localized": {
                              "type": "string",
                              "description": "Direction abbreviation in the specified language.",
                              "readOnly": true
                            }
                          },
                          "readOnly": true
                        },
                        "speed": {
                          "type": "object",
                          "description": "Speed of the wind in specified unit.",
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "number",
                              "readOnly": true
                            },
                            "unit": {
                              "type": "string"
                            }
                          },
                          "readOnly": true
                        },
                        "gust": {
                          "type": "object",
                          "description": "Wind gust. Wind gust is a sudden, brief increase in speed of the wind.",
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "number",
                              "readOnly": true
                            },
                            "unit": {
                              "type": "string"
                            },
                            "direction": {
                              "type": "string",
                              "description": "Direction abbreviation in the specified language.",
                              "readOnly": true
                            }
                          },
                          "readOnly": true
                        }
                      },
                      "readOnly": true
                    },
                    "cloud_cover": {
                      "type": "number",
                      "description": "Percent representing cloud cover.",
                      "readOnly": true
                    }
                  }
                },
                "night": {
                  "type": "object",
                  "description": "Night forecast detail",
                  "properties": {
                    "icon": {
                      "type": "number",
                      "description": "Numeric value representing an image"
                    },
                    "phrases": {
                      "type": "object",
                      "properties": {
                        "short": {
                          "type": "string",
                          "description": "Phrase description of the forecast in specified language. ~30 characters"
                        },
                        "long": {
                          "type": "string",
                          "description": "Phrase description of the forecast in specified language. ~100 characters",
                          "readOnly": true
                        }
                      }
                    },
                    "is_raining": {
                      "type": "boolean",
                      "description": "Indicates the presence or absence of precipitation. True indicates the presence of precipitation, false indicates the absence of precipitation.",
                      "readOnly": true
                    },
                    "probabilities": {
                      "type": "object",
                      "properties": {
                        "precipitation": {
                          "type": "number",
                          "description": "Percent representing the probability of precipitation.",
                          "readOnly": true
                        },
                        "thunderstorm": {
                          "type": "number",
                          "readOnly": true
                        },
                        "rain": {
                          "type": "number",
                          "description": "Percent representing the probability of rain. ",
                          "readOnly": true
                        },
                        "snow": {
                          "type": "number",
                          "description": "Percent representing the probability of snow.",
                          "readOnly": true
                        },
                        "ice": {
                          "type": "number",
                          "description": "Percent representing the probability of ice.",
                          "readOnly": true
                        }
                      },
                      "readOnly": true
                    },
                    "wind": {
                      "type": "object",
                      "description": "Wind details being returned including speed and direction.",
                      "properties": {
                        "direction": {
                          "type": "object",
                          "description": "Wind direction",
                          "additionalProperties": false,
                          "properties": {
                            "degrees": {
                              "type": "number",
                              "description": "Wind direction in Azimuth degrees, starting at true North and continuing in clockwise direction. North is 0 degrees, east is 90 degrees, south is 180 degrees, west is 270 degrees. Possible values 0-359.",
                              "readOnly": true
                            },
                            "localized": {
                              "type": "string",
                              "description": "Direction abbreviation in the specified language.",
                              "readOnly": true
                            }
                          },
                          "readOnly": true
                        },
                        "speed": {
                          "type": "object",
                          "description": "Speed of the wind in specified unit.",
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "number",
                              "readOnly": true
                            },
                            "unit": {
                              "type": "string"
                            }
                          },
                          "readOnly": true
                        },
                        "gust": {
                          "type": "object",
                          "description": "Wind gust. Wind gust is a sudden, brief increase in speed of the wind.",
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "number",
                              "readOnly": true
                            },
                            "unit": {
                              "type": "string"
                            },
                            "direction": {
                              "type": "string",
                              "description": "Direction abbreviation in the specified language.",
                              "readOnly": true
                            }
                          },
                          "readOnly": true
                        }
                      },
                      "readOnly": true
                    },
                    "cloud_cover": {
                      "type": "number",
                      "description": "Percent representing cloud cover.",
                      "readOnly": true
                    }
                  }
                }
              },
              "readOnly": true
            },
            "readOnly": true
          }
        }
      },
      "Weather-Indices": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "count": 43,
            "effective_coordinates": {
              "latitude": 37.79513,
              "longitude": -122.40299
            },
            "data": [
              {
                "id": 1,
                "name": "Running",
                "timestamp": "2021-09-04T07:00:00-07:00",
                "classification": "Very Good",
                "description": "Conditions are very good for running outdoors.",
                "value": 4,
                "percentage": 89
              }
            ]
          }
        },
        "title": "Weather Indices",
        "x-tags": [
          "Current Conditions"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of alerts returned",
            "readOnly": true
          },
          "effective_coordinates": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Numeric ID used to identify the specific index. ",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Name of the index, for example, \"Construction\", \"Outdoor Activity\", \"Flight Delays\".",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "description": "Date and time of the current observation displayed in ISO 8601 format. *For example, 2022-02-23T08:00:00+0000*",
                  "readOnly": true
                },
                "classification": {
                  "type": "string",
                  "description": "Textual description for `value` corresponding to the level that the index value falls under, for example \"Very Good\".",
                  "readOnly": true
                },
                "description": {
                  "type": "string",
                  "description": "A textual explanation that can be used for display purposes to summarize the index value and category. For example, when the index value for Flight Delays is very good, the description will be \"Conditions are excellent for flying!\".",
                  "readOnly": true
                },
                "value": {
                  "type": "integer",
                  "description": "Level that the index value falls under, represented by an integer. This value can be 1 through 5.",
                  "readOnly": true
                },
                "percentage": {
                  "type": "integer",
                  "readOnly": true
                }
              },
              "readOnly": true
            },
            "readOnly": true
          }
        }
      }
    },
    "parameters": {
      "authorization": {
        "name": "authorization",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "Content-Type": {
        "name": "Content-Type",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "default": "application/json"
        },
        "description": "application/json"
      },
      "addressId": {
        "name": "addressId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid address UUID"
      },
      "collectorId": {
        "name": "collectorId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid collector UUID"
      },
      "controllerId": {
        "name": "controllerId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid controller UUID"
      },
      "floorId": {
        "name": "floorId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid floor UUID"
      },
      "gatewayId": {
        "name": "gatewayId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "539fea81-d151-46e1-b1f6-36e3864ebeff"
        },
        "description": "A valid gateway UUID"
      },
      "groupId": {
        "name": "groupId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid report group UUID"
      },
      "invoiceId": {
        "name": "invoiceId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "A valid invoice ID"
      },
      "networkId": {
        "name": "networkId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid network UUID"
      },
      "plotId": {
        "name": "plotId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid plot UUID"
      },
      "pointId": {
        "name": "pointId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "168a3e32-996f-410a-a06c-c4cdc10fa362"
        },
        "description": "A valid point UUID"
      },
      "releaseId": {
        "name": "releaseId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid release job UUID"
      },
      "resetId": {
        "name": "resetId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid reset UUID"
      },
      "reportId": {
        "name": "reportId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid report UUID"
      },
      "roomId": {
        "name": "roomId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid room UUID"
      },
      "routineId": {
        "name": "routineId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid routine UUID"
      },
      "scheduleId": {
        "name": "scheduleId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid schedule UUID"
      },
      "scheduledReportId": {
        "name": "scheduledReportId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid scheduled report UUID"
      },
      "sourceId": {
        "name": "sourceId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "A valid payment source ID"
      },
      "siteId": {
        "name": "siteId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid site object UUID"
      },
      "subscriptionId": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "A valid subscription ID"
      },
      "triggerId": {
        "name": "triggerId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid trigger UUID"
      },
      "userId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid user account UUID"
      },
      "userGroupId": {
        "name": "userGroupId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid group UUID"
      },
      "@address": {
        "name": "@address",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Retrieve data at the coordinates of the specified address ID"
      },
      "@controller": {
        "name": "@controller",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated controller UUID"
      },
      "@floor": {
        "name": "@floor",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated floor UUID"
      },
      "@gateway": {
        "name": "@gateway",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated gateway UUID"
      },
      "@point": {
        "name": "@point",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated point UUID"
      },
      "@site": {
        "name": "@site",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated site ID"
      },
      "coordinates": {
        "name": "coordinates",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "47.620506,-122.349277"
        },
        "description": "Retrieve data at the specified lat/lon position"
      },
      "id": {
        "name": "id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "language": {
        "name": "language",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "en-us"
        },
        "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive."
      },
      "metric": {
        "schema": {
          "type": "boolean",
          "default": "false"
        },
        "in": "query",
        "name": "metric",
        "description": "Return the results with metric units instead of imperial units"
      }
    },
    "examples": {
      "Billing-Account": {
        "value": {
          "id": "cus_Gr2tvkQK7Yrujz",
          "created": "2020-03-05T14:36:12+0000",
          "currency": "usd",
          "description": "",
          "subscriptions": {
            "count": 2,
            "index": [
              "...",
              "..."
            ],
            "data": [
              {
                "...": null
              },
              {
                "...": null
              }
            ]
          },
          "sources": {
            "count": 2,
            "index": [
              "...",
              "..."
            ],
            "data": [
              {
                "...": null
              },
              {
                "...": null
              }
            ]
          },
          "default_source": "card_1GJKp7J5K0z3IHPXD1ciFRwt",
          "invoicing": {
            "prefix": "F2A29AE0",
            "next_sequence": 38
          },
          "balance": 0,
          "delinquent": false,
          "billing": {
            "company": {
              "name": "Peterbalance Architecture",
              "email": "alexw@peterbalance.com",
              "phone": "2069030575"
            },
            "address": {
              "lines": [
                "2333 3rd Ave",
                ""
              ],
              "city": "Seattle",
              "state": "WA",
              "postcode": "98121"
            }
          }
        }
      },
      "Payment-Source": {
        "value": {
          "id": "card_1GJKp7J5K0z3IHPXD1ciFRwt",
          "nickname": "Default Card",
          "cardholder_name": "Taylor Vick",
          "type": "card",
          "brand": "American Express",
          "funding": "credit",
          "last4": "0005",
          "expiration": {
            "month": 9,
            "year": 2022
          },
          "fingerprint": "o19iQvRGhtvzbzRm",
          "cvc_check": "pass"
        }
      },
      "Subscription": {
        "value": {
          "id": "sub_K5UfhyQEJEfg2R",
          "created": "2021-08-22T16:37:31+0000",
          "start_date": "2021-08-22T16:37:31+0000",
          "status": "active",
          "billing": {
            "cycle_anchor": "2021-08-22T16:37:31+0000",
            "collection_method": "send_invoice",
            "paused": false,
            "pause_collection": null,
            "current_period": {
              "start": "2022-01-22T16:37:31+0000",
              "end": "2022-02-22T16:37:31+0000"
            },
            "default_source": null
          },
          "days_until_due": 30,
          "latest_invoice": "in_1KKmbuJ5K0z3IHPX0CUko1Ti",
          "items": {
            "count": 1,
            "index": [
              "..."
            ],
            "data": [
              {
                "...": null
              }
            ]
          }
        }
      },
      "Subscription-Item": {
        "value": {
          "id": "si_K5p1H0XbUF2OF0",
          "created": "2021-08-23T13:40:18+0000",
          "product": "prod_JrQ5bpNpFpJMIH",
          "plan": "price_1JDhFhJ5K0z3IHPXQmXXDlZJ",
          "price": {
            "id": "price_1JDhFhJ5K0z3IHPXQmXXDlZJ",
            "scheme": "per_unit",
            "unit_amount": 200,
            "frequency": "month",
            "interval": 1
          },
          "usage_type": "licensed",
          "quantity": 12,
          "name": null
        }
      },
      "User-Group": {
        "value": {
          "id": "58a8fbbc-c443-4b03-9d25-a0c89200060c",
          "created": "2022-05-11T23:34:11+0000",
          "last_modified": null,
          "name": "All Building Engineers",
          "description": "All building engineers in all facilities",
          "member_count": 5
        }
      },
      "Get-Collector-Samples": {
        "value": {
          "count": 335,
          "range": {
            "start": 1614163800,
            "end": 1614264720
          },
          "integrity": {
            "sample_duration": 100920,
            "expected_samples": 336,
            "missing_samples": 1,
            "quality": 99
          },
          "statistics": {
            "min": 63.9,
            "max": 154.4,
            "mean": 101.9
          },
          "health": {
            "event_state_distribution": {
              "normal": {
                "sample_count": 142,
                "percent_total": 100
              },
              "offnormal": {
                "sample_count": 0,
                "percent_total": 0
              },
              "fault": {
                "sample_count": 0,
                "percent_total": 0
              }
            },
            "status_distribution": {
              "fault": {
                "sample_count": 0,
                "percent_total": 0
              },
              "in_alarm": {
                "sample_count": 0,
                "percent_total": 0
              },
              "overridden": {
                "sample_count": 0,
                "percent_total": 0
              },
              "out_of_service": {
                "sample_count": 3,
                "percent_total": 2
              }
            }
          },
          "data": [
            {
              "id": "6fc988a0f34126693318d2df9247f8cc",
              "timestamp": "1614264600",
              "value": 62.6,
              "feedback_value": null,
              "state_text": null,
              "event_state": "normal",
              "priority_array": null,
              "status_flags": {
                "fault": false,
                "in_alarm": false,
                "overridden": false,
                "out_of_service": false
              }
            },
            {
              "id": "bbd4e6fb74ad710553100aace78636ce",
              "timestamp": "1614264300",
              "value": 62.6,
              "feedback_value": null,
              "state_text": null,
              "event_state": "normal",
              "priority_array": null,
              "status_flags": {
                "fault": false,
                "in_alarm": false,
                "overridden": false,
                "out_of_service": false
              }
            }
          ]
        }
      },
      "Put-Relinquish-Point": {
        "value": {
          "operation": "relinquish",
          "priority": 8
        }
      },
      "Put-Command-Point": {
        "value": {
          "operation": "command",
          "value": 1,
          "priority": 8
        }
      },
      "Get-Analog-Input-Point-Online": {
        "value": {
          "id": "139e612c-83fa-4cc9-8634-834395899346",
          "@controller": "d1ae9060-b89c-48e8-abae-0f78d8f6af9d",
          "created": "2021-06-22T01:36:30+0000",
          "name": "SEA.AH1.SAT",
          "description": "AH-1 SUPPLY TEMPERATURE",
          "instance_id": 5,
          "object_type": 0,
          "collector_count": 0,
          "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
          "is_online": true,
          "bacnet": {
            "object": {
              "instance": 5,
              "type": 0,
              "name": "SEA.AH1.SAT",
              "description": "AH-1 SUPPLY TEMPERATURE"
            },
            "telemetry": {
              "present_value": 109.2,
              "reliability": "no fault detected",
              "device_type": "10k Thermister",
              "event_state": "normal",
              "units": {
                "raw": "degrees fahrenheit",
                "formatted": "DEG F"
              }
            },
            "status": {
              "in_alarm": false,
              "fault": false,
              "out_of_service": false,
              "overridden": false
            },
            "alarming": {
              "enabled": true,
              "acked_transitions": {
                "to_normal": true,
                "to_offnormal": true,
                "to_fault": true
              },
              "notify": {
                "type": "alarm",
                "notification_class": 0
              },
              "time_delay": 30,
              "limits": {
                "high": 160,
                "low": 45
              },
              "deadband": 1,
              "event_timestamps": {
                "to_off_normal": 5838048000,
                "to_normal": 5838048000,
                "to_fault": 5838048000
              }
            },
            "totalization": {
              "enabled": true,
              "elapsed_active_time": 0,
              "last_reset": 0,
              "ealpsed_inactive_time": 0
            }
          }
        }
      },
      "Get-Binary-Output-Point-Online": {
        "value": {
          "id": "139e612c-83fa-4cc9-8634-834395899346",
          "@controller": "d1ae9060-b89c-48e8-abae-0f78d8f6af9d",
          "created": "2021-06-22T01:36:30+0000",
          "name": "SEA.AH1.ENA",
          "description": "AH-1 ENABLE",
          "instance_id": 0,
          "object_type": 5,
          "collector_count": 0,
          "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
          "is_online": true,
          "bacnet": {
            "object": {
              "instance": 5,
              "type": 4,
              "name": "SEA.SRV.ALARM",
              "description": "SRV ALARM LIGHT"
            },
            "telemetry": {
              "present_value": 0,
              "reliability": "no fault detected",
              "device_type": "LDO",
              "event_state": "normal",
              "state_text": [
                "NORMAL",
                "ALARM"
              ],
              "polarity": "normal",
              "feedback_value": 0,
              "relinquish_default": 0
            },
            "status": {
              "in_alarm": false,
              "fault": false,
              "out_of_service": false,
              "overridden": false
            },
            "priority_array": [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null
            ],
            "alarming": {
              "enabled": true,
              "acked_transitions": {
                "to_normal": true,
                "to_offnormal": true,
                "to_fault": true
              },
              "notify": {
                "type": "alarm",
                "notification_class": 0
              },
              "time_delay": 0
            },
            "totalization": {
              "enabled": true,
              "elapsed_active_time": 0,
              "last_reset": 0,
              "ealpsed_inactive_time": 0
            }
          }
        }
      },
      "Get-Analog-Input-Point": {
        "value": {
          "id": "139e612c-83fa-4cc9-8634-834395899346",
          "@controller": "d1ae9060-b89c-48e8-abae-0f78d8f6af9d",
          "created": "2021-06-22T01:36:30+0000",
          "name": "SEA.AH1.ENA",
          "description": "AH-1 ENABLE",
          "instance_id": 0,
          "object_type": 5,
          "collector_count": 0,
          "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
          "is_online": null,
          "bacnet": null
        }
      },
      "Get-Point-List": {
        "value": {
          "count": 13,
          "data": [
            {
              "id": "0247cd05-409b-4c20-ade8-56d170fb9970",
              "controller": "48f6bef2-1d57-4333-b9af-be687876e997",
              "created": 1614381639,
              "name": "SEA.EF1.SS",
              "description": "",
              "object_type": 4,
              "instance_id": 2,
              "site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "bacnet": null
            },
            {
              "id": "15732bb9-22f6-4fac-a66a-deb342cbce54",
              "controller": "4f668b28-c30d-4fc1-b751-7cc30dcc4964",
              "created": 1613745322,
              "name": "SEA.LGT2.DO",
              "description": "",
              "object_type": 4,
              "instance_id": 4,
              "site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "bacnet": null
            },
            {
              "...": null
            }
          ]
        }
      },
      "Get-Collector-Details": {
        "value": {
          "id": "7a3795f5-9ce4-49d5-a8ff-8d8bb96d6f38",
          "created": "2021-05-27T23:50:17+0000",
          "expires": null,
          "enabled": true,
          "interval": 300,
          "sample_count": 19034,
          "source": {
            "point": {
              "id": "32481fc1-a14e-44e7-a459-9259820b0d96",
              "object_type": 4,
              "instance_id": 0,
              "name": "SEA.AH1.SS",
              "description": "AH-1 FAN S/S"
            },
            "controller": {
              "id": "5a9d2264-72aa-4ec8-bfe5-98ecd4173dda",
              "device_id": 10200,
              "name": "USSEA-HVAC-BMSNODE02"
            },
            "gateway": {
              "id": "7a3795f5-9ce4-49d5-a8ff-8d8bb96d6f38"
            }
          },
          "@site": null
        }
      },
      "Create-Point-Body": {
        "value": {
          "description": "Example shared example",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "Update-Release-Body": {
        "value": {
          "description": "Example shared example",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "Get-Release-Job": {
        "value": {}
      },
      "Get-Collector-Stats": {
        "value": {
          "sample_count": 145250
        }
      },
      "Get-Gateway": {
        "value": {
          "id": "539fea81-d151-46e1-b1f6-36e3864ebeff",
          "created": "2021-02-21T17:49:36+0000",
          "last_modified": null,
          "serial": "dca6327364b3",
          "name": "Gateway SEA-BMS",
          "description": "Main gateway",
          "location": "Seattle Office MDF, Rack #2",
          "is_registered": true,
          "vitals": null
        }
      },
      "Get-Gateway-Status": {
        "value": {
          "hostname": "ussea-bms-gw01",
          "serial": "dca6327364b3",
          "registration": {
            "tenant": "7d5a9e81-0902-4137-b71e-40ea913b5bfa",
            "timestamp": null
          },
          "uptime": "29 days",
          "services": {
            "running": 150,
            "status": {
              "web_server": true,
              "cache": true,
              "ssh": true,
              "bacnet": true,
              "tunnel": true
            }
          },
          "config": {
            "hosts": {
              "api": "https://funnel.counterbalance.io",
              "data": "https://funnel.counterbalance.io"
            },
            "cache": {
              "aging": {
                "max_object_age": 5,
                "max_controller_age": 30,
                "max_objectlist_age": 10,
                "max_controllerlist_age": 0
              }
            },
            "network_scanning": {
              "limits": {
                "controllers": 5,
                "collectors": 5
              },
              "bounce": {
                "group": 0,
                "collector": 1
              }
            }
          },
          "firmware": {
            "revision": "0.2.0",
            "street_date": "2022-03-20T07:00:00+0000",
            "installation_timestamp": "2022-03-05T02:34:45+0000",
            "release": "5.8.0-1032-raspi",
            "architecture": "aarch64",
            "update_available": false,
            "last_update_check": "2022-03-05T02:34:45+0000"
          }
        }
      },
      "Create-Gateway-Body": {
        "value": {
          "serial": "b821eb530b5e",
          "name": "Primary Gateway"
        }
      },
      "Get-Gateway-List": {
        "value": {
          "count": 1,
          "index": [
            "539fea81-d151-46e1-b1f6-36e3864ebeff"
          ],
          "data": [
            {
              "id": "539fea81-d151-46e1-b1f6-36e3864ebeff",
              "created": "2021-02-21T17:49:36+0000",
              "last_modified": null,
              "serial": "dca6327364b3",
              "name": "Gateway SEA-BMS",
              "description": "Test gateway",
              "location": "Seattle Office MDF, Rack #2",
              "is_registered": true,
              "vitals": null
            }
          ]
        }
      },
      "Update-Gateway-Body": {
        "value": {
          "name": "Primary Gateway",
          "description": "The primary gateway we use",
          "location": "BAS Panel for RTU-1"
        }
      },
      "Gateway-Whois": {
        "value": {
          "count": 2,
          "data": {
            "responses": [
              {
                "device_id": "10100",
                "device_name": "USSEA-HVAC-BMSNODE01"
              },
              {
                "device_id": "10200",
                "device_name": "USSEA-HVAC-BMSNODE02"
              }
            ],
            "online_devices": [
              "10100",
              "10200"
            ]
          }
        }
      },
      "Get-Gateway-Devices": {
        "value": {
          "count": 2,
          "data": {
            "managed_devices": [
              {
                "id": "4f668b28-c30d-4fc1-b751-7cc30dcc4964",
                "name": "USSEA-HVAC-BMSNODE01",
                "description": "",
                "location": "",
                "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
                "online": true,
                "bacnet": {
                  "id": 10100,
                  "name": "USSEA-HVAC-BMSNODE01"
                }
              }
            ],
            "unmanaged_devices": [
              {
                "device_id": "10200",
                "device_name": "USSEA-HVAC-BMSNODE02"
              }
            ],
            "online_devices": [
              "10100",
              "10200"
            ],
            "offline_devices": [],
            "new_devices_available": true
          }
        }
      },
      "Get-Controller-Listing": {
        "value": {
          "count": 2,
          "index": [
            "48f6bef2-1d57-4333-b9af-be687876e997",
            "4f668b28-c30d-4fc1-b751-7cc30dcc4964"
          ],
          "data": [
            {
              "id": "48f6bef2-1d57-4333-b9af-be687876e997",
              "created": 1614139068,
              "last_modified": null,
              "@gateway": "539fea81-d151-46e1-b1f6-36e3864ebeff",
              "name": "USSEA-HVAC-BMSNODE02",
              "description": "",
              "location": "",
              "instance_id": 10200,
              "is_ostracized": false,
              "point_count": 1,
              "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b"
            },
            {
              "id": "4f668b28-c30d-4fc1-b751-7cc30dcc4964",
              "created": 1613717286,
              "last_modified": null,
              "@gateway": "539fea81-d151-46e1-b1f6-36e3864ebeff",
              "name": "USSEA-HVAC-BMSNODE01",
              "description": "",
              "location": "",
              "instance_id": 10100,
              "is_ostracized": false,
              "point_count": 19,
              "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b"
            }
          ]
        }
      },
      "Get-Controller-Details": {
        "value": {
          "id": "d4cf4450-b314-420d-b8e9-243b56330acc",
          "created": "2021-05-27T21:30:02+0000",
          "last_modified": "2021-09-26T04:55:36+0000",
          "@gateway": "539fea81-d151-46e1-b1f6-36e3864ebeff",
          "name": "SEA-BMS Node #01",
          "description": "Central plant controller",
          "location": "Mech Room 126",
          "instance_id": 10100,
          "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
          "is_online": false,
          "is_ostracized": false,
          "point_count": 29,
          "bacnet": null
        }
      },
      "Create-Controller-Body": {
        "value": {
          "name": "USSEA-HVAC-BMSNODE01",
          "gateway": "539fea81-d151-46e1-b1f6-36e3864ebeff",
          "instance": "10100"
        }
      },
      "Get-Controller-Details-Online": {
        "value": {
          "id": "d4cf4450-b314-420d-b8e9-243b56330acc",
          "created": "2021-05-27T21:30:02+0000",
          "last_modified": "2021-09-26T04:55:36+0000",
          "@gateway": "539fea81-d151-46e1-b1f6-36e3864ebeff",
          "name": "SEA-BMS Node #01",
          "description": "Central plant controller",
          "location": "Mech Room 126",
          "instance_id": 10100,
          "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
          "is_online": true,
          "is_ostracized": false,
          "point_count": 29,
          "bacnet": {
            "object": {
              "name": "USSEA-HVAC-BMSNODE02",
              "description": "AHU-1",
              "instance": "10200"
            },
            "protocol": {
              "version": 1,
              "revision": 7,
              "max_master": 127,
              "device_id": "10200",
              "max_segments_accepted": 16,
              "apdu": {
                "timeout": 15000,
                "retries": 1,
                "segment_timeout": 15000,
                "max_length": 1476
              },
              "services_supported": {
                "atomic-read-file": true,
                "confirmed-text-message": true,
                "unconfirmed-text-message": true,
                "time-synchronization": true,
                "confirmed-event-notification": true,
                "reinitialize-device": true,
                "who-is": true,
                "who-has": true,
                "unconfirmed-event-notification": true,
                "subscribe-cov-property": false,
                "vt-data": false,
                "unconfirmed-private-transfer": false,
                "create-object": true,
                "delete-object": true,
                "read-property-conditional": false,
                "add-list-element": true,
                "vt-open": false,
                "remove-list-element": true,
                "get-event-information": true,
                "confirmed-cov-notification": true,
                "i-am": true,
                "device-communication-control": true,
                "acknowledge-alarm": true,
                "get-alarm-summary": true,
                "i-have": true,
                "subscribe-cov": true,
                "confirmed-private-transfer": true,
                "vt-close": false,
                "request-key": false,
                "read-property-multiple": true,
                "write-property": true,
                "life-safety-operation": false,
                "read-property": true,
                "atomic-write-file": true,
                "utc-time-synchronization": false,
                "get-enrollment-summary": true,
                "write-property-multiple": true,
                "unconfirmed-cov-notification": true,
                "read-range": true,
                "authenticate": false
              },
              "object_types_supported": {
                "averaging": false,
                "multi-state-input": false,
                "schedule": true,
                "multi-state-output": true,
                "binary-output": true,
                "analog-value": true,
                "life-safety-point": false,
                "group": false,
                "notification-class": true,
                "analog-input": true,
                "file": true,
                "command": true,
                "life-safety-zone": false,
                "binary-input": true,
                "loop": false,
                "multi-state-value": true,
                "analog-output": true,
                "calendar": true,
                "event-enrollment": true,
                "pulse-converter": false,
                "device": true,
                "trend-log": true,
                "binary-value": true,
                "program": false,
                "accumulator": false
              }
            },
            "hardware": {
              "make": "Siemens Industry Inc., Bldg Tech",
              "model": "Siemens BACnet Field Panel",
              "vendor_id": 7,
              "location": "MAINT SHOP",
              "firmware_revision": "PXCE V3.4 BACnet 4.3g"
            },
            "system": {
              "application_software_version": "BCE1265_0039",
              "status": "operational",
              "date": "2021-02-23",
              "time": "20:58:26.18"
            }
          }
        }
      },
      "Update-Controller-Body": {
        "value": {
          "name": "New Name"
        }
      },
      "Get-Network": {
        "value": {
          "eth0": {
            "dhcp": false,
            "mac": "dc:a6:32:73:64:b3",
            "speed": 1000,
            "duplex": "full",
            "address": "10.12.32.239",
            "mask": "255.255.255.0",
            "gateway": "10.12.32.254",
            "dns": [
              "1.1.1.1",
              "8.8.8.8"
            ],
            "cidr": 24
          }
        }
      },
      "Generic-Gateway-Operation": {
        "value": {
          "status": true
        }
      },
      "Plot": {
        "value": {
          "id": "bc7c1276-c623-4bc6-99e5-d00f49e972d8",
          "created": "2022-02-12T01:10:40+0000",
          "last_modified": null,
          "name": "Heating HW Loop - Last 24H",
          "description": "Heating HW loop supply and return temperatures for the last 24 hours",
          "@owner": "afc3dd4c-dd19-4013-b430-ebcc58202fd3",
          "public": true,
          "config": {}
        }
      },
      "Plot-Object-Listing": {
        "value": {
          "count": 1,
          "index": [
            "bc7c1276-c623-4bc6-99e5-d00f49e972d8"
          ],
          "data": [
            {
              "id": "bc7c1276-c623-4bc6-99e5-d00f49e972d8",
              "created": "2022-02-12T01:10:40+0000",
              "last_modified": null,
              "name": "Heating HW Loop - Last 24H",
              "description": "Heating HW loop supply and return temperatures for the last 24 hours",
              "@owner": "afc3dd4c-dd19-4013-b430-ebcc58202fd3",
              "public": true,
              "config": {}
            }
          ]
        }
      },
      "Create-Plot-Object-Body": {
        "value": {
          "name": "Heating HW Loop - Last 24H",
          "description": "Heating HW loop supply and return temperatures for the last 24 hours",
          "public": true,
          "config": {}
        }
      },
      "Update-Plot-Object-Body": {
        "value": {
          "name": "Heating HW Loop - Last 24H",
          "description": "Heating HW loop supply and return temperatures for the last 24 hours",
          "public": true,
          "config": {}
        }
      },
      "Site-Object-List": {
        "value": {
          "count": 4,
          "index": [
            "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
            "723a9c16-1790-4386-b17b-54bc9ed6d901",
            "82478e3a-a212-41bf-9e2b-7522a1504a6b",
            "c1b5593a-6f59-46fa-ae38-15e4c4262ffa"
          ],
          "data": [
            {
              "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
              "created": "2021-02-05T03:13:05+0000",
              "code": "MSP",
              "name": "Minneapolis Office",
              "description": "",
              "address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
              "attributes": {
                "year_built": "1927",
                "floor_count": 1,
                "room_count": 8,
                "gross_floor_area": 18000,
                "net_room_area": 17850,
                "net_room_volume": 0
              },
              "occupancy": {
                "default": "E",
                "allowed": [
                  "E",
                  "A-1",
                  "A-2"
                ]
              },
              "classification": {
                "category": {
                  "id": 1,
                  "name": "Education"
                },
                "type": {
                  "id": 2,
                  "name": "K-12 School"
                },
                "sub_type": {
                  "id": 1,
                  "name": "High School"
                }
              }
            },
            {
              "id": "723a9c16-1790-4386-b17b-54bc9ed6d901",
              "...": null
            },
            {
              "id": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "...": null
            },
            {
              "id": "c1b5593a-6f59-46fa-ae38-15e4c4262ffa",
              "...": null
            }
          ]
        }
      },
      "Create-Site-Body": {
        "value": {
          "name": "Minneapolis Office",
          "year_built": "1927",
          "description": "Minneapolis branch office",
          "category": 7,
          "type": 1,
          "sub_type": 0
        }
      },
      "Site": {
        "value": {
          "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "created": "2021-02-05T03:13:05+0000",
          "last_modified": null,
          "code": "MSP",
          "name": "Minneapolis Office",
          "description": "",
          "@address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
          "contacts": null,
          "attributes": {
            "year_built": "",
            "floor_count": 0,
            "room_count": 0,
            "gross_floor_area": 0,
            "net_room_area": 0,
            "net_room_volume": 0
          },
          "occupancy": {
            "default": "E",
            "allowed": [
              "E",
              "A-1",
              "A-2"
            ]
          },
          "classification": {
            "category": {
              "id": 1,
              "name": "Education"
            },
            "type": {
              "id": 2,
              "name": "K-12 School"
            },
            "sub_type": {
              "id": 1,
              "name": "High School"
            }
          }
        }
      },
      "Floor": {
        "value": {
          "id": "38082b4a-6e6c-46ac-ba44-9de02d3323c0",
          "created": "2021-04-12T17:08:59+0000",
          "last_modified": "2021-04-12T17:11:23+0000",
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "code": "Basement",
          "description": "Mechanical, building storage",
          "attributes": {
            "below_grade": true,
            "gross_floor_area": 16000,
            "room_count": 5,
            "net_room_area": 5480,
            "net_room_volume": 0
          }
        }
      },
      "Create-Floor-Body": {
        "value": {
          "code": "Floor 1",
          "description": "First floor",
          "gross_floor_area": 18000,
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "below_grade": false
        }
      },
      "Floor-Object-List": {
        "value": {
          "count": 4,
          "index": [
            "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
            "723a9c16-1790-4386-b17b-54bc9ed6d901",
            "82478e3a-a212-41bf-9e2b-7522a1504a6b",
            "c1b5593a-6f59-46fa-ae38-15e4c4262ffa"
          ],
          "data": [
            {
              "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
              "created": "2021-02-05T03:13:05+0000",
              "code": "MSP",
              "name": "Minneapolis Office",
              "description": "",
              "address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
              "attributes": {
                "year_built": "1927",
                "floor_count": 1,
                "room_count": 8,
                "gross_floor_area": 18000,
                "net_room_area": 17850,
                "net_room_volume": 0
              }
            },
            {
              "id": "723a9c16-1790-4386-b17b-54bc9ed6d901",
              "created": "2021-02-05T15:11:48+0000",
              "code": "SFO",
              "name": "San Francisco Office",
              "description": "",
              "address": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
              "attributes": {
                "year_built": "2005",
                "floor_count": 0,
                "room_count": 0,
                "gross_floor_area": 0,
                "net_room_area": 0,
                "net_room_volume": 0
              }
            },
            {
              "id": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "created": "2021-02-05T03:00:27+0000",
              "code": "SEA",
              "name": "Seattle Office",
              "description": "",
              "address": "032183ea-087d-43a6-94e8-5688ef909771",
              "attributes": {
                "year_built": "1945",
                "floor_count": 27,
                "room_count": 241,
                "gross_floor_area": 570000,
                "net_room_area": 570000,
                "net_room_volume": 0
              }
            },
            {
              "id": "c1b5593a-6f59-46fa-ae38-15e4c4262ffa",
              "created": "2021-02-06T05:51:29+0000",
              "code": "AUS",
              "name": "Austin Office",
              "description": "",
              "address": "8aac0478-7b6f-448f-952b-dd710a94ee7a",
              "attributes": {
                "year_built": "1997",
                "floor_count": 2,
                "room_count": 36,
                "gross_floor_area": 18560,
                "net_room_area": 18000,
                "net_room_volume": 0
              }
            }
          ]
        }
      },
      "Create-Room-Body": {
        "value": {
          "name": "Open Office",
          "number": "100",
          "description": "Open office & collaboration area",
          "area": 8900,
          "@floor": "d2fa3901-8649-46dc-bbfb-4864007895da",
          "occupancy": "B"
        }
      },
      "Room": {
        "value": {
          "id": "61747b47-9828-4294-8602-8ef445e17240",
          "created": "2021-04-12T18:22:40+0000",
          "last_modified": "2021-04-12T18:54:18+0000",
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "@floor": "38082b4a-6e6c-46ac-ba44-9de02d3323c0",
          "number": "1",
          "name": "Circulation",
          "description": "Hall area",
          "attributes": {
            "occupancy": "B",
            "area": 150,
            "ceiling_height": 9,
            "volume": 1350
          }
        }
      },
      "Room-Object-List": {
        "value": {
          "description": "Example shared example",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "Address": {
        "value": {
          "id": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
          "created": "2021-02-05T16:10:54+0000",
          "last_modified": null,
          "@site": "723a9c16-1790-4386-b17b-54bc9ed6d901",
          "lines": [
            "600 Montgomery"
          ],
          "locality": "Downtown San Francisco",
          "city": "San Francisco",
          "county": "San Francisco",
          "state": "CA",
          "postcode": 94111,
          "country": "USA",
          "formatted": "600 Montgomery, San Francisco, CA 94111",
          "geolocation": {
            "latitude": 37.79513,
            "longitude": -122.40299
          },
          "timezone": "America/Los_Angeles",
          "designations": {
            "primary_mailing": false,
            "primary_billing": false
          }
        }
      },
      "Timezone": {
        "value": {
          "id": "America/Los_Angeles",
          "effective_coordinates": [
            "37.79513",
            "-122.40299"
          ],
          "current": {
            "wall_time": "2021-04-13T06:59:36+0000",
            "utc_offset": -25200,
            "is_dst": false,
            "tag": "PDT"
          },
          "names": {
            "ISO6391_language_code": "en",
            "generic": "Pacific Time",
            "standard": "Pacific Standard Time",
            "daylight": "Pacific Daylight Time"
          }
        }
      },
      "Geocode-Search": {
        "value": {
          "name": "Seattle, WA 98119",
          "geolocation": {
            "latitude": 47.63777,
            "longitude": -122.36731
          },
          "geometry": "00005557-4100-2800-0000-00000bf9eda4"
        }
      },
      "Tenant-Account": {
        "value": {
          "id": "d6797ebf-5b00-4a59-b3e5-19711b4c55bb",
          "name": "Figgis Agency",
          "flags": {
            "active": true,
            "has_subscription": true,
            "has_billing_account": true,
            "locked": false,
            "confirmed": true,
            "deleted": false
          },
          "tier": 3,
          "billing_id": "cus_GZBdOM86hQZldD",
          "locale": "en-us",
          "primary_contact": {
            "id": "1b17e73b-4cf7-4b47-a0f8-46f878ef7bf1",
            "name": {
              "given": "Cyril",
              "family": "Figgis",
              "full": "Cyril Figgis"
            },
            "email": "cyril@figgisagency.com",
            "phone": {
              "primary": {
                "type": null,
                "number": null
              }
            }
          },
          "addresses": {
            "@mailing": "f3643601-d122-47c5-893c-1f108c07d840",
            "@billing": null
          },
          "milestones": {
            "account_created": {
              "status": true,
              "timestamp": "2018-02-01T02:10:02+0000"
            },
            "account_deleted": {
              "status": false,
              "timestamp": null
            },
            "account_confirmation": {
              "status": true,
              "timestamp": "2020-01-28T03:50:30+0000"
            },
            "onboarded": {
              "status": true,
              "timestamp": "2020-01-28T03:50:30+0000"
            },
            "accepted_terms": {
              "status": true,
              "timestamp": "2018-02-01T02:10:02+0000"
            },
            "accepted_billing_terms": {
              "status": false,
              "timestamp": null
            },
            "accepted_subscription_terms": {
              "status": false,
              "timestamp": null
            }
          }
        }
      },
      "Update-Tenant-Body": {
        "value": {
          "name": "Figgis Agency",
          "primary_contact": "5152763b-7d76-4d22-8484-ff27da40fe98"
        }
      },
      "Create-Tenant-Account": {
        "value": {
          "success_message": "The tenant has been created! Account confirmation is required to unlock the account."
        }
      },
      "Tenant-Quota-Summary": {
        "value": {
          "usage": {
            "record_user": 1,
            "seat": 9,
            "user": 0,
            "site": 17,
            "gateway": 1,
            "controller": 3,
            "point": 43,
            "collector": 17,
            "equipment": 55,
            "routine": 0,
            "reset": 0,
            "trigger": 0,
            "fdd_rule": 0,
            "meter": 0,
            "kiosk": 0
          },
          "tenant": {
            "id": "7d5a9e81-0902-4137-b71e-40ea913b5bfa",
            "billing_id": "cus_Gr2tvkQK7Yrujz",
            "tier": 1,
            "account_type": "T1 - Standard"
          },
          "quotas": {
            "collector": {
              "usage": 17,
              "quota": {
                "included": 200,
                "purchased": 25,
                "total": 225
              },
              "remaining": 208,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "controller": {
              "usage": 3,
              "quota": {
                "included": 100,
                "purchased": 20,
                "total": 120
              },
              "remaining": 117,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "equipment": {
              "usage": 55,
              "quota": {
                "included": 50,
                "purchased": 0,
                "total": 50
              },
              "remaining": 0,
              "status": {
                "can_add_more": false,
                "is_exceeded": true,
                "is_met": true
              }
            },
            "fdd_rule": {
              "usage": 0,
              "quota": {
                "included": 150,
                "purchased": 0,
                "total": 150
              },
              "remaining": 150,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "gateway": {
              "usage": 1,
              "quota": {
                "included": 25,
                "purchased": 0,
                "total": 25
              },
              "remaining": 24,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "kiosk": {
              "usage": 0,
              "quota": {
                "included": 10,
                "purchased": 0,
                "total": 10
              },
              "remaining": 10,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "meter": {
              "usage": 0,
              "quota": {
                "included": 100,
                "purchased": 0,
                "total": 100
              },
              "remaining": 100,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "point": {
              "usage": 43,
              "quota": {
                "included": 500,
                "purchased": 550,
                "total": 1050
              },
              "remaining": 1007,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "record_user": {
              "usage": 1,
              "quota": {
                "included": 0,
                "purchased": 0,
                "total": 0
              },
              "remaining": 0,
              "status": {
                "can_add_more": false,
                "is_exceeded": true,
                "is_met": true
              }
            },
            "reset": {
              "usage": 0,
              "quota": {
                "included": 50,
                "purchased": 0,
                "total": 50
              },
              "remaining": 50,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "routine": {
              "usage": 0,
              "quota": {
                "included": 50,
                "purchased": 0,
                "total": 50
              },
              "remaining": 50,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "seat": {
              "usage": 9,
              "quota": {
                "included": 25,
                "purchased": 12,
                "total": 37
              },
              "remaining": 28,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "site": {
              "usage": 17,
              "quota": {
                "included": 10,
                "purchased": 10,
                "total": 20
              },
              "remaining": 3,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "trigger": {
              "usage": 0,
              "quota": {
                "included": 10,
                "purchased": 0,
                "total": 10
              },
              "remaining": 10,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            },
            "user": {
              "usage": 0,
              "quota": {
                "included": 10,
                "purchased": 0,
                "total": 10
              },
              "remaining": 10,
              "status": {
                "can_add_more": true,
                "is_exceeded": false,
                "is_met": false
              }
            }
          },
          "composition": {
            "base": {
              "included_quotas": {
                "collector": 200,
                "controller": 100,
                "equipment": 50,
                "fdd_rule": 150,
                "gateway": 25,
                "kiosk": 10,
                "meter": 100,
                "point": 500,
                "record_user": null,
                "reset": 50,
                "routine": 50,
                "seat": 25,
                "site": 10,
                "trigger": 10,
                "user": 10
              },
              "features": [
                "browser",
                "commander",
                "components",
                "dynamic_plotter",
                "report_viewer",
                "scheduler",
                "sched_releases",
                "sched_reports",
                "trend_viewer",
                "weather"
              ]
            },
            "purchased_items": [
              {
                "id": "si_K5p1H0XbUF2OF0",
                "product": "prod_JrQ5bpNpFpJMIH",
                "plan": "price_1JDhFhJ5K0z3IHPXQmXXDlZJ",
                "quantity": 12
              },
              {
                "id": "si_K5UfB0QxmjmyMb",
                "product": "prod_Jonb7n6NgZwJPs",
                "plan": "price_1JBASEJ5K0z3IHPX1fIfVOTj",
                "quantity": 2
              },
              {
                "id": "si_HZ3bajOlRzV6Yz",
                "product": "prod_HZ369tGn3VJSVa",
                "plan": "price_1Gzv76J5K0z3IHPXeoVpLSY0",
                "quantity": 1
              },
              {
                "id": "si_HZ7U2OIcslO2QI",
                "product": "prod_HZ4TOtIlNA9QCE",
                "plan": "price_1GzwKcJ5K0z3IHPXutddmh3D",
                "quantity": 10
              },
              {
                "id": "si_HZJ9liaeMMwD69",
                "product": "prod_HZJ7uDhRzsf6lo",
                "plan": "price_1H0AVBJ5K0z3IHPXTV47pZ3C",
                "quantity": 1
              },
              {
                "id": "si_JooZUUSQ2PkjQu",
                "product": "prod_Jonb7n6NgZwJPs",
                "plan": "price_1JBASEJ5K0z3IHPX1fIfVOTj",
                "quantity": 10
              },
              {
                "id": "si_JrO2pVG3a7H9OG",
                "product": "prod_Joo94eFbavxlBO",
                "plan": "price_1JBAXLJ5K0z3IHPXk8KRXmYz",
                "quantity": 550
              },
              {
                "id": "si_JrO2j5us2oZRiw",
                "product": "prod_Joo1OUr6YfqMaA",
                "plan": "price_1JBAPDJ5K0z3IHPXKXPsmQe9",
                "quantity": 25
              },
              {
                "id": "si_JrP2d6sPjwvlZx",
                "product": "prod_JrOsYAC275DsZV",
                "plan": "price_1JDg4fJ5K0z3IHPX5Iu0DvEH",
                "quantity": 50
              },
              {
                "id": "si_JrQAr6iR15RAh3",
                "product": "prod_JrQ5bpNpFpJMIH",
                "plan": "price_1JDhFhJ5K0z3IHPXQmXXDlZJ",
                "quantity": 8
              }
            ]
          },
          "features": [
            "browser",
            "commander",
            "components",
            "dynamic_plotter",
            "report_viewer",
            "scheduler",
            "sched_releases",
            "sched_reports",
            "trend_viewer",
            "weather"
          ]
        }
      },
      "Confirm-Tenant-Account": {
        "value": {
          "success_message": "Tenant account has been successfully confirmed!"
        }
      },
      "Onboard-Tenant-Account": {
        "value": {
          "success_message": "Onboarding has been completed!"
        }
      },
      "Tenant-Preferences": {
        "value": {
          "display_name_format": "first-last",
          "shell": {
            "theme": "#161d1b",
            "pagination": {
              "enabled": false,
              "default_limit": 10
            },
            "disabled_applications": []
          }
        }
      },
      "Response (Imperial Units)": {
        "value": {
          "effective_coordinates": {
            "latitude": "37.79513",
            "longitude": "-122.40299"
          },
          "units": "imperial",
          "timestamp": "2021-04-13T14:15:00+0000",
          "phrase": "Mostly cloudy",
          "icon": 6,
          "is_raining": false,
          "is_daytime": true,
          "temperature": {
            "value": 49,
            "unit": "F"
          },
          "apparent_temperature": {
            "value": 52,
            "unit": "F"
          },
          "wetbulb_temperature": {
            "value": 48,
            "unit": "F"
          },
          "windchill_temperature": {
            "value": 46,
            "unit": "F"
          },
          "relative_humidity": 90,
          "dewpoint": {
            "value": 46,
            "unit": "F"
          },
          "wind": {
            "direction": {
              "degrees": 248,
              "localized": "WSW"
            },
            "speed": {
              "value": 6,
              "unit": "mi/h"
            },
            "gust": {
              "value": 15,
              "unit": "mi/h"
            }
          },
          "visibility": {
            "value": 5,
            "unit": "mi",
            "obstructions": ""
          },
          "cloud_cover": 78,
          "ceiling": {
            "value": 5100,
            "unit": "ft"
          },
          "pressure": {
            "value": 29.87,
            "unit": "inHg",
            "direction": "Rising"
          }
        }
      },
      "Response (Metric Units)": {
        "value": {
          "effective_coordinates": {
            "latitude": "37.79513",
            "longitude": "-122.40299"
          },
          "units": "metric",
          "timestamp": "2021-04-13T14:15:00+0000",
          "phrase": "Mostly cloudy",
          "icon": 6,
          "is_raining": false,
          "is_daytime": true,
          "temperature": {
            "value": 9,
            "unit": "C"
          },
          "apparent_temperature": {
            "value": 11,
            "unit": "C"
          },
          "wetbulb_temperature": {
            "value": 8,
            "unit": "C"
          },
          "windchill_temperature": {
            "value": 7,
            "unit": "C"
          },
          "relative_humidity": 90,
          "dewpoint": {
            "value": 8,
            "unit": "C"
          },
          "wind": {
            "direction": {
              "degrees": 248,
              "localized": "WSW"
            },
            "speed": {
              "value": 10,
              "unit": "km/h"
            },
            "gust": {
              "value": 24,
              "unit": "km/h"
            }
          },
          "visibility": {
            "value": 8,
            "unit": "km",
            "obstructions": ""
          },
          "cloud_cover": 78,
          "ceiling": {
            "value": 1554,
            "unit": "m"
          },
          "pressure": {
            "value": 1011.5,
            "unit": "mb",
            "direction": "Rising"
          }
        }
      }
    },
    "requestBodies": {
      "Create-Billing-Account": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Create-Payment-Source": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Update-Payment-Source": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Update-Billing-Account": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Create-User-Group": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The desired name of the user group object",
                  "maxLength": 120
                },
                "description": {
                  "type": "string",
                  "description": "A brief description of the user group object",
                  "maxLength": 300
                }
              },
              "required": [
                "name"
              ]
            }
          }
        }
      },
      "Update-User-Group": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "The desired name of the user group object"
                },
                "description": {
                  "type": "string",
                  "maxLength": 300,
                  "description": "The desired description of the user group object"
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "name": "All Engineers",
                  "description": "All engineering users"
                }
              }
            }
          }
        }
      },
      "Add-Group-Members": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "",
              "minItems": 1,
              "uniqueItems": true,
              "x-examples": {
                "example-1": [
                  [
                    "ee876c8d-f404-4e13-84b6-ee22ec304322",
                    true
                  ]
                ]
              },
              "items": {
                "type": "array",
                "items": {}
              }
            },
            "examples": {
              "example-1": {
                "value": [
                  {
                    "0": [
                      {}
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "Create-Point": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "object_type": {
                  "type": "number",
                  "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    14,
                    17,
                    19
                  ],
                  "format": "double"
                },
                "instance_id": {
                  "type": "string"
                },
                "@site": {
                  "type": "string",
                  "format": "uuid"
                },
                "controller": {
                  "type": "string",
                  "format": "uuid",
                  "example": "48f6bef2-1d57-4333-b9af-be687876e997"
                },
                "units": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "object_type",
                "instance_id",
                "controller"
              ]
            },
            "examples": {
              "example-1": {
                "value": {
                  "name": "string",
                  "description": "string",
                  "object_type": "0",
                  "instance": "string",
                  "@site": "451f769d-1122-4c11-a645-7d2ed505aa0b",
                  "controller": "48f6bef2-1d57-4333-b9af-be687876e997",
                  "units": "string"
                }
              }
            }
          }
        }
      },
      "Create-Collector": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "@point": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The UUID of the point to be collected"
                },
                "interval": {
                  "type": "number",
                  "format": "double",
                  "default": 300,
                  "enum": [
                    300,
                    900,
                    1800,
                    3600
                  ],
                  "description": "The frequency in which to sample the point"
                },
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Sets the status of the collector. Set to `false` to create the collector but disable data collection."
                }
              },
              "required": [
                "@point"
              ]
            },
            "examples": {
              "Example": {
                "value": {
                  "@point": "52aa66de-e553-4383-9e16-52bfcd0efb0f",
                  "interval": 300
                }
              }
            }
          }
        },
        "description": ""
      },
      "Command-Point": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "The desired operation, either `command` or `relinquish`",
                  "enum": [
                    "command",
                    "relinquish"
                  ],
                  "example": "command"
                },
                "value": {
                  "type": "number",
                  "description": "The integer or float value to set. Use `1` or `0` for binary point states"
                },
                "priority": {
                  "type": "number",
                  "description": "The target command priority",
                  "format": "double",
                  "example": 8,
                  "minimum": 1,
                  "maximum": 16,
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16
                  ]
                },
                "scheduled_release": {
                  "type": "object",
                  "description": "Schedule an automatic release of the command. Only available if `operation` is set to `command`",
                  "additionalProperties": false,
                  "properties": {
                    "release_timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-02-23T08:00:00+0000",
                      "description": "Provide a date and time the release job will be executed, submitted in ISO 8601 format"
                    },
                    "email_updates": {
                      "type": "boolean",
                      "default": true,
                      "description": "*Optional* Enable email alerts for this scheduled release"
                    },
                    "note": {
                      "type": "string",
                      "description": "*Optional* Provide a brief note or summary about the command",
                      "maxLength": 300,
                      "example": "Requested by Jennifer at OR control desk"
                    }
                  },
                  "required": [
                    "release_timestamp"
                  ]
                }
              },
              "required": [
                "operation",
                "priority"
              ]
            },
            "examples": {
              "Command Point Example": {
                "$ref": "#/components/examples/Put-Command-Point"
              },
              "Relinquish Point Example": {
                "$ref": "#/components/examples/Put-Relinquish-Point"
              }
            }
          }
        }
      },
      "Update-Point": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Update-Release": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "release_timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-02-23T08:00:00+0000",
                  "description": "Change the date and time the release job will be executed, submitted in ISO 8601 format"
                },
                "note": {
                  "type": "string",
                  "description": "Change the note or summary of the request",
                  "maxLength": 300
                },
                "email_updates": {
                  "type": "boolean",
                  "description": "Change whether email updates are sent for this job. Set to `false` to disable email alerts."
                }
              }
            }
          }
        },
        "description": "These are the parameters of a scheduled release job that can be updated"
      },
      "Update-Collector": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ]
            }
          }
        },
        "description": ""
      },
      "Create-Gateway": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "serial": {
                  "type": "string",
                  "description": "The physical device serial number",
                  "minLength": 12,
                  "maxLength": 12,
                  "example": "b821eb530b5e"
                },
                "name": {
                  "type": "string",
                  "example": "New Gateway",
                  "minLength": 1,
                  "maxLength": 96,
                  "description": "A display name for the new gateway"
                },
                "location": {
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 120,
                  "example": "In BMS panel for RTU-1",
                  "description": "A brief description of the device (location, config, etc)"
                }
              },
              "required": [
                "serial",
                "name"
              ]
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Create-Gateway-Body"
              }
            }
          }
        },
        "description": ""
      },
      "Update-Gateway": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "A name for the gateway"
                },
                "description": {
                  "type": "string",
                  "description": "A brief description of the gateway"
                },
                "location": {
                  "type": "string",
                  "description": "The installed location of the device"
                }
              }
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Update-Gateway-Body"
              }
            }
          }
        }
      },
      "Create-Controller": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "gateway": {
                  "type": "string"
                },
                "site": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "ostracized": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Create-Controller-Body"
              }
            }
          }
        }
      },
      "Update-Controller": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "gateway": {
                  "type": "string"
                },
                "site": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "ostracized": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Update-Controller-Body"
              }
            }
          }
        }
      },
      "Cycle-Gateway-Service": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "enum": [
                    "ssh",
                    "tunnel",
                    "bacnet"
                  ],
                  "description": "The ID of the service to command"
                },
                "command": {
                  "type": "string",
                  "enum": [
                    "start",
                    "stop",
                    "restart"
                  ],
                  "example": "restart",
                  "description": "The command to execute"
                }
              },
              "required": [
                "service",
                "command"
              ]
            }
          }
        }
      },
      "Update-Gateway-Network": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "interface": {
                  "type": "string",
                  "enum": [
                    "eth0"
                  ],
                  "description": "The target interface name to apply the configuration"
                },
                "dhcp": {
                  "type": "boolean",
                  "default": false,
                  "description": "Toggles DHCP on the interface. If `true`, the supplied address, mask, gateway are ignored. You may supply DNS servers to override DHCP if desired. If `false` or omitted, the address, mask paramaters become required."
                },
                "address": {
                  "type": "string",
                  "format": "ipv4",
                  "description": "The IPv4 IP address for the interface. ***Note:** Required if `dhcp` set to `false`.*",
                  "example": "192.168.1.100"
                },
                "mask": {
                  "type": "string",
                  "description": "The IPv4 subnet mask for the interface. ***Note:** Required if `dhcp` set to `false`.*",
                  "format": "ipv4",
                  "example": "255.255.255.0"
                },
                "gateway": {
                  "type": "string",
                  "description": "The IPv4 gateway IP address for the interface. ***Note:** A Gateway IP address and DNS servers are required for internet connectivity.*",
                  "format": "ipv4",
                  "example": "192.168.1.254"
                },
                "dns": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 4,
                  "uniqueItems": true,
                  "description": "An array of up to four IPv4 DNS server addresses. ***Note:** At least one DNS server is required for internet connectivity on an interface.*",
                  "items": {
                    "type": "string",
                    "format": "ipv4",
                    "example": "1.1.1.1"
                  }
                }
              },
              "required": [
                "interface"
              ]
            },
            "examples": {
              "Static IP Address": {
                "value": {
                  "interface": "eth0",
                  "dhcp": false,
                  "address": "192.168.1.100",
                  "mask": "255.255.255.0",
                  "gateway": "192.168.1.254",
                  "dns": [
                    "1.1.1.1"
                  ]
                }
              },
              "Dynamic Address with DHCP": {
                "value": {
                  "interface": "eth0",
                  "dhcp": true
                }
              }
            }
          }
        }
      },
      "Update-Gateway-Hostname": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "hostname": {
                  "type": "string",
                  "format": "hostname",
                  "example": "sea-bms-gtwy-01.peterbalance.com",
                  "description": "The local or fully qualified hostname the gateway device will use on the network"
                }
              },
              "required": [
                "hostname"
              ]
            }
          }
        },
        "description": ""
      },
      "Restart-Gateway": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Create-Plot": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The desired name of the new plot object",
                  "minLength": 1,
                  "maxLength": 96
                },
                "description": {
                  "type": "string",
                  "description": "An optional description of the new plot object",
                  "minLength": 0,
                  "maxLength": 120
                },
                "@owner": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "uuid"
                },
                "public": {
                  "type": "boolean",
                  "default": false,
                  "description": "Set to `true` to make the plot visible to all users"
                },
                "config": {
                  "type": "object",
                  "description": "The plot object configuration data"
                }
              },
              "required": [
                "name",
                "config"
              ]
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Create-Plot-Object-Body"
              }
            }
          }
        },
        "description": "Create-Plot-Object Request Body Description field"
      },
      "Update-Plot": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 96,
                  "description": "The desired name of the plot object"
                },
                "description": {
                  "type": "string",
                  "description": "The desired description of the plot object"
                },
                "@owner": {
                  "type": "string",
                  "description": "The desired owner's user object UUID",
                  "format": "uuid"
                },
                "public": {
                  "type": "boolean",
                  "description": "The desired public visibility of the plot object"
                },
                "config": {
                  "description": "The trend plot configuration data",
                  "type": "object"
                }
              }
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Update-Plot-Object-Body"
              }
            }
          }
        },
        "description": ""
      },
      "Create-Report": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Update-Report": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Create-Report-Group": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Update-Report-Group": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Create-Report-Schedule": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Update-Report-Schedule": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "Create-Site": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "The name of the new site"
                },
                "code": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "A unique code to identify the site"
                },
                "description": {
                  "type": "string",
                  "maxLength": 300,
                  "description": "A description of the site"
                },
                "year_built": {
                  "type": "string"
                },
                "category": {
                  "type": "integer"
                },
                "type": {
                  "type": "integer"
                },
                "sub_type": {
                  "type": "integer"
                },
                "default_occupancy": {
                  "type": "string",
                  "enum": [
                    "A-1",
                    "A-2",
                    "A-3",
                    "A-4",
                    "A-5",
                    "B",
                    "E",
                    "F-1",
                    "F-2",
                    "H-1",
                    "H-2",
                    "H-3",
                    "H-4",
                    "H-5",
                    "I-1",
                    "I-2",
                    "I-3",
                    "I-4",
                    "M",
                    "R-1",
                    "R-2",
                    "R-3",
                    "R-3.1",
                    "R-4",
                    "S-1",
                    "S-2",
                    "U"
                  ],
                  "description": "The desired default occupancy for rooms added to this site"
                },
                "allowed_occupancy": {
                  "type": "array",
                  "enum": [
                    "A-1",
                    "A-2",
                    "A-3",
                    "A-4",
                    "A-5",
                    "B",
                    "E",
                    "F-1",
                    "F-2",
                    "H-1",
                    "H-2",
                    "H-3",
                    "H-4",
                    "H-5",
                    "I-1",
                    "I-2",
                    "I-3",
                    "I-4",
                    "M",
                    "R-1",
                    "R-2",
                    "R-3",
                    "R-3.1",
                    "R-4",
                    "S-1",
                    "S-2",
                    "U"
                  ],
                  "description": "New rooms will be limited to the occupancies provided",
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 27
                  }
                }
              },
              "required": [
                "name",
                "category",
                "type"
              ]
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Create-Site-Body"
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "Create-Floor": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "minLength": 1,
                  "description": "A unique code for the floor",
                  "example": "Floor 1, Main Floor, Basement"
                },
                "description": {
                  "type": "string",
                  "minLength": 1
                },
                "gross_floor_area": {
                  "type": "number"
                },
                "below_grade": {
                  "type": "boolean",
                  "description": "Indicate if the floor is below grade. Default is `false`"
                },
                "@site": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A valid site UUID that will contain this floor"
                }
              },
              "required": [
                "code",
                "@site"
              ]
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Create-Floor-Body"
              }
            }
          }
        }
      },
      "Create-Room": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "number": {
                  "type": "string",
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "minLength": 1
                },
                "area": {
                  "type": "number",
                  "description": "The net area of the room in localized units (integers only)",
                  "format": "double"
                },
                "@floor": {
                  "type": "string",
                  "minLength": 1,
                  "format": "uuid",
                  "description": "A valid floor UUID that will contain this room"
                },
                "occupancy": {
                  "type": "string",
                  "minLength": 1,
                  "description": "The IBC occupancy classification of this room",
                  "enum": [
                    "A-1",
                    "A-2",
                    "A-3",
                    "A-4",
                    "A-5",
                    "B",
                    "E",
                    "F-1",
                    "F-2",
                    "H-1",
                    "H-2",
                    "H-3",
                    "H-4",
                    "H-5",
                    "I-1",
                    "I-2",
                    "I-3",
                    "I-4",
                    "M",
                    "R-1",
                    "R-2",
                    "R-3",
                    "R-3.1",
                    "R-4",
                    "S-1",
                    "S-2",
                    "U"
                  ]
                },
                "ceiling_height": {
                  "type": "number"
                },
                "volume": {
                  "type": "integer"
                }
              },
              "required": [
                "name",
                "number",
                "area",
                "@floor",
                "occupancy"
              ]
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Create-Room-Body"
              }
            }
          }
        }
      },
      "Create-Address": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "maxLength": 300,
                  "description": "A description of the address"
                },
                "street": {
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 1,
                  "description": "An array of address lines, up to two",
                  "items": {}
                },
                "city": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "The city name"
                },
                "state": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "The state name abbreviation"
                },
                "locality": {
                  "type": "string",
                  "maxLength": 96,
                  "description": "The name of the neighborhood"
                },
                "geocode": {
                  "type": "boolean",
                  "description": "Switch to enable/disable address geocoding"
                },
                "county": {
                  "type": "string",
                  "description": "The name of the county",
                  "maxLength": 120
                },
                "country": {
                  "type": "string",
                  "description": "The ISO 3166 alpha-3 country code (USA, CAN, etc)",
                  "maxLength": 3
                },
                "postcode": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "*Required if Geocode is disabled*"
                },
                "timezone": {
                  "type": "string",
                  "maxLength": 90,
                  "description": "An IANA timezone code for the address"
                },
                "latitude": {
                  "type": "string",
                  "description": "The longitude value of the address"
                },
                "longitude": {
                  "type": "string",
                  "description": "The latitude value of the address"
                }
              },
              "required": [
                "street",
                "city",
                "state"
              ]
            },
            "examples": {
              "Example with Geocoding": {
                "value": {
                  "description": "Main Address",
                  "street": [
                    "400 Broad Street"
                  ],
                  "city": "Seattle",
                  "state": "WA"
                }
              },
              "Example without Geocoding": {
                "value": {
                  "geocode": false,
                  "description": "Main Address",
                  "street": [
                    "400 Broad Street"
                  ],
                  "city": "Seattle",
                  "state": "WA",
                  "locality": "Lower Queen Anne",
                  "county": "King",
                  "country": "USA",
                  "postcode": "98119",
                  "timezone": "America/Los_Angeles"
                }
              }
            }
          }
        }
      },
      "Update-Site": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "The name of the site"
                },
                "code": {
                  "type": "string",
                  "description": "The site's unique ID code",
                  "maxLength": 32
                },
                "description": {
                  "type": "string",
                  "description": "The description of the site",
                  "maxLength": 300
                },
                "year_built": {
                  "type": "string"
                },
                "default_occupancy": {
                  "type": "string",
                  "enum": [
                    "A-1",
                    "A-2",
                    "A-3",
                    "A-4",
                    "A-5",
                    "B",
                    "E",
                    "F-1",
                    "F-2",
                    "H-1",
                    "H-2",
                    "H-3",
                    "H-4",
                    "H-5",
                    "I-1",
                    "I-2",
                    "I-3",
                    "I-4",
                    "M",
                    "R-1",
                    "R-2",
                    "R-3",
                    "R-3.1",
                    "R-4",
                    "S-1",
                    "S-2",
                    "U"
                  ],
                  "description": "The desired default occupancy for rooms added to this site"
                },
                "allowed_occupancy": {
                  "type": "array",
                  "enum": [
                    "A-1",
                    "A-2",
                    "A-3",
                    "A-4",
                    "A-5",
                    "B",
                    "E",
                    "F-1",
                    "F-2",
                    "H-1",
                    "H-2",
                    "H-3",
                    "H-4",
                    "H-5",
                    "I-1",
                    "I-2",
                    "I-3",
                    "I-4",
                    "M",
                    "R-1",
                    "R-2",
                    "R-3",
                    "R-3.1",
                    "R-4",
                    "S-1",
                    "S-2",
                    "U"
                  ],
                  "description": "New rooms will be limited to the occupancies provided",
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 27
                  }
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "name": "Seattle HQ",
                  "code": "SEA"
                }
              }
            }
          }
        }
      },
      "Update-Room": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the room"
                },
                "number": {
                  "type": "string",
                  "description": "The room number"
                },
                "description": {
                  "type": "string",
                  "description": "The room description"
                },
                "occupancy": {
                  "type": "string",
                  "description": "The room occupancy classification"
                },
                "area": {
                  "type": "number",
                  "description": "The net area of the room"
                },
                "@floor": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The floor the room belongs to"
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "name": "Circulation",
                  "occupancy": "B",
                  "area": 250,
                  "floor": "f1acf44a-62d2-42f3-8dad-b917de85d75c"
                }
              }
            }
          }
        }
      },
      "Update-Floor": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "gross_floor_area": {
                  "type": "integer"
                },
                "below_grade": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "Update-Address": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": ""
                },
                "address": {
                  "type": "string",
                  "description": "Address line one"
                },
                "extended_address": {
                  "type": "string",
                  "description": "Address line two"
                },
                "locality": {
                  "type": "string",
                  "description": "The neighborhood name"
                },
                "city": {
                  "type": "string"
                },
                "county": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postcode": {
                  "type": "number"
                },
                "country": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string",
                  "description": "IANA timezone ID"
                },
                "offset": {
                  "description": "UTC Offset in seconds",
                  "type": "number"
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "extended_address": "Suite 800"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Address"
    },
    {
      "name": "BACnet"
    },
    {
      "name": "Billing Account"
    },
    {
      "name": "Collector"
    },
    {
      "name": "Controller"
    },
    {
      "name": "Department"
    },
    {
      "name": "Equipment"
    },
    {
      "name": "Floor"
    },
    {
      "name": "Gateway"
    },
    {
      "name": "Invoice"
    },
    {
      "name": "Meter"
    },
    {
      "name": "Network"
    },
    {
      "name": "Payment Source"
    },
    {
      "name": "Point"
    },
    {
      "name": "Preferences"
    },
    {
      "name": "Quota"
    },
    {
      "name": "Report"
    },
    {
      "name": "Report Group"
    },
    {
      "name": "Report Schedule"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Room"
    },
    {
      "name": "Routine"
    },
    {
      "name": "Scheduled Release"
    },
    {
      "name": "Setpoint Reset"
    },
    {
      "name": "Site"
    },
    {
      "name": "Subscription"
    },
    {
      "name": "Tenant"
    },
    {
      "name": "Trend Plot"
    },
    {
      "name": "Trigger"
    },
    {
      "name": "User"
    },
    {
      "name": "User Group"
    },
    {
      "name": "Weather"
    }
  ]
}