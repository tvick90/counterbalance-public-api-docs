{
  "openapi": "3.0.0",
  "info": {
    "title": "Sites",
    "version": "v1.2.2",
    "description": "The Sites API provides endpoints for site and building management, including:\n* Creating & managing sites & associated buildings\n* Creating & managing addresses\n* Viewing current and forecasted weather conditions\n* Viewing timezone details for an IANA Timezone ID\n\n## Site Types\nSites are of one of two types: \n\n* A `building` is a site composed of a single building and can be assigned an address and contacts.\n\n* A `campus` is a high-level collection of buildings. A campus cannot be assigned an addressis or contacts.\n\n## Quotas and Licensing\nSite management is a paid feature. Physical sites are subject to quota availability. Virtual sites and buildings are not measured against a pre-defined quota but require a seperate license. These requirments are outlined in the various endpoint docs.\n\nIf insufficient quota or licensing exists for the specified site type, a `403 Forbidden` error will be thrown and the site will not be created. ",
    "termsOfService": "https://www.counterbalance.io/legal/api-terms",
    "contact": {
      "name": "Taylor Vick",
      "email": "support@counterbalance.io"
    }
  },
  "servers": [
    {
      "url": "https://api.counterbalance.io",
      "description": "Production API"
    }
  ],
  "paths": {
    "/v1/site": {
      "get": {
        "summary": "List Sites",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Sites"
          }
        },
        "operationId": "list-sites",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a list of site objects\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:list`\n\n### Filtering Results\nA combination of one or more query parameters may be used to filter returned data. Query parameters are stacked such that using multiple parameters will result in a narrower data set.\n\nWildcard searches are permitted on all query parameters. Wildcard searches are case insensitive and all data is forced to lowercase for matching purposes. See usage examples below.\n\n<!--\ntitle: \"Site Code Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?code=*MN*\n```\n<!--\ntitle: \"Site Name Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?name=*elementary*\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "code",
            "description": "Filter results by site code. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter results by site name. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter sites by description. Accepts * wildcard searches."
          }
        ],
        "tags": [
          "Site"
        ]
      },
      "post": {
        "summary": "Create Site",
        "operationId": "create-site",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Site"
          }
        },
        "description": "Create a new site object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:create`\n\n> **Heads Up** This endpoint is subject to `site` quota availabilty",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Site"
        },
        "tags": [
          "Site"
        ]
      }
    },
    "/v1/site/{siteId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/siteId"
        }
      ],
      "get": {
        "summary": "Get Site",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Site"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "operationId": "get-site",
        "description": "Retrieve a site object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Site"
        ]
      },
      "patch": {
        "summary": "Update Site",
        "operationId": "update-site",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Site"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Update a site object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Site"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Site"
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete Site",
        "operationId": "delete-site",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Site-Not-Empty"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Delete a site object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:delete`\n\n<!--theme: info -->\n> **Heads Up** Specified site must be void of any associated objects (floors, rooms, equipment, etc) otherwise the delete operation will fail\n\n<!-- theme: danger -->\n> **Danger** This cannot be undone!",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Site"
        ]
      }
    },
    "/v1/site/address": {
      "parameters": [],
      "put": {
        "summary": "Add Address to Site",
        "operationId": "create-address",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "$ref": "#/components/examples/Address-Object"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Address-Already-Exists"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Create a new address object and attach it to a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:update`\n\n### Address Geocoding\nBy default, new addresses are geocoded to determine their GPS coordinates, timezone, and to fill-in various extended properties such as the locality, country, and ZIP or postcode. \n\nGeocoding is an optional process and can be skipped by setting `geocode` to `false` in the request body. If geocoding is skipped, the following additional body parameters become required: `county`, `country`, `postcode`, `timezone`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@site",
            "description": "A valid site UUID for which to assign this address"
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Address"
        },
        "tags": [
          "Address"
        ]
      }
    },
    "/v1/site/address/{addressId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/addressId"
        }
      ],
      "get": {
        "summary": "Get Address",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Address"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "operationId": "get-address",
        "description": "### Synopsis\nRetrieve the details for the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Address"
        ]
      },
      "patch": {
        "summary": "Update Address",
        "operationId": "update-address",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Address"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "Update an address object\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:address:*`,`sites:address:update`",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Address"
        },
        "tags": [
          "Address"
        ]
      },
      "delete": {
        "summary": "Delete Address",
        "operationId": "delete-address",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "Delete an address object\n\n**Required Permissions:** `*`,`sites:*`,`sites:address:*`,`sites:address:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Address"
        ]
      }
    },
    "/v1/site/address/{addressId}/operation": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "A valid address UUID"
        }
      ],
      "post": {
        "summary": "Perform Address Operations",
        "operationId": "address-operations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Address-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "Perform operations on an address\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:address:*`,`sites:address:update`\n\n### Supported Operations\nThe following operations are currently supported:\n\n#### Address Normalization\nAn existing address object can be normalized or re-normalized by specifying the operation as `normalize`. The address' existing lines, city, and state values are used to generate a normalization query and updates are performed based on these values. If normalization data is incorrect, try adjusting these parameters and re-normalizing. \n\nWhen an address is normalized, the following properties are looked up and overridden: `city`,`state`,`latitude`,`longitude`,`postcode`,`locality`,`county`,`country`,`timezone`\n",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "string",
                    "enum": [
                      "normalize"
                    ],
                    "description": "The operation to perform"
                  }
                },
                "required": [
                  "operation"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "operation": "normalize"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Address"
        ]
      }
    },
    "/v1/site/floor": {
      "get": {
        "summary": "List Floors",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Floors"
          }
        },
        "operationId": "list-floors",
        "description": "Retrieve a list of floors\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@siteId"
          }
        ],
        "tags": [
          "Floor"
        ]
      },
      "post": {
        "summary": "Create Floor",
        "operationId": "create-floor",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Floor"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Create a new floor and assign it to a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:create`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Floor"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Floor"
        }
      },
      "parameters": []
    },
    "/v1/site/floor/{floorId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/floorId"
        }
      ],
      "get": {
        "summary": "Get Floor",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Floor"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "operationId": "get-floor",
        "description": "Retrieve a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Floor"
        ]
      },
      "patch": {
        "summary": "Update Floor",
        "operationId": "update-floor",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Floor"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "description": "Update a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Floor"
        },
        "tags": [
          "Floor"
        ]
      },
      "delete": {
        "summary": "Delete Floor",
        "operationId": "delete-floor",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Floor-Not-Empty"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "description": "Delete a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:delete`\n\n<!-- theme: danger -->\n> **Danger** This cannot be undone!",
        "tags": [
          "Floor"
        ]
      }
    },
    "/v1/site/room": {
      "get": {
        "summary": "List Rooms",
        "operationId": "list-rooms",
        "description": "Retrieve a list of rooms\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@siteId"
          },
          {
            "$ref": "#/components/parameters/@floorId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-List-Rooms"
          }
        },
        "tags": [
          "Room"
        ]
      },
      "post": {
        "summary": "Create Room",
        "operationId": "create-room",
        "description": "Create a new room and assign it to a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:create`\n\n### Defining Room Occupancy\nThe room occupancy classification must be specifid in the `occupancy` body parameter. One of the [International Building Code (IBC)](https://buildingcodetrainer.com/building-occupancy-classification-occupancy-types-explained/) occupancy codes is required and all occupancies are considered valid values.\n\n### Defining Room Area\nThe `area` body parameter is required and should contain the net area of the room in localized units (square meters or square feet). Only integer values are permitted.\n\n### Defining Room Volume\nThe room volume can be explicitly provided in the `volume` body parameter. The volume should be expressed in the same localized units as the room area. Only integer values are permitted.\n\nIf the volume is not defined, the `ceiling_height` body parameter, if provided, is used to calculate the room volume using the area specified. ",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Get-Room"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "tags": [
          "Room"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Create-Room"
        }
      }
    },
    "/v1/site/room/{roomId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/roomId"
        }
      ],
      "get": {
        "summary": "Get Room",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Room"
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "operationId": "get-room",
        "description": "Retrieve a room\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Room"
        ]
      },
      "patch": {
        "summary": "Update Room",
        "operationId": "update-room",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Room"
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Update a room\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:room:*`,`sites:room:update`",
        "tags": [
          "Room"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Update-Room"
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete Room",
        "operationId": "delete-room",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "description": "Delete a room\n\n**Required Permissions:** `*`,`sites:*`,`sites:room:*`,`sites:room:delete`\n\n<!-- theme: danger -->\n> _**Heads Up** This cannot be undone!_",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Room"
        ]
      }
    },
    "/v1/site/utilities/geocode": {
      "get": {
        "summary": "Get Geocoding by Query",
        "tags": [
          "Utilities"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Geocode-Search"
          }
        },
        "operationId": "get-geocode",
        "description": "Geocode a search query\n\n**Required Permissions:** `*`,`view:console*`\n\n### Accepted Queries\n*coming soon*",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "query",
            "required": true,
            "description": "A geocode search query"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/utilities/timezone": {
      "get": {
        "summary": "Get Timezone Details",
        "tags": [
          "Utilities"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Timezone-Object"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either an IANA timezone ID, coordinates, or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid parameter combination",
                        "console": "Parameters timezone, coordinates, and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID ... is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-timezone",
        "description": "### Synopsis\nRetrieve timezone details including the current time\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:utilities:*`,`sites:utilities:timezone`\n* Licensed Feature: `sites_base`\n\n### Specifying Coordinates or Address ID\nTimezone details can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n### Specifying am IANA Timezone ID\nTimezone details can be obtained for any Timezone by specifying the IANA timezone ID\n\n<!-- theme: warning-->\n> _Parameters `timezone`, `coordinates` and `@address` are mutually exclusive. Passing more than one will result in an error_\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "timezone",
            "description": "An IANA timezone ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get the timezone for the specified coordinates"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@address",
            "description": "Get the timezone for the specified address ID"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Site-Object": {
        "description": "",
        "type": "object",
        "title": "Site Object",
        "x-tags": [
          "Site"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The site object UUID",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the site object was created",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the site object was last modified",
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "A unique site code or abbreviation",
            "maxLength": 32
          },
          "name": {
            "type": "string",
            "description": "The name of the site object",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "maxLength": 300
          },
          "@address": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "properties": {
              "year_built": {
                "type": "string"
              },
              "floor_count": {
                "type": "integer",
                "readOnly": true
              },
              "room_count": {
                "type": "integer",
                "readOnly": true
              },
              "gross_floor_area": {
                "type": "integer"
              },
              "net_room_area": {
                "type": "integer",
                "readOnly": true
              },
              "classification": {
                "type": "object",
                "properties": {
                  "category": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "type": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "sub_type": {
                    "type": "object",
                    "nullable": true,
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "occupancy": {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "string"
                  },
                  "limits": {
                    "type": "array",
                    "description": "If set, room objects must be one of the occupancies in the given array",
                    "nullable": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Address-Object": {
        "description": "",
        "type": "object",
        "title": "Address Object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "@site": {
            "type": "string",
            "format": "uuid"
          },
          "lines": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "locality": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postcode": {
            "type": "number"
          },
          "country": {
            "type": "string"
          },
          "formatted": {
            "type": "string"
          },
          "geolocation": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "timezone": {
            "type": "string"
          },
          "designations": {
            "type": "object",
            "properties": {
              "primary_mailing": {
                "type": "boolean"
              },
              "primary_billing": {
                "type": "boolean"
              }
            }
          }
        },
        "x-tags": [
          "Address"
        ]
      },
      "Timezone-Object": {
        "description": "",
        "type": "object",
        "title": "Timezone Object",
        "properties": {
          "id": {
            "type": "string"
          },
          "effective_coordinates": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "wall_time": {
                "type": "string"
              },
              "utc_offset": {
                "type": "number"
              },
              "is_dst": {
                "type": "boolean"
              },
              "tag": {
                "type": "string"
              }
            }
          },
          "names": {
            "type": "object",
            "properties": {
              "ISO6391_language_code": {
                "type": "string"
              },
              "generic": {
                "type": "string"
              },
              "standard": {
                "type": "string"
              },
              "daylight": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Utilities"
        ]
      },
      "Floor-Object": {
        "description": "",
        "type": "object",
        "title": "Floor Object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "@site": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "below_grade": {
                "type": "boolean"
              },
              "gross_floor_area": {
                "type": "number",
                "readOnly": true
              },
              "room_count": {
                "type": "number",
                "readOnly": true
              },
              "net_room_area": {
                "type": "number",
                "readOnly": true
              }
            }
          }
        },
        "x-tags": [
          "Floor"
        ]
      },
      "Room-Object": {
        "description": "",
        "type": "object",
        "title": "Room Object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "@site": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "@floor": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "occupancy": {
                "type": "string"
              },
              "area": {
                "type": "number"
              },
              "ceiling_height": {
                "type": "number"
              },
              "volume": {
                "type": "integer"
              }
            }
          }
        },
        "x-tags": [
          "Room"
        ]
      },
      "Geocode-Search": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "$ref": "#/components/examples/Geocode-Search"
          }
        },
        "properties": {
          "name": {
            "type": "string"
          },
          "geolocation": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "geometry": {
            "type": "string",
            "format": "uuid"
          }
        },
        "title": "Geocode Search",
        "x-tags": [
          "Utilities"
        ]
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "type": "http",
        "scheme": "bearer",
        "description": ""
      }
    },
    "parameters": {
      "siteId": {
        "name": "siteId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid site UUID"
      },
      "addressId": {
        "name": "addressId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid address UUID"
      },
      "floorId": {
        "name": "floorId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid floor UUID"
      },
      "roomId": {
        "name": "roomId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid room UUID"
      },
      "@siteId": {
        "name": "@site",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated site UUID"
      },
      "@floorId": {
        "name": "@floor",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated floor UUID"
      }
    },
    "examples": {
      "Site-Object-List": {
        "value": {
          "count": 4,
          "index": [
            "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
            "723a9c16-1790-4386-b17b-54bc9ed6d901",
            "82478e3a-a212-41bf-9e2b-7522a1504a6b",
            "c1b5593a-6f59-46fa-ae38-15e4c4262ffa"
          ],
          "data": [
            {
              "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
              "created": "2021-02-05T03:13:05+0000",
              "code": "MSP",
              "name": "Minneapolis Office",
              "description": "",
              "address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
              "attributes": {
                "year_built": "1927",
                "floor_count": 1,
                "room_count": 8,
                "gross_floor_area": 18000,
                "net_room_area": 17850,
                "net_room_volume": 0
              }
            },
            {
              "id": "723a9c16-1790-4386-b17b-54bc9ed6d901",
              "created": "2021-02-05T15:11:48+0000",
              "code": "SFO",
              "name": "San Francisco Office",
              "description": "",
              "address": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
              "attributes": {
                "year_built": "2005",
                "floor_count": 0,
                "room_count": 0,
                "gross_floor_area": 0,
                "net_room_area": 0,
                "net_room_volume": 0
              }
            },
            {
              "id": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "created": "2021-02-05T03:00:27+0000",
              "code": "SEA",
              "name": "Seattle Office",
              "description": "",
              "address": "032183ea-087d-43a6-94e8-5688ef909771",
              "attributes": {
                "year_built": "1945",
                "floor_count": 27,
                "room_count": 241,
                "gross_floor_area": 570000,
                "net_room_area": 570000,
                "net_room_volume": 0
              }
            },
            {
              "id": "c1b5593a-6f59-46fa-ae38-15e4c4262ffa",
              "created": "2021-02-06T05:51:29+0000",
              "code": "AUS",
              "name": "Austin Office",
              "description": "",
              "address": "8aac0478-7b6f-448f-952b-dd710a94ee7a",
              "attributes": {
                "year_built": "1997",
                "floor_count": 2,
                "room_count": 36,
                "gross_floor_area": 18560,
                "net_room_area": 18000,
                "net_room_volume": 0
              }
            }
          ]
        }
      },
      "Create-Site-Body": {
        "value": {
          "name": "Minneapolis Office",
          "year_built": "1927",
          "description": "Minneapolis branch office",
          "category": 7,
          "type": 1,
          "sub_type": 0
        }
      },
      "Site-Object": {
        "value": {
          "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "created": "2021-02-05T03:13:05+0000",
          "last_modified": null,
          "code": "MSP",
          "name": "Minneapolis Office",
          "description": "",
          "@address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
          "contacts": null,
          "attributes": {
            "year_built": "",
            "floor_count": 0,
            "room_count": 0,
            "gross_floor_area": 0,
            "net_room_area": 0,
            "net_room_volume": 0
          }
        }
      },
      "Floor-Object": {
        "value": {
          "id": "38082b4a-6e6c-46ac-ba44-9de02d3323c0",
          "created": "2021-04-12T17:08:59+0000",
          "last_modified": "2021-04-12T17:11:23+0000",
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "code": "Basement",
          "description": "Mechanical, building storage",
          "attributes": {
            "below_grade": true,
            "gross_floor_area": 16000,
            "room_count": 5,
            "net_room_area": 5480,
            "net_room_volume": 0
          }
        }
      },
      "Create-Floor-Body": {
        "value": {
          "code": "Floor 1",
          "description": "First floor",
          "gross_floor_area": 18000,
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "below_grade": false
        }
      },
      "Floor-Object-List": {
        "value": {
          "count": 4,
          "index": [
            "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
            "723a9c16-1790-4386-b17b-54bc9ed6d901",
            "82478e3a-a212-41bf-9e2b-7522a1504a6b",
            "c1b5593a-6f59-46fa-ae38-15e4c4262ffa"
          ],
          "data": [
            {
              "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
              "created": "2021-02-05T03:13:05+0000",
              "code": "MSP",
              "name": "Minneapolis Office",
              "description": "",
              "address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
              "attributes": {
                "year_built": "1927",
                "floor_count": 1,
                "room_count": 8,
                "gross_floor_area": 18000,
                "net_room_area": 17850,
                "net_room_volume": 0
              }
            },
            {
              "id": "723a9c16-1790-4386-b17b-54bc9ed6d901",
              "created": "2021-02-05T15:11:48+0000",
              "code": "SFO",
              "name": "San Francisco Office",
              "description": "",
              "address": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
              "attributes": {
                "year_built": "2005",
                "floor_count": 0,
                "room_count": 0,
                "gross_floor_area": 0,
                "net_room_area": 0,
                "net_room_volume": 0
              }
            },
            {
              "id": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "created": "2021-02-05T03:00:27+0000",
              "code": "SEA",
              "name": "Seattle Office",
              "description": "",
              "address": "032183ea-087d-43a6-94e8-5688ef909771",
              "attributes": {
                "year_built": "1945",
                "floor_count": 27,
                "room_count": 241,
                "gross_floor_area": 570000,
                "net_room_area": 570000,
                "net_room_volume": 0
              }
            },
            {
              "id": "c1b5593a-6f59-46fa-ae38-15e4c4262ffa",
              "created": "2021-02-06T05:51:29+0000",
              "code": "AUS",
              "name": "Austin Office",
              "description": "",
              "address": "8aac0478-7b6f-448f-952b-dd710a94ee7a",
              "attributes": {
                "year_built": "1997",
                "floor_count": 2,
                "room_count": 36,
                "gross_floor_area": 18560,
                "net_room_area": 18000,
                "net_room_volume": 0
              }
            }
          ]
        }
      },
      "Create-Room-Body": {
        "value": {
          "name": "Open Office",
          "number": "100",
          "description": "Open office & collaboration area",
          "area": 8900,
          "@floor": "d2fa3901-8649-46dc-bbfb-4864007895da",
          "occupancy": "B"
        }
      },
      "Room-Object": {
        "value": {
          "id": "61747b47-9828-4294-8602-8ef445e17240",
          "created": "2021-04-12T18:22:40+0000",
          "last_modified": "2021-04-12T18:54:18+0000",
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "@floor": "38082b4a-6e6c-46ac-ba44-9de02d3323c0",
          "number": "1",
          "name": "Circulation",
          "description": "Hall area",
          "attributes": {
            "occupancy": "B",
            "area": 150,
            "ceiling_height": 9,
            "volume": 1350
          }
        }
      },
      "Room-Object-List": {
        "value": {
          "description": "Example shared example",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "Address-Object": {
        "value": {
          "id": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
          "created": "2021-02-05T16:10:54+0000",
          "last_modified": null,
          "@site": "723a9c16-1790-4386-b17b-54bc9ed6d901",
          "lines": [
            "600 Montgomery"
          ],
          "locality": "Downtown San Francisco",
          "city": "San Francisco",
          "county": "San Francisco",
          "state": "CA",
          "postcode": 94111,
          "country": "USA",
          "formatted": "600 Montgomery, San Francisco, CA 94111",
          "geolocation": {
            "latitude": 37.79513,
            "longitude": -122.40299
          },
          "timezone": "America/Los_Angeles",
          "designations": {
            "primary_mailing": false,
            "primary_billing": false
          }
        }
      },
      "Timezone-Object": {
        "value": {
          "id": "America/Los_Angeles",
          "effective_coordinates": [
            "37.79513",
            "-122.40299"
          ],
          "current": {
            "wall_time": "2021-04-13T06:59:36+0000",
            "utc_offset": -25200,
            "is_dst": false,
            "tag": "PDT"
          },
          "names": {
            "ISO6391_language_code": "en",
            "generic": "Pacific Time",
            "standard": "Pacific Standard Time",
            "daylight": "Pacific Daylight Time"
          }
        }
      },
      "Geocode-Search": {
        "value": {
          "name": "Seattle, WA 98119",
          "geolocation": {
            "latitude": 47.63777,
            "longitude": -122.36731
          },
          "geometry": "00005557-4100-2800-0000-00000bf9eda4"
        }
      }
    },
    "responses": {
      "404-Site-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site not found",
                    "console": "The site ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "404-Floor-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Floor not found",
                    "console": "The floor ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "404-Room-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Room not found",
                    "console": "The room ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Site-Not-Empty": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site is not empty",
                    "console": "The site ID ... cannot be deleted while it contains floors. Delete the associated floorsand try again.",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Floor-Not-Empty": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Floor not empty",
                    "console": "The floor ID ... cannot be deleted while it contains rooms. Delete the associated rooms and try again.",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Floor": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Floor-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Floor-Object"
              }
            }
          }
        }
      },
      "200-Get-Room": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Room-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Room-Object"
              }
            }
          }
        }
      },
      "200-Get-Site": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Site-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Site-Object"
              }
            }
          }
        }
      },
      "200-Get-Address": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Address-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Address-Object"
              }
            }
          }
        }
      },
      "404-Address-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Address not found",
                    "console": "The address ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Address-Already-Exists": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site already has an address",
                    "console": "Update or delete the existing address",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "409-No-Address-Geocoding": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Invalid Geocoding": {
                "value": {
                  "error": {
                    "message": "Invalid address geocoding",
                    "console": "The address ID ... is not geocoded and we have no coordinates to check",
                    "code": 409
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Timezone-Object": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Timezone-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Timezone-Object"
              }
            }
          }
        }
      },
      "200-List-Sites": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "description": "The number of site objects returned"
                },
                "index": {
                  "type": "array",
                  "description": "An array of the returned site object UUIDs",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "uniqueItems": true,
                  "description": "An array of site objects",
                  "items": {
                    "$ref": "#/components/schemas/Site-Object"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Site-Object-List"
              }
            }
          }
        }
      },
      "200-List-Floors": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "description": "The number of floor objects returned"
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "description": "An array of floor objects",
                  "items": {
                    "$ref": "#/components/schemas/Floor-Object"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Floor-Object-List"
              }
            }
          }
        }
      },
      "200-List-Rooms": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "The number of room objects returned"
                },
                "index": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "description": "An array of room objects",
                  "items": {
                    "$ref": "#/components/schemas/Room-Object"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Room-Object-List"
              }
            }
          }
        }
      },
      "200-Geocode-Search": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Geocode-Search"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Geocode-Search"
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "Create-Site": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "The name of the new site"
                },
                "code": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "A unique code to identify the site"
                },
                "description": {
                  "type": "string",
                  "maxLength": 300,
                  "description": "A description of the site"
                },
                "year_built": {
                  "type": "string"
                },
                "category": {
                  "type": "integer"
                },
                "type": {
                  "type": "integer"
                },
                "sub_type": {
                  "type": "integer"
                }
              },
              "required": [
                "name",
                "category",
                "type"
              ]
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Create-Site-Body"
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "Create-Floor": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "minLength": 1,
                  "description": "A unique code for the floor",
                  "example": "Floor 1, Main Floor, Basement"
                },
                "description": {
                  "type": "string",
                  "minLength": 1
                },
                "gross_floor_area": {
                  "type": "number"
                },
                "below_grade": {
                  "type": "boolean",
                  "description": "Indicate if the floor is below grade. Default is `false`"
                },
                "@site": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A valid site UUID that will contain this floor"
                }
              },
              "required": [
                "code",
                "@site"
              ]
            },
            "examples": {
              "Example": {
                "$ref": "#/components/examples/Create-Floor-Body"
              }
            }
          }
        }
      },
      "Create-Room": {
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "number": {
                  "type": "string",
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "minLength": 1
                },
                "area": {
                  "type": "number",
                  "description": "The net area of the room in localized units (integers only)",
                  "format": "double"
                },
                "@floor": {
                  "type": "string",
                  "minLength": 1,
                  "format": "uuid",
                  "description": "A valid floor UUID that will contain this room"
                },
                "occupancy": {
                  "type": "string",
                  "minLength": 1,
                  "description": "The IBC occupancy classification of this room",
                  "enum": [
                    "A-1",
                    "A-2",
                    "A-3",
                    "A-4",
                    "A-5",
                    "B",
                    "E",
                    "F-1",
                    "F-2",
                    "H-1",
                    "H-2",
                    "H-3",
                    "H-4",
                    "H-5",
                    "I-1",
                    "I-2",
                    "I-3",
                    "I-4",
                    "M",
                    "R-1",
                    "R-2",
                    "R-3",
                    "R-3.1",
                    "R-4",
                    "S-1",
                    "S-2",
                    "U"
                  ]
                },
                "ceiling_height": {
                  "type": "number"
                },
                "volume": {
                  "type": "integer"
                }
              },
              "required": [
                "name",
                "number",
                "area",
                "@floor",
                "occupancy"
              ]
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Create-Room-Body"
              }
            }
          }
        }
      },
      "Create-Address": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "maxLength": 300,
                  "description": "A description of the address"
                },
                "street": {
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 1,
                  "description": "An array of address lines, up to two",
                  "items": {}
                },
                "city": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "The city name"
                },
                "state": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "The state name abbreviation"
                },
                "locality": {
                  "type": "string",
                  "maxLength": 96,
                  "description": "The name of the neighborhood"
                },
                "geocode": {
                  "type": "boolean",
                  "description": "Switch to enable/disable address geocoding"
                },
                "county": {
                  "type": "string",
                  "description": "The name of the county",
                  "maxLength": 120
                },
                "country": {
                  "type": "string",
                  "description": "The ISO 3166 alpha-3 country code (USA, CAN, etc)",
                  "maxLength": 3
                },
                "postcode": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "*Required if Geocode is disabled*"
                },
                "timezone": {
                  "type": "string",
                  "maxLength": 90,
                  "description": "An IANA timezone code for the address"
                },
                "latitude": {
                  "type": "string",
                  "description": "The longitude value of the address"
                },
                "longitude": {
                  "type": "string",
                  "description": "The latitude value of the address"
                }
              },
              "required": [
                "street",
                "city",
                "state"
              ]
            },
            "examples": {
              "Example with Geocoding": {
                "value": {
                  "description": "Main Address",
                  "street": [
                    "400 Broad Street"
                  ],
                  "city": "Seattle",
                  "state": "WA"
                }
              },
              "Example without Geocoding": {
                "value": {
                  "geocode": false,
                  "description": "Main Address",
                  "street": [
                    "400 Broad Street"
                  ],
                  "city": "Seattle",
                  "state": "WA",
                  "locality": "Lower Queen Anne",
                  "county": "King",
                  "country": "USA",
                  "postcode": "98119",
                  "timezone": "America/Los_Angeles"
                }
              }
            }
          }
        }
      },
      "Update-Site": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "The name of the site"
                },
                "code": {
                  "type": "string",
                  "description": "The site's unique ID code",
                  "maxLength": 32
                },
                "description": {
                  "type": "string",
                  "description": "The description of the site",
                  "maxLength": 300
                },
                "year_built": {
                  "type": "string"
                },
                "category": {
                  "type": "integer"
                },
                "type": {
                  "type": "integer"
                },
                "sub_type": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "name": "Seattle HQ",
                  "code": "SEA"
                }
              }
            }
          }
        }
      },
      "Update-Room": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the room"
                },
                "number": {
                  "type": "string",
                  "description": "The room number"
                },
                "description": {
                  "type": "string",
                  "description": "The room description"
                },
                "occupancy": {
                  "type": "string",
                  "description": "The room occupancy classification"
                },
                "area": {
                  "type": "number",
                  "description": "The net area of the room"
                },
                "@floor": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The floor the room belongs to"
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "name": "Circulation",
                  "occupancy": "B",
                  "area": 250,
                  "floor": "f1acf44a-62d2-42f3-8dad-b917de85d75c"
                }
              }
            }
          }
        }
      },
      "Update-Floor": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "gross_floor_area": {
                  "type": "integer"
                },
                "below_grade": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "Update-Address": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": ""
                },
                "address": {
                  "type": "string",
                  "description": "Address line one"
                },
                "extended_address": {
                  "type": "string",
                  "description": "Address line two"
                },
                "locality": {
                  "type": "string",
                  "description": "The neighborhood name"
                },
                "city": {
                  "type": "string"
                },
                "county": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postcode": {
                  "type": "number"
                },
                "country": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string",
                  "description": "IANA timezone ID"
                },
                "offset": {
                  "description": "UTC Offset in seconds",
                  "type": "number"
                }
              }
            },
            "examples": {
              "Example": {
                "value": {
                  "extended_address": "Suite 800"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Site"
    },
    {
      "name": "Address"
    },
    {
      "name": "Floor"
    },
    {
      "name": "Room"
    },
    {
      "name": "Utilities"
    },
    {
      "name": "Weather"
    }
  ]
}