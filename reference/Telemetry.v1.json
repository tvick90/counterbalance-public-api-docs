{
  "x-stoplight": {
    "docs": {
      "showModels": false
    }
  },
  "openapi": "3.0.0",
  "info": {
    "title": "Telemetry & Data Collection",
    "version": "1.1.0",
    "description": "Telemetry and logging allows the collection of data from gateways and on-site systems"
  },
  "servers": [
    {
      "url": "https://api.counterbalance.io",
      "description": "Production API"
    }
  ],
  "paths": {
    "/v1/telemetry/point": {
      "get": {
        "summary": "List Points",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Point-Listing"
                },
                "examples": {
                  "Response": {
                    "$ref": "#/components/examples/Get-Point-List"
                  }
                }
              }
            }
          }
        },
        "operationId": "list-points",
        "description": "Retrieve a list of points\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:list`",
        "tags": [
          "Points"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@siteId"
          },
          {
            "$ref": "#/components/parameters/@controllerId"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      },
      "post": {
        "summary": "Create Point",
        "operationId": "create-point",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Point-Object"
          },
          "400": {
            "$ref": "#/components/responses/400-Invalid-Scope"
          },
          "404": {
            "$ref": "#/components/responses/404-Controller-Not-Found"
          }
        },
        "description": "Create a new point definition\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:create`",
        "tags": [
          "Points"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "object_type": {
                    "type": "number",
                    "enum": [
                      "0",
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "14",
                      "17",
                      "19"
                    ],
                    "format": "double"
                  },
                  "instance": {
                    "type": "string"
                  },
                  "site": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "controller": {
                    "type": "string",
                    "format": "uuid",
                    "example": "48f6bef2-1d57-4333-b9af-be687876e997"
                  }
                },
                "required": [
                  "name",
                  "object_type",
                  "instance",
                  "controller"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      },
      "parameters": []
    },
    "/v1/telemetry/point/{pointId}": {
      "parameters": [
        {
          "name": "pointId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "168a3e32-996f-410a-a06c-c4cdc10fa362"
          },
          "description": "A valid point UUID"
        }
      ],
      "get": {
        "summary": "Get Point",
        "tags": [
          "Points"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Point-Object-Extended"
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "operationId": "get-point",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "online",
            "description": "Fetch the latest BACnet data for the point"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a point\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:read`\n\n### Online BACnet Data\nEach BACnet object type will return a variable BACnet response body depending on the parameters present and supported by the target field controller. \n\nSeveral response examples are provided to illustrate the variety of parameters available."
      },
      "delete": {
        "summary": "Delete Point",
        "operationId": "delete-point",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "tags": [
          "Points"
        ],
        "description": "Delete a point\n\n**Required Permissions** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Point",
        "operationId": "update-point",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Point-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "description": "Update a point\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:update`\n\n<!-- theme: info -->\n> **Heads Up** This endpoint will only update the Counterbalance definition of a defined point. This will not update the BACnet definition on the device. \n> \n> _Future endpoints are planned to permit online BACnet updates._",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Points"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the point"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the point"
                  },
                  "resolution": {
                    "type": "string",
                    "description": "The display and collection resolution for analog points (decimal places)"
                  },
                  "@site": {
                    "type": "string",
                    "format": "uuid",
                    "description": "A valid site UUID to assign the point to"
                  },
                  "instance_id": {
                    "type": "number",
                    "description": "The BACnet object instance ID"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "SEA.RMT",
                    "description": "ROOM TEMP",
                    "site": "82478e3a-a212-41bf-9e2b-7522a1504a6b"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      }
    },
    "/v1/telemetry/collector": {
      "get": {
        "summary": "List Collectors",
        "tags": [
          "Collectors"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Collector-Listing"
          }
        },
        "operationId": "list-collectors",
        "description": "Retrieve a list of point collectors\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/@controllerId"
          },
          {
            "$ref": "#/components/parameters/@gatewayId"
          },
          {
            "$ref": "#/components/parameters/@siteId"
          },
          {
            "$ref": "#/components/parameters/@pointId"
          }
        ]
      },
      "post": {
        "summary": "Create Collector",
        "operationId": "create-collector",
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-Create-Collector"
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "description": "Create a point collector\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:create`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "tags": [
          "Collectors"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@point": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The UUID of the point to be collected"
                  },
                  "interval": {
                    "type": "number",
                    "format": "double",
                    "default": 300,
                    "enum": [
                      300,
                      900,
                      1800,
                      3600
                    ],
                    "description": "The frequency in which to sample the point"
                  }
                },
                "required": [
                  "@point"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "@point": "52aa66de-e553-4383-9e16-52bfcd0efb0f",
                    "interval": 300
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/v1/telemetry/collector/{collectorId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/collectorId"
        }
      ],
      "get": {
        "summary": "Get Collector",
        "tags": [
          "Collectors"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Collector"
          },
          "404": {
            "$ref": "#/components/responses/404-Collector-Not-Found"
          }
        },
        "operationId": "get-collector",
        "description": "Retreieve a point collector\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ]
      },
      "delete": {
        "summary": "Delete Collector",
        "operationId": "delete-collector",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true
                },
                "examples": {}
              }
            }
          }
        },
        "tags": [
          "Collectors"
        ],
        "description": "Delete a point collector\n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:delete`",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/telemetry/collector/{collectorId}/sample": {
      "parameters": [
        {
          "$ref": "#/components/parameters/collectorId"
        }
      ],
      "get": {
        "summary": "Sample Collector Data",
        "tags": [
          "Collectors"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Collector-Samples"
          },
          "404": {
            "$ref": "#/components/responses/404-Collector-Not-Found"
          }
        },
        "operationId": "get-collector-samples",
        "description": "Retrieve data samples for the specified collector \n\n**Required Permissions:** `*`,`telemetry:*`,`telemetry:collector:*`,`telemetry:collector:sample`\n\n### Adjusting the Sample Window\nBy default, if no query parameters are specified, the last 12 hours of sample data is returned. \n\nThe starting point and ending point of the sample window can be adjust with query parameters in two ways. \n\n#### Using a Fixed Date Range\nTo retrieve sample data for a fixed period of time (between two dates), pass both the `start` and `end` parameters as the unix timestamps for the desired dates.\n\nFor example, for sample data between 8AM on March 1st, 2021 to 8PM on March 5th, 2021, convert these dates and times to their corresponding UNIX timestamps and pass them in the corresponding parameter.\n\n```\nHTTP/1.1 https://api.counterbalance.io/.../sample?start=1614700800&end=1615005120\n```\n\n#### Using a Relative Date Range\n\nTo retrieve sample data for a relative period of time _(last 7 days, last 2 hours, etc)_, the `duration` parameter is used to dynamically set the window start or end point.\n\nWhen `duration` is passed, the `start` and `end` parameters become mutually exclusive. The relative range can only be set by specifying one or the other (or neither). If neither `start` nor `end` are passed, the starting point is set relative to the current date and time.\n\nIf `end` is specified, the relative start is calculated and samples _up to_ the specified end date are returned.\n\nIf `start` is specified, the relative end is calculated and samples _since_ the specified start date are returned\n\nFor example, for sample data for the 24 hours ending at 8AM on March 1st, 2021, convert the end date and time to a UNIX timestamp and specify the desired duration.\n\n```\nHTTP/1.1 https://api.counterbalance.io/.../sample?start=1614700800\n```\n\n#### Using Start Only\nTo retrieve sample data for a relative period of time _(last 7 days, last 2 hours, etc)_, the `duration` parameter is used to dynamically set a window start or end point.\n\nWhen `duration` is passwed, the `start` and `end` parameters become mutually exclusive and the relative range can only be set by specifying one or the other (or neither).\n\nThe `end` paramater is optional. The current date and time will be used if no end is explicitly set.\n\nFor example, for sample data for the 24 hours ending at 8AM on March 1st, 2021, convert the end date and time to a UNIX timestamp and specify the desired duration.\n\n```\nHTTP/1.1 https://api.counterbalance.io/.../sample?start=1614700800\n```\n",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "start",
            "description": "Specify the timestamp for the historic point in time where a sample window begins (left side of the X-axis)"
          },
          {
            "schema": {
              "type": "number",
              "default": "now"
            },
            "in": "query",
            "name": "end",
            "description": "Specify the timestamp where a sample window ends (right side of the X-axis)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "duration",
            "description": "The length of a relative sample window in seconds"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/telemetry/datapoint/{pointId}/command": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pointId"
        }
      ],
      "put": {
        "summary": "Command Point",
        "operationId": "command-point",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "description": "Indicates the status of the request, produced by the gateway"
                    }
                  },
                  "required": [
                    "status"
                  ]
                },
                "examples": {
                  "Response Success": {
                    "value": {
                      "status": true
                    }
                  },
                  "Response Fail": {
                    "value": {
                      "status": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Parameters": {
                    "value": {
                      "error": {
                        "message": "One or more required parameters are missing",
                        "console": "Check the request body and try again",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  },
                  "Invalid Operation": {
                    "value": {
                      "error": {
                        "message": "Invalid operation requested",
                        "console": "Only command and relinquish are supported",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  },
                  "Point Not Commandable": {
                    "value": {
                      "error": {
                        "message": "Datapoint not commandable",
                        "console": "This datapoint is not commandable",
                        "code": 400
                      },
                      "logging_hash": "..."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Point-Not-Found"
          }
        },
        "tags": [
          "Points"
        ],
        "description": "Command or release a point\n\n**Required Permisions:** `*`,`telemetry:*`,`telemetry:datapoint:*`,`telemetry:datapoint:command`\n\n### Commandable Points\nThe table below defines the BACnet object types compatible with this endpoint. Support for enumerated values is planned for a future release.\n\n| Object Type | Description |\n|-----|---------------|\n| `1` | Analog Output |\n| `2` | Analog Value |\n| `4` | Binary Output |\n| `5` | Binary Value |\n\n### Supported Command Priorities\nAll sixteen BACnet command priorities are supported. \n\n### Command vs Relinquish\nThe `operation` body parameter accepts two values: `command` or `relinquish`\n\n#### Command a New Value\nTo command a data point to a new value, set `operation` to `command` in the request body and include the desired priority and new value. The new value will be added to the command priority array at the requested priority and any previous value at the same priority is overwritten. \n\n#### Relinqush a Set Value\nTo relinquish a command priority, set `operation` to `relinquish` in the request body and include the desired priority. The requested priority will be set to _null_ in the command priority array.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Content-Type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Command-Point-Request-Body"
              },
              "examples": {
                "Command Point Example": {
                  "$ref": "#/components/examples/Put-Command-Point"
                },
                "Relinquish Point Example": {
                  "$ref": "#/components/examples/Put-Relinquish-Point"
                }
              }
            }
          },
          "description": "Request body subscription"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Get-Collector-Samples-Response-Body": {
        "description": "",
        "type": "object",
        "title": "Get Collector Samples",
        "properties": {
          "count": {
            "type": "number"
          },
          "range": {
            "type": "object",
            "properties": {
              "start": {
                "type": "number"
              },
              "end": {
                "type": "number"
              }
            }
          },
          "integrity": {
            "type": "object",
            "properties": {
              "sample_duration": {
                "type": "number"
              },
              "expected_samples": {
                "type": "number"
              },
              "missing_samples": {
                "type": "number"
              },
              "quality": {
                "type": "number"
              }
            }
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "number"
                },
                "feedback_value": {},
                "state_text": {},
                "event_state": {
                  "type": "string"
                },
                "priority_array": {},
                "status_flags": {
                  "type": "object",
                  "properties": {
                    "fault": {
                      "type": "boolean"
                    },
                    "in_alarm": {
                      "type": "boolean"
                    },
                    "overridden": {
                      "type": "boolean"
                    },
                    "out_of_service": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Command-Point-Request-Body": {
        "description": "",
        "type": "object",
        "title": "Command Point Request Body",
        "properties": {
          "operation": {
            "type": "string",
            "minLength": 1,
            "description": "The desired operation, either command or relinquish",
            "enum": [
              "command",
              "relinquish"
            ]
          },
          "value": {
            "type": "number"
          },
          "priority": {
            "type": "number",
            "description": "The target command priority",
            "format": "double",
            "example": 8,
            "minimum": 1,
            "maximum": 16
          }
        },
        "required": [
          "operation",
          "priority"
        ]
      },
      "Point-Details": {
        "description": "",
        "type": "object",
        "title": "Point Object",
        "properties": {
          "id": {
            "type": "string"
          },
          "@controller": {
            "type": "string",
            "format": "uuid"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "instance_id": {
            "type": "number"
          },
          "object_type": {
            "type": "number"
          },
          "collector_count": {
            "type": "integer",
            "minimum": 0,
            "maximum": 16
          },
          "@site": {
            "type": "string",
            "format": "uuid"
          },
          "is_online": {
            "type": "boolean"
          },
          "bacnet": {
            "type": "object",
            "properties": {
              "object": {
                "type": "object",
                "properties": {
                  "instance": {
                    "type": "number"
                  },
                  "type": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "telemetry": {
                "type": "object",
                "properties": {
                  "present_value": {
                    "type": "number"
                  },
                  "reliability": {
                    "type": "string"
                  },
                  "device_type": {
                    "type": "string"
                  },
                  "event_state": {
                    "type": "string"
                  },
                  "state_text": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "polarity": {
                    "type": "string"
                  },
                  "feedback_value": {
                    "type": "number"
                  },
                  "relinquish_default": {
                    "type": "number"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "in_alarm": {
                    "type": "boolean"
                  },
                  "fault": {
                    "type": "boolean"
                  },
                  "out_of_service": {
                    "type": "boolean"
                  },
                  "overridden": {
                    "type": "boolean"
                  }
                }
              },
              "priority_array": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "alarming": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "acked_transitions": {
                    "type": "object",
                    "properties": {
                      "to_normal": {
                        "type": "boolean"
                      },
                      "to_offnormal": {
                        "type": "boolean"
                      },
                      "to_fault": {
                        "type": "boolean"
                      }
                    }
                  },
                  "notify": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "notification_class": {
                        "type": "number"
                      }
                    }
                  },
                  "time_delay": {
                    "type": "number"
                  }
                }
              },
              "totalization": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "elapsed_active_time": {
                    "type": "number"
                  },
                  "last_reset": {
                    "type": "number"
                  },
                  "ealpsed_inactive_time": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      },
      "Point-Listing": {
        "description": "",
        "type": "object",
        "title": "Point Listing",
        "properties": {
          "count": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "uniqueItems": false,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "controller": {
                  "type": "string"
                },
                "created": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "object_type": {
                  "type": "number"
                },
                "instance_id": {
                  "type": "number"
                },
                "site": {
                  "type": "string"
                },
                "bacnet": {}
              }
            }
          }
        }
      },
      "Collector-Details": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "title": "Collector Details",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "interval": {
            "enum": [
              300,
              600,
              900
            ],
            "type": "integer"
          },
          "sample_count": {
            "type": "integer"
          },
          "source": {
            "type": "object",
            "properties": {
              "point": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "object_type": {
                    "type": "integer"
                  },
                  "instance_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "controller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "device_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "gateway": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                }
              }
            }
          },
          "@site": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      }
    },
    "parameters": {
      "pointId": {
        "name": "pointId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "168a3e32-996f-410a-a06c-c4cdc10fa362"
        },
        "description": "A valid point UUID"
      },
      "collectorId": {
        "name": "collectorId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid collector UUID"
      },
      "authorization": {
        "name": "authorization",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "@controllerId": {
        "name": "@controller",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated controller UUID"
      },
      "@siteId": {
        "name": "@site",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated site UUID"
      },
      "@gatewayId": {
        "name": "@gateway",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated gateway UUID"
      },
      "@pointId": {
        "name": "@point",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated point UUID"
      },
      "Content-Type": {
        "name": "Content-Type",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "default": "application/json",
          "example": "application/json"
        },
        "description": "application/json"
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "type": "http",
        "scheme": "bearer",
        "description": ""
      }
    },
    "responses": {
      "400-Invalid-Scope": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Invalid object type",
                    "console": "The object type specified is invalid",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "404-Controller-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Controller not found",
                    "console": "Please check the controller ID and try your request again",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Collector-Samples": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Get-Collector-Samples-Response-Body"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Collector-Samples"
              }
            }
          }
        }
      },
      "404-Collector-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Collector not found",
                    "console": "Please check the collector ID and try your request again",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Non-Commandable-Point": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Datapoint not commandable",
                    "console": "string",
                    "code": 0
                  },
                  "logging_hash": null
                }
              }
            }
          }
        }
      },
      "404-Point-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Point not found",
                    "console": "Please check the point ID and try your request again",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Point-Object": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Point-Details"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Analog-Input-Point"
              }
            }
          }
        }
      },
      "200-Point-Object-Extended": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Point-Details"
            },
            "examples": {
              "Analog Input": {
                "$ref": "#/components/examples/Get-Analog-Input-Point"
              },
              "Analog Input Online": {
                "$ref": "#/components/examples/Get-Analog-Input-Point-Online"
              },
              "Binary Output Online": {
                "$ref": "#/components/examples/Get-Binary-Output-Point-Online"
              }
            }
          }
        }
      },
      "200-Get-Collector": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Collector-Details"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Collector-Details"
              }
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "application/json"
          }
        }
      },
      "201-Create-Collector": {
        "description": "Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Collector-Details"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Collector-Details"
              }
            }
          }
        }
      },
      "200-Get-Collector-Listing": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "readOnly": true
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Collector-Details"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "value": {
                  "count": 1,
                  "data": [
                    {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "created": "2019-08-24T14:15:22Z",
                      "expires": null,
                      "interval": 300,
                      "sample_count": 0,
                      "source": {
                        "point": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "object_type": 0,
                          "instance_id": 0,
                          "name": "string",
                          "description": "string"
                        },
                        "controller": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "device_id": 0,
                          "name": "string"
                        },
                        "gateway": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08"
                        }
                      },
                      "@site": "451f769d-1122-4c11-a645-7d2ed505aa0b"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "Get-Collector-Samples": {
        "value": {
          "count": 335,
          "range": {
            "start": 1614163800,
            "end": 1614264720
          },
          "integrity": {
            "sample_duration": 100920,
            "expected_samples": 336,
            "missing_samples": 1,
            "quality": 99
          },
          "data": [
            {
              "id": "6fc988a0f34126693318d2df9247f8cc",
              "timestamp": "1614264600",
              "value": 62.6,
              "feedback_value": null,
              "state_text": null,
              "event_state": "normal",
              "priority_array": null,
              "status_flags": {
                "fault": false,
                "in_alarm": false,
                "overridden": false,
                "out_of_service": false
              }
            },
            {
              "id": "bbd4e6fb74ad710553100aace78636ce",
              "timestamp": "1614264300",
              "value": 62.6,
              "feedback_value": null,
              "state_text": null,
              "event_state": "normal",
              "priority_array": null,
              "status_flags": {
                "fault": false,
                "in_alarm": false,
                "overridden": false,
                "out_of_service": false
              }
            }
          ]
        }
      },
      "Put-Relinquish-Point": {
        "value": {
          "operation": "relinquish",
          "priority": 8
        }
      },
      "Put-Command-Point": {
        "value": {
          "operation": "command",
          "value": 1,
          "priority": 8
        }
      },
      "Get-Analog-Input-Point-Online": {
        "value": {
          "id": "139e612c-83fa-4cc9-8634-834395899346",
          "@controller": "d1ae9060-b89c-48e8-abae-0f78d8f6af9d",
          "created": "2021-06-22T01:36:30+0000",
          "name": "SEA.AH1.SAT",
          "description": "AH-1 SUPPLY TEMPERATURE",
          "instance_id": 5,
          "object_type": 0,
          "collector_count": 0,
          "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
          "is_online": true,
          "bacnet": {
            "object": {
              "instance": 5,
              "type": 0,
              "name": "SEA.AH1.SAT",
              "description": "AH-1 SUPPLY TEMPERATURE"
            },
            "telemetry": {
              "present_value": 109.2,
              "reliability": "no fault detected",
              "device_type": "10k Thermister",
              "event_state": "normal",
              "units": {
                "raw": "degrees fahrenheit",
                "formatted": "DEG F"
              }
            },
            "status": {
              "in_alarm": false,
              "fault": false,
              "out_of_service": false,
              "overridden": false
            },
            "alarming": {
              "enabled": true,
              "acked_transitions": {
                "to_normal": true,
                "to_offnormal": true,
                "to_fault": true
              },
              "notify": {
                "type": "alarm",
                "notification_class": 0
              },
              "time_delay": 30,
              "limits": {
                "high": 160,
                "low": 45
              },
              "deadband": 1,
              "event_timestamps": {
                "to_off_normal": 5838048000,
                "to_normal": 5838048000,
                "to_fault": 5838048000
              }
            },
            "totalization": {
              "enabled": true,
              "elapsed_active_time": 0,
              "last_reset": 0,
              "ealpsed_inactive_time": 0
            }
          }
        }
      },
      "Get-Binary-Output-Point-Online": {
        "value": {
          "id": "139e612c-83fa-4cc9-8634-834395899346",
          "@controller": "d1ae9060-b89c-48e8-abae-0f78d8f6af9d",
          "created": "2021-06-22T01:36:30+0000",
          "name": "SEA.AH1.ENA",
          "description": "AH-1 ENABLE",
          "instance_id": 0,
          "object_type": 5,
          "collector_count": 0,
          "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
          "is_online": true,
          "bacnet": {
            "object": {
              "instance": 5,
              "type": 4,
              "name": "SEA.SRV.ALARM",
              "description": "SRV ALARM LIGHT"
            },
            "telemetry": {
              "present_value": 0,
              "reliability": "no fault detected",
              "device_type": "LDO",
              "event_state": "normal",
              "state_text": [
                "NORMAL",
                "ALARM"
              ],
              "polarity": "normal",
              "feedback_value": 0,
              "relinquish_default": 0
            },
            "status": {
              "in_alarm": false,
              "fault": false,
              "out_of_service": false,
              "overridden": false
            },
            "priority_array": [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null
            ],
            "alarming": {
              "enabled": true,
              "acked_transitions": {
                "to_normal": true,
                "to_offnormal": true,
                "to_fault": true
              },
              "notify": {
                "type": "alarm",
                "notification_class": 0
              },
              "time_delay": 0
            },
            "totalization": {
              "enabled": true,
              "elapsed_active_time": 0,
              "last_reset": 0,
              "ealpsed_inactive_time": 0
            }
          }
        }
      },
      "Get-Analog-Input-Point": {
        "value": {
          "id": "139e612c-83fa-4cc9-8634-834395899346",
          "@controller": "d1ae9060-b89c-48e8-abae-0f78d8f6af9d",
          "created": "2021-06-22T01:36:30+0000",
          "name": "SEA.AH1.ENA",
          "description": "AH-1 ENABLE",
          "instance_id": 0,
          "object_type": 5,
          "collector_count": 0,
          "@site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
          "is_online": null,
          "bacnet": null
        }
      },
      "Get-Point-List": {
        "value": {
          "count": 13,
          "data": [
            {
              "id": "0247cd05-409b-4c20-ade8-56d170fb9970",
              "controller": "48f6bef2-1d57-4333-b9af-be687876e997",
              "created": 1614381639,
              "name": "SEA.EF1.SS",
              "description": "",
              "object_type": 4,
              "instance_id": 2,
              "site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "bacnet": null
            },
            {
              "id": "15732bb9-22f6-4fac-a66a-deb342cbce54",
              "controller": "4f668b28-c30d-4fc1-b751-7cc30dcc4964",
              "created": 1613745322,
              "name": "SEA.LGT2.DO",
              "description": "",
              "object_type": 4,
              "instance_id": 4,
              "site": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "bacnet": null
            },
            {
              "...": null
            }
          ]
        }
      },
      "Get-Collector-Details": {
        "value": {
          "id": "7a3795f5-9ce4-49d5-a8ff-8d8bb96d6f38",
          "created": "2021-05-27T23:50:17+0000",
          "expires": null,
          "interval": 300,
          "sample_count": 19034,
          "source": {
            "point": {
              "id": "32481fc1-a14e-44e7-a459-9259820b0d96",
              "object_type": 4,
              "instance_id": 0,
              "name": "SEA.AH1.SS",
              "description": "AH-1 FAN S/S"
            },
            "controller": {
              "id": "5a9d2264-72aa-4ec8-bfe5-98ecd4173dda",
              "device_id": 10200,
              "name": "USSEA-HVAC-BMSNODE02"
            },
            "gateway": {
              "id": "7a3795f5-9ce4-49d5-a8ff-8d8bb96d6f38"
            }
          },
          "@site": null
        }
      }
    }
  },
  "tags": [
    {
      "name": "Collectors"
    },
    {
      "name": "Points"
    }
  ]
}